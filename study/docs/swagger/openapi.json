{
    "basePath": "/api", 
    "consumes": [
        "application/json"
    ], 
    "definitions": {
        "ABMCluster": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "abm_services_guids": {
                            "description": "ABMService instance identifiers. One-to-many relation with ABMService.abm_cluster_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "alba_backend_guid": {
                            "description": "AlbaBackend instance identifier. One-to-one relation with AlbaBackend.abm_cluster_guid.", 
                            "type": "string"
                        }, 
                        "config_location": {
                            "description": "Location of the ALBA Manager Arakoon configuration", 
                            "type": "string"
                        }, 
                        "name": {
                            "description": "Name of the ALBA Manager Arakoon cluster", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "config_location", 
                        "name", 
                        "alba_backend_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The ABMCluster class represents the relation between an ALBA Backend and the ABM services."
        }, 
        "ABMService": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "abm_cluster_guid": {
                            "description": "ABMCluster instance identifier. One-to-many relation with ABMCluster.abm_services_guids.", 
                            "type": "string"
                        }, 
                        "service_guid": {
                            "description": "Service instance identifier. One-to-one relation with Service.abm_service_guid.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "abm_cluster_guid", 
                        "service_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The ABMService class represents the junction table between the (ALBA Manager)Service and the ALBA Manager Arakoon cluster."
        }, 
        "APIError": {
            "properties": {
                "error": {
                    "description": "An error code", 
                    "type": "string"
                }, 
                "error_description": {
                    "description": "Descriptive error message", 
                    "type": "string"
                }
            }, 
            "required": [
                "error", 
                "error_description"
            ], 
            "type": "object"
        }, 
        "AlbaBackend": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "abm_cluster_guid": {
                            "description": "ABMCluster instance identifier. One-to-one relation with ABMCluster.alba_backend_guid.", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "alba_id": {
                            "description": "ALBA internal identifier", 
                            "type": "string"
                        }, 
                        "asd_statistics": {
                            "description": "Loads statistics from all it's asds in one call (dynamic property, cache timeout: 5s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "available": {
                            "description": "Returns true if the Backend can be used (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "boolean"
                        }, 
                        "backend_guid": {
                            "description": "Backend instance identifier. One-to-one relation with Backend.alba_backend_guid.", 
                            "type": "string"
                        }, 
                        "linked_backend_guids": {
                            "description": "Returns a list (recursively) of all ALBA backends linked to this ALBA Backend based on the linked AlbaOSDs (dynamic property, cache timeout: 30s)", 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "live_status": {
                            "description": "Retrieve the live status of the ALBA Backend to be displayed in the 'Backends' page in the GUI based on: (dynamic property, cache timeout: 30s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "local_stack": {
                            "description": "Returns a live list of all disks known to this AlbaBackend (dynamic property, cache timeout: 15s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "local_summary": {
                            "description": "A local summary for an ALBA Backend containing information used to show in the GLOBAL ALBA Backend detail page (dynamic property, cache timeout: 15s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "name": {
                            "description": "Returns the Backend's name (dynamic property, cache timeout: 3600s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "ns_data": {
                            "description": "Loads namespace data (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "nsm_clusters_guids": {
                            "description": "NSMCluster instance identifiers. One-to-many relation with NSMCluster.alba_backend_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "osds_guids": {
                            "description": "AlbaOSD instance identifiers. One-to-many relation with AlbaOSD.alba_backend_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "presets": {
                            "description": "Returns the policies active on the node (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "remote_stack": {
                            "description": "Live list of information about remote linked OSDs of type ALBA Backend (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "scaling": {
                            "description": "Scaling for an ALBA Backend can be GLOBAL or LOCAL", 
                            "enum": [
                                "GLOBAL", 
                                "LOCAL"
                            ], 
                            "type": "string"
                        }, 
                        "statistics": {
                            "description": "Returns statistics for all its asds (dynamic property, cache timeout: 5s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "usages": {
                            "description": "Returns an overview of free space, total space and used space (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "object"
                        }
                    }, 
                    "required": [
                        "scaling", 
                        "backend_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The AlbaBackend provides ALBA specific information"
        }, 
        "AlbaDisk": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "alba_node_guid": {
                            "description": "AlbaNode instance identifier. One-to-many relation with AlbaNode.disks_guids.", 
                            "type": "string"
                        }, 
                        "aliases": {
                            "description": "The device's aliases", 
                            "type": "array"
                        }, 
                        "osds_guids": {
                            "description": "AlbaOSD instance identifiers. One-to-many relation with AlbaOSD.alba_disk_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }
                    }, 
                    "required": [
                        "aliases", 
                        "alba_node_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The AlbaDisk represents a disk hosting zero or more ASDs"
        }, 
        "AlbaNode": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "disks_guids": {
                            "description": "AlbaDisk instance identifiers. One-to-many relation with AlbaDisk.alba_node_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "ip": {
                            "description": "IP Address", 
                            "type": "string"
                        }, 
                        "ips": {
                            "description": "Returns the IPs of the node (dynamic property, cache timeout: 3600s)", 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "maintenance_services": {
                            "description": "Returns all maintenance services on this node, grouped by backend name (dynamic property, cache timeout: 30s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "node_id": {
                            "description": "Alba node_id identifier", 
                            "type": "string"
                        }, 
                        "package_information": {
                            "default": {}, 
                            "description": "Information about installed packages and potential available new versions", 
                            "type": "object"
                        }, 
                        "password": {
                            "description": "Password of the AlbaNode", 
                            "type": "string"
                        }, 
                        "port": {
                            "description": "Port", 
                            "type": "integer"
                        }, 
                        "storage_stack": {
                            "description": "Returns a live list of all disks known to this AlbaNode (dynamic property, cache timeout: 15s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "storagerouter_guid": {
                            "description": "StorageRouter instance identifier, null if relation is not set. One-to-one relation with StorageRouter.alba_node_guid.", 
                            "type": "string"
                        }, 
                        "type": {
                            "default": "ASD", 
                            "description": "The type of the AlbaNode", 
                            "enum": [
                                "ASD"
                            ], 
                            "type": "string"
                        }, 
                        "username": {
                            "description": "Username of the AlbaNode", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "password", 
                        "type", 
                        "ip", 
                        "port", 
                        "node_id", 
                        "username"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The AlbaNode contains information about nodes (containing OSDs)"
        }, 
        "AlbaOSD": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "alba_backend_guid": {
                            "description": "AlbaBackend instance identifier. One-to-many relation with AlbaBackend.osds_guids.", 
                            "type": "string"
                        }, 
                        "alba_disk_guid": {
                            "description": "AlbaDisk instance identifier, null if relation is not set. One-to-many relation with AlbaDisk.osds_guids.", 
                            "type": "string"
                        }, 
                        "domain_guid": {
                            "description": "Domain instance identifier, null if relation is not set. One-to-many relation with Domain.osds_guids.", 
                            "type": "string"
                        }, 
                        "metadata": {
                            "description": "Additional information about this OSD, such as connection information (if OSD is an ALBA backend", 
                            "type": "object"
                        }, 
                        "osd_id": {
                            "description": "OSD identifier", 
                            "type": "string"
                        }, 
                        "osd_type": {
                            "description": "Type of OSD (ASD, ALBA_BACKEND)", 
                            "enum": [
                                "ALBA_BACKEND", 
                                "ASD"
                            ], 
                            "type": "string"
                        }, 
                        "statistics": {
                            "description": "Loads statistics from the ASD (dynamic property, cache timeout: 5s)", 
                            "readOnly": true, 
                            "type": "object"
                        }
                    }, 
                    "required": [
                        "osd_id", 
                        "osd_type", 
                        "alba_backend_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The AlbaOSD represents a claimed ASD or an AlbaBackend"
        }, 
        "AlbaProxy": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "service_guid": {
                            "description": "Service instance identifier. One-to-one relation with Service.alba_proxy_guid.", 
                            "type": "string"
                        }, 
                        "storagedriver_guid": {
                            "description": "StorageDriver instance identifier. One-to-many relation with StorageDriver.alba_proxies_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "storagedriver_guid", 
                        "service_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The AlbaProxy class represents the junction table between the (alba)Service and VPool."
        }, 
        "Backend": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "access_rights": {
                            "description": "A condensed extract from the user_rights and client_rights (dynamic property, cache timeout: 3600s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "alba_backend_guid": {
                            "description": "AlbaBackend instance identifier. One-to-one relation with AlbaBackend.backend_guid.", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "available": {
                            "description": "Returns true if the backend can be used (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "boolean"
                        }, 
                        "backend_type_guid": {
                            "description": "BackendType instance identifier. One-to-many relation with BackendType.backends_guids.", 
                            "type": "string"
                        }, 
                        "client_rights_guids": {
                            "description": "BackendClient instance identifiers. One-to-many relation with BackendClient.backend_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "domains_guids": {
                            "description": "BackendDomain instance identifiers. One-to-many relation with BackendDomain.backend_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "linked_guid": {
                            "description": "Returns the GUID of the detail object that's linked to this particular backend. This depends on the backend type. (dynamic property, cache timeout: 3600s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "live_status": {
                            "description": "Retrieve the actual status from the Backend (dynamic property, cache timeout: 30s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "name": {
                            "description": "Name of the Backend.", 
                            "type": "string"
                        }, 
                        "regular_domains": {
                            "description": "Returns a list of domain guids (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "status": {
                            "default": "INSTALLING", 
                            "description": "State of the backend", 
                            "enum": [
                                "FAILURE", 
                                "RUNNING", 
                                "WARNING", 
                                "DELETING", 
                                "INSTALLING"
                            ], 
                            "type": "string"
                        }, 
                        "user_rights_guids": {
                            "description": "BackendUser instance identifiers. One-to-many relation with BackendUser.backend_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }
                    }, 
                    "required": [
                        "name", 
                        "status", 
                        "backend_type_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "A Backend represents an instance of the supported backend types that has been setup with the OVS GUI"
        }, 
        "BackendClient": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "backend_guid": {
                            "description": "Backend instance identifier. One-to-many relation with Backend.client_rights_guids.", 
                            "type": "string"
                        }, 
                        "client_guid": {
                            "description": "Client instance identifier. One-to-many relation with Client.backend_rights_guids.", 
                            "type": "string"
                        }, 
                        "grant": {
                            "description": "Whether the rights are granted (true) or denied (false)", 
                            "type": "boolean"
                        }
                    }, 
                    "required": [
                        "grant", 
                        "client_guid", 
                        "backend_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The BackendClient class represents the junction table between a Client and a Backend, setting granted/deny rights"
        }, 
        "BackendDomain": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "backend_guid": {
                            "description": "Backend instance identifier. One-to-many relation with Backend.domains_guids.", 
                            "type": "string"
                        }, 
                        "domain_guid": {
                            "description": "Domain instance identifier. One-to-many relation with Domain.backends_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "domain_guid", 
                        "backend_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The BackendDomain class represents the junction table between Backend and Domain."
        }, 
        "BackendType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "backends_guids": {
                            "description": "Backend instance identifiers. One-to-many relation with Backend.backend_type_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "code": {
                            "description": "Code representing the BackendType", 
                            "type": "string"
                        }, 
                        "has_plugin": {
                            "description": "Checks whether this BackendType has a plugin installed (dynamic property, cache timeout: 600s)", 
                            "readOnly": true, 
                            "type": "boolean"
                        }, 
                        "name": {
                            "description": "Name of the BackendType", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "code", 
                        "name"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "A BackendType represents one of the OVS supported backend types. Each backend type can - optionally - provide extra things"
        }, 
        "BackendUser": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "backend_guid": {
                            "description": "Backend instance identifier. One-to-many relation with Backend.user_rights_guids.", 
                            "type": "string"
                        }, 
                        "grant": {
                            "description": "Whether the rights is granted (true) or denied (false)", 
                            "type": "boolean"
                        }, 
                        "user_guid": {
                            "description": "User instance identifier. One-to-many relation with User.backend_rights_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "grant", 
                        "backend_guid", 
                        "user_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The BackendUser class represents the junction table between a User and Backend, setting granted/deny rights"
        }, 
        "BearerToken": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "access_token": {
                            "description": "Access token", 
                            "type": "string"
                        }, 
                        "client_guid": {
                            "description": "Client instance identifier. One-to-many relation with Client.tokens_guids.", 
                            "type": "string"
                        }, 
                        "expiration": {
                            "description": "Expiration timestamp", 
                            "type": "integer"
                        }, 
                        "refresh_token": {
                            "description": "Refresh token", 
                            "type": "string"
                        }, 
                        "roles_guids": {
                            "description": "RoleBearerToken instance identifiers. One-to-many relation with RoleBearerToken.token_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }
                    }, 
                    "required": [
                        "expiration", 
                        "client_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The Bearer Token class represents the Bearer tokens used by the API by means of OAuth 2.0"
        }, 
        "Branding": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "css": {
                            "description": "CSS file used by the Brand.", 
                            "type": "string"
                        }, 
                        "description": {
                            "description": "Description of the Brand.", 
                            "type": "string"
                        }, 
                        "is_default": {
                            "description": "Indicates whether this Brand is the default one.", 
                            "type": "boolean"
                        }, 
                        "name": {
                            "description": "Name of the Brand.", 
                            "type": "string"
                        }, 
                        "productname": {
                            "description": "Commercial product name.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "is_default", 
                        "name", 
                        "productname", 
                        "css"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The Branding class represents the specific OEM information."
        }, 
        "Client": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "backend_rights_guids": {
                            "description": "BackendClient instance identifiers. One-to-many relation with BackendClient.client_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "client_id": {
                            "description": "The client_id is in fact our model's guid (dynamic property, cache timeout: 86400s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "client_secret": {
                            "description": "Client secret (application password)", 
                            "type": "string"
                        }, 
                        "grant_type": {
                            "description": "Grant type of the Client", 
                            "enum": [
                                "PASSWORD", 
                                "CLIENT_CREDENTIALS"
                            ], 
                            "type": "string"
                        }, 
                        "name": {
                            "description": "Name of the client", 
                            "type": "string"
                        }, 
                        "ovs_type": {
                            "description": "The type of the client within Open vStorage", 
                            "enum": [
                                "INTERNAL", 
                                "USER"
                            ], 
                            "type": "string"
                        }, 
                        "roles_guids": {
                            "description": "RoleClient instance identifiers. One-to-many relation with RoleClient.client_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "tokens_guids": {
                            "description": "BearerToken instance identifiers. One-to-many relation with BearerToken.client_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "user_guid": {
                            "description": "User instance identifier. One-to-many relation with User.clients_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "ovs_type", 
                        "grant_type", 
                        "user_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The Client class represents a client (application) used by the User. A user might use multiple clients and"
        }, 
        "DataObject": {
            "description": "Root object inherited by all hybrid objects. Shall not be used directly.", 
            "properties": {
                "guid": {
                    "description": "Identifier of the object.", 
                    "type": "string"
                }
            }, 
            "required": [
                "guid"
            ], 
            "title": "DataObject", 
            "type": "object"
        }, 
        "Disk": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "aliases": {
                            "description": "The device aliases", 
                            "type": "array"
                        }, 
                        "is_ssd": {
                            "description": "The type of the disk", 
                            "type": "boolean"
                        }, 
                        "model": {
                            "description": "The disks model", 
                            "type": "string"
                        }, 
                        "name": {
                            "description": "Name of the disk (e.g. sda)", 
                            "type": "string"
                        }, 
                        "partitions_guids": {
                            "description": "DiskPartition instance identifiers. One-to-many relation with DiskPartition.disk_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "serial": {
                            "description": "The disks serial number, if available", 
                            "type": "string"
                        }, 
                        "size": {
                            "description": "Size of the disk, in bytes", 
                            "type": "integer"
                        }, 
                        "state": {
                            "description": "The state of the disk", 
                            "enum": [
                                "FAILURE", 
                                "OK", 
                                "MISSING"
                            ], 
                            "type": "string"
                        }, 
                        "storagerouter_guid": {
                            "description": "StorageRouter instance identifier. One-to-many relation with StorageRouter.disks_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "size", 
                        "is_ssd", 
                        "aliases", 
                        "state", 
                        "name", 
                        "storagerouter_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The Disk class represents physical disks that are available to a storagerouter (technically, they can be"
        }, 
        "DiskPartition": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "aliases": {
                            "description": "The partition aliases", 
                            "type": "array"
                        }, 
                        "disk_guid": {
                            "description": "Disk instance identifier. One-to-many relation with Disk.partitions_guids.", 
                            "type": "string"
                        }, 
                        "filesystem": {
                            "description": "The filesystem used on the partition", 
                            "type": "string"
                        }, 
                        "folder": {
                            "description": "Corrected mountpoint (dynamic property, cache timeout: 3600s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "mountpoint": {
                            "description": "Mountpoint of the partition, null if not mounted", 
                            "type": "string"
                        }, 
                        "name": {
                            "description": "Name of the disk partition (e.g. sda1)", 
                            "type": "string"
                        }, 
                        "offset": {
                            "description": "Offset of the partition", 
                            "type": "integer"
                        }, 
                        "roles": {
                            "default": [], 
                            "description": "A list of claimed roles", 
                            "type": "array"
                        }, 
                        "size": {
                            "description": "Size of the partition", 
                            "type": "integer"
                        }, 
                        "state": {
                            "description": "State of the partition", 
                            "enum": [
                                "FAILURE", 
                                "OK", 
                                "MISSING"
                            ], 
                            "type": "string"
                        }, 
                        "storagedrivers_guids": {
                            "description": "StorageDriverPartition instance identifiers. One-to-many relation with StorageDriverPartition.partition_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "usage": {
                            "description": "A dict representing this partition's usage in a more user-friendly form (dynamic property, cache timeout: 120s)", 
                            "readOnly": true, 
                            "type": "array"
                        }
                    }, 
                    "required": [
                        "roles", 
                        "size", 
                        "state", 
                        "offset", 
                        "aliases", 
                        "disk_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The DiskPartition class represents a partition on a physical Disk"
        }, 
        "Domain": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "backends_guids": {
                            "description": "BackendDomain instance identifiers. One-to-many relation with BackendDomain.domain_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "name": {
                            "description": "The name of the domain", 
                            "type": "string"
                        }, 
                        "osds_guids": {
                            "description": "AlbaOSD instance identifiers. One-to-many relation with AlbaOSD.domain_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "storage_router_layout": {
                            "description": "Creates a dictionary with information about which Storage Routers use this domain as its normal and recovery domain (dynamic property, cache timeout: 5s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "storagerouters_guids": {
                            "description": "StorageRouterDomain instance identifiers. One-to-many relation with StorageRouterDomain.domain_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "vdisks_dtl_guids": {
                            "description": "VDiskDomain instance identifiers. One-to-many relation with VDiskDomain.domain_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }
                    }, 
                    "required": [
                        "name"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The Domain class represents tags given to Storage Routers and backends. These tags or domains can be named anything, but for ease of use,"
        }, 
        "Group": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "description": {
                            "description": "Description of the Group.", 
                            "type": "string"
                        }, 
                        "name": {
                            "description": "Name of the Group.", 
                            "type": "string"
                        }, 
                        "roles_guids": {
                            "description": "RoleGroup instance identifiers. One-to-many relation with RoleGroup.group_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "users_guids": {
                            "description": "User instance identifiers. One-to-many relation with User.group_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }
                    }, 
                    "required": [
                        "name"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The Group class represents a Group. A group is used to bind a set of Users to a set of Roles."
        }, 
        "IscsiNode": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "api_ip": {
                            "description": "IP Address", 
                            "type": "string"
                        }, 
                        "api_port": {
                            "description": "Port", 
                            "type": "integer"
                        }, 
                        "hostname": {
                            "description": "Hostname of the IscsiNode", 
                            "type": "string"
                        }, 
                        "node_id": {
                            "description": "iSCSI identifier", 
                            "type": "string"
                        }, 
                        "package_information": {
                            "default": {}, 
                            "description": "Information about installed packages and potential available new versions", 
                            "type": "object"
                        }, 
                        "password": {
                            "description": "Password of the IscsiNode", 
                            "type": "string"
                        }, 
                        "portals": {
                            "description": "Retrieve the iSCSI portal information (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "status": {
                            "description": "Retrieve the status of the iSCSI Manager Client connection (dynamic property, cache timeout: 30s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "storagerouter_guid": {
                            "description": "StorageRouter instance identifier, null if relation is not set. One-to-one relation with StorageRouter.iscsi_node_guid.", 
                            "type": "string"
                        }, 
                        "targets": {
                            "description": "Retrieve the Targets connected to this Node (dynamic property, cache timeout: 30s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "username": {
                            "description": "Username of the IscsiNode", 
                            "type": "string"
                        }, 
                        "vdisks_guids": {
                            "description": "VDiskIscsiNode instance identifiers. One-to-many relation with VDiskIscsiNode.iscsinode_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }
                    }, 
                    "required": [
                        "node_id", 
                        "username", 
                        "password", 
                        "hostname", 
                        "api_port", 
                        "api_ip"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The IscsiNode contains information about nodes (containing iSCSI Targets)"
        }, 
        "MDSService": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "capacity": {
                            "default": 100, 
                            "description": "The capacity of this MDS, negative means infinite", 
                            "type": "integer"
                        }, 
                        "number": {
                            "description": "The number of the service in case there are more than one", 
                            "type": "integer"
                        }, 
                        "service_guid": {
                            "description": "Service instance identifier. One-to-one relation with Service.mds_service_guid.", 
                            "type": "string"
                        }, 
                        "storagedriver_partitions_guids": {
                            "description": "StorageDriverPartition instance identifiers. One-to-many relation with StorageDriverPartition.mds_service_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "vdisks_guids": {
                            "description": "MDSServiceVDisk instance identifiers. One-to-many relation with MDSServiceVDisk.mds_service_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "vpool_guid": {
                            "description": "VPool instance identifier. One-to-many relation with VPool.mds_services_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "number", 
                        "capacity", 
                        "vpool_guid", 
                        "service_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The MDSService class represents the junction table between the (metadata server) Service and VPool."
        }, 
        "MDSServiceVDisk": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "is_master": {
                            "default": false, 
                            "description": "Is this the master MDSService for this VDisk.", 
                            "type": "boolean"
                        }, 
                        "mds_service_guid": {
                            "description": "MDSService instance identifier. One-to-many relation with MDSService.vdisks_guids.", 
                            "type": "string"
                        }, 
                        "vdisk_guid": {
                            "description": "VDisk instance identifier. One-to-many relation with VDisk.mds_services_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "is_master", 
                        "vdisk_guid", 
                        "mds_service_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The MDSServiceVDisk class represents the junction table between the MetadataServerService and VDisk."
        }, 
        "NSMCluster": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "alba_backend_guid": {
                            "description": "AlbaBackend instance identifier. One-to-many relation with AlbaBackend.nsm_clusters_guids.", 
                            "type": "string"
                        }, 
                        "capacity": {
                            "default": 50, 
                            "description": "The capacity of this NSM, negative means infinite", 
                            "type": "integer"
                        }, 
                        "config_location": {
                            "description": "Location of the ALBA Namespace Manager Arakoon configuration", 
                            "type": "string"
                        }, 
                        "name": {
                            "description": "Name of the ALBA Namespace Manager Arakoon cluster", 
                            "type": "string"
                        }, 
                        "nsm_services_guids": {
                            "description": "NSMService instance identifiers. One-to-many relation with NSMService.nsm_cluster_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "number": {
                            "description": "The number of the service in case there is more than one", 
                            "type": "integer"
                        }
                    }, 
                    "required": [
                        "name", 
                        "config_location", 
                        "capacity", 
                        "number", 
                        "alba_backend_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The NSMCluster class represents the relation between an ALBA Backend and the Namespace Manager services."
        }, 
        "NSMService": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "nsm_cluster_guid": {
                            "description": "NSMCluster instance identifier. One-to-many relation with NSMCluster.nsm_services_guids.", 
                            "type": "string"
                        }, 
                        "service_guid": {
                            "description": "Service instance identifier. One-to-one relation with Service.nsm_service_guid.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "nsm_cluster_guid", 
                        "service_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The NSMService class represents the junction table between the (Namespace Manager)Service and AlbaBackend."
        }, 
        "NbdNode": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "api_ip": {
                            "description": "IP Address", 
                            "type": "string"
                        }, 
                        "api_port": {
                            "description": "Port", 
                            "type": "integer"
                        }, 
                        "exports": {
                            "description": "Retrieve the NBD exports served by this NBD Node. (dynamic property, cache timeout: 30s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "hostname": {
                            "description": "Hostname of the NbdNode", 
                            "type": "string"
                        }, 
                        "mode": {
                            "description": "NBD protocol/program to use, e.g. \"nbd-server\"", 
                            "type": "string"
                        }, 
                        "node_id": {
                            "description": "NBD identifier", 
                            "type": "string"
                        }, 
                        "package_information": {
                            "default": {}, 
                            "description": "Information about installed packages and potential available new versions", 
                            "type": "object"
                        }, 
                        "password": {
                            "description": "Password of the NbdNode", 
                            "type": "string"
                        }, 
                        "status": {
                            "description": "Retrieve the status of the NBD Manager Client connection (dynamic property, cache timeout: 30s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "storagerouter_guid": {
                            "description": "StorageRouter instance identifier, null if relation is not set. One-to-one relation with StorageRouter.nbd_node_guid.", 
                            "type": "string"
                        }, 
                        "username": {
                            "description": "Username of the NbdNode", 
                            "type": "string"
                        }, 
                        "vdisks_guids": {
                            "description": "VDiskNbdNode instance identifiers. One-to-many relation with VDiskNbdNode.nbdnode_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }
                    }, 
                    "required": [
                        "api_ip", 
                        "node_id", 
                        "api_port", 
                        "username", 
                        "password", 
                        "hostname"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The NbdNode contains information about nodes with NBD-Manager."
        }, 
        "Role": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "clients_guids": {
                            "description": "RoleClient instance identifiers. One-to-many relation with RoleClient.role_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "code": {
                            "description": "Contains a code which is referenced from the API code", 
                            "type": "string"
                        }, 
                        "description": {
                            "description": "Description of the Role", 
                            "type": "string"
                        }, 
                        "groups_guids": {
                            "description": "RoleGroup instance identifiers. One-to-many relation with RoleGroup.role_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "name": {
                            "description": "Name of the Role", 
                            "type": "string"
                        }, 
                        "tokens_guids": {
                            "description": "RoleBearerToken instance identifiers. One-to-many relation with RoleBearerToken.role_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }
                    }, 
                    "required": [
                        "name", 
                        "code"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The Role class represents a Role. A Role is used to allow execution of a certain set of"
        }, 
        "RoleBearerToken": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "role_guid": {
                            "description": "Role instance identifier. One-to-many relation with Role.tokens_guids.", 
                            "type": "string"
                        }, 
                        "token_guid": {
                            "description": "BearerToken instance identifier. One-to-many relation with BearerToken.roles_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "token_guid", 
                        "role_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The RoleBearerToken class represents the junction table between Role and BearerToken."
        }, 
        "RoleClient": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "client_guid": {
                            "description": "Client instance identifier. One-to-many relation with Client.roles_guids.", 
                            "type": "string"
                        }, 
                        "role_guid": {
                            "description": "Role instance identifier. One-to-many relation with Role.clients_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "role_guid", 
                        "client_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The RoleClient class represents the junction table between Role and Client."
        }, 
        "RoleGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "group_guid": {
                            "description": "Group instance identifier. One-to-many relation with Group.roles_guids.", 
                            "type": "string"
                        }, 
                        "role_guid": {
                            "description": "Role instance identifier. One-to-many relation with Role.groups_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "role_guid", 
                        "group_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The RoleGroup class represents the junction table between Role and Group."
        }, 
        "Service": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "abm_service_guid": {
                            "description": "ABMService instance identifier. One-to-one relation with ABMService.service_guid.", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "alba_proxy_guid": {
                            "description": "AlbaProxy instance identifier. One-to-one relation with AlbaProxy.service_guid.", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "is_internal": {
                            "description": "Returns whether a service is internally managed by OVS or externally managed by customer (dynamic property, cache timeout: 3600s)", 
                            "readOnly": true, 
                            "type": "boolean"
                        }, 
                        "mds_service_guid": {
                            "description": "MDSService instance identifier. One-to-one relation with MDSService.service_guid.", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "name": {
                            "description": "Name of the Service.", 
                            "type": "string"
                        }, 
                        "nsm_service_guid": {
                            "description": "NSMService instance identifier. One-to-one relation with NSMService.service_guid.", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "ports": {
                            "description": "Port(s) of the Service.", 
                            "type": "array"
                        }, 
                        "storagerouter_guid": {
                            "description": "StorageRouter instance identifier, null if relation is not set. One-to-many relation with StorageRouter.services_guids.", 
                            "type": "string"
                        }, 
                        "type_guid": {
                            "description": "ServiceType instance identifier. One-to-many relation with ServiceType.services_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "name", 
                        "ports", 
                        "type_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "A Service represents some kind of service that needs to be managed by the framework."
        }, 
        "ServiceType": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "name": {
                            "description": "Name of the ServiceType.", 
                            "type": "string"
                        }, 
                        "services_guids": {
                            "description": "Service instance identifiers. One-to-many relation with Service.type_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }
                    }, 
                    "required": [
                        "name"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "A ServiceType represents some kind of service that needs to be managed by the framework."
        }, 
        "StorageDriver": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "alba_proxies_guids": {
                            "description": "AlbaProxy instance identifiers. One-to-many relation with AlbaProxy.storagedriver_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "cluster_ip": {
                            "description": "IP address on which the Storage Driver is listening.", 
                            "type": "string"
                        }, 
                        "cluster_node_config": {
                            "description": "Prepares a ClusterNodeConfig dict for the StorageDriver process (dynamic property, cache timeout: 3600s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "description": {
                            "description": "Description of the Storage Driver.", 
                            "type": "string"
                        }, 
                        "edge_clients": {
                            "description": "Retrieves all edge clients (dynamic property, cache timeout: 30s)", 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "mountpoint": {
                            "description": "Mountpoint from which the Storage Driver serves data", 
                            "type": "string"
                        }, 
                        "name": {
                            "description": "Name of the Storage Driver.", 
                            "type": "string"
                        }, 
                        "partitions_guids": {
                            "description": "StorageDriverPartition instance identifiers. One-to-many relation with StorageDriverPartition.storagedriver_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "ports": {
                            "description": "Ports on which the Storage Driver is listening (management, xmlrpc, dtl, edge).", 
                            "type": "object"
                        }, 
                        "startup_counter": {
                            "default": 0, 
                            "description": "StorageDriver startup counter", 
                            "type": "integer"
                        }, 
                        "statistics": {
                            "description": "Aggregates the Statistics (IOPS, Bandwidth, ...) of the vDisks connected to the Storage Driver. (dynamic property, cache timeout: 4s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "status": {
                            "description": "Fetches the Status of the Storage Driver. (dynamic property, cache timeout: 30s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "storage_ip": {
                            "description": "IP address on which the vpool is shared to hypervisor", 
                            "type": "string"
                        }, 
                        "storagedriver_id": {
                            "description": "ID of the Storage Driver as known by the Storage Drivers.", 
                            "type": "string"
                        }, 
                        "storagerouter_guid": {
                            "description": "StorageRouter instance identifier. One-to-many relation with StorageRouter.storagedrivers_guids.", 
                            "type": "string"
                        }, 
                        "vdisks_guids": {
                            "description": "Gets the vDisk guids served by this StorageDriver. (dynamic property, cache timeout: 15s)", 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "vpool_backend_info": {
                            "description": "Retrieve some additional information about the vPool to be shown in the GUI (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "vpool_guid": {
                            "description": "VPool instance identifier. One-to-many relation with VPool.storagedrivers_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "ports", 
                        "cluster_ip", 
                        "storage_ip", 
                        "storagedriver_id", 
                        "mountpoint", 
                        "startup_counter", 
                        "name", 
                        "vpool_guid", 
                        "storagerouter_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The StorageDriver class represents a Storage Driver. A Storage Driver is an application"
        }, 
        "StorageDriverPartition": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "folder": {
                            "description": "Folder on the mountpoint (dynamic property, cache timeout: 3600s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "mds_service_guid": {
                            "description": "MDSService instance identifier, null if relation is not set. One-to-many relation with MDSService.storagedriver_partitions_guids.", 
                            "type": "string"
                        }, 
                        "number": {
                            "description": "Number of the service in case there is more than one", 
                            "type": "integer"
                        }, 
                        "partition_guid": {
                            "description": "DiskPartition instance identifier. One-to-many relation with DiskPartition.storagedrivers_guids.", 
                            "type": "string"
                        }, 
                        "path": {
                            "description": "Actual path on filesystem, including mountpoint (dynamic property, cache timeout: 3600s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "role": {
                            "description": "Role of the partition", 
                            "enum": [
                                "WRITE", 
                                "SCRUB", 
                                "DTL", 
                                "DB", 
                                "BACKEND"
                            ], 
                            "type": "string"
                        }, 
                        "size": {
                            "description": "Size in bytes configured for use", 
                            "type": "integer"
                        }, 
                        "storagedriver_guid": {
                            "description": "StorageDriver instance identifier. One-to-many relation with StorageDriver.partitions_guids.", 
                            "type": "string"
                        }, 
                        "sub_role": {
                            "description": "Sub-role of this StorageDriverPartition", 
                            "enum": [
                                "MD", 
                                "SCO", 
                                "FCACHE", 
                                "FD", 
                                "MDS", 
                                "TLOG"
                            ], 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "number", 
                        "role", 
                        "storagedriver_guid", 
                        "partition_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The StorageDriverPartition class represents the junction table between StorageDriver and Partitions."
        }, 
        "StorageRouter": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "alba_node_guid": {
                            "description": "AlbaNode instance identifier. One-to-one relation with AlbaNode.storagerouter_guid.", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "description": {
                            "description": "Description of the Storage Router.", 
                            "type": "string"
                        }, 
                        "detailed_status": {
                            "description": "Calculates the current Storage Router detailed status based on various heartbeats (dynamic property, cache timeout: 10s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "disks_guids": {
                            "description": "Disk instance identifiers. One-to-many relation with Disk.storagerouter_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "domains_guids": {
                            "description": "StorageRouterDomain instance identifiers. One-to-many relation with StorageRouterDomain.storagerouter_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "features": {
                            "description": "Returns information about installed/available features (dynamic property, cache timeout: 3600s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "heartbeats": {
                            "default": {}, 
                            "description": "Heartbeat information of various monitors", 
                            "type": "object"
                        }, 
                        "ip": {
                            "description": "IP Address of the Storage Router, if available", 
                            "type": "string"
                        }, 
                        "iscsi_node_guid": {
                            "description": "IscsiNode instance identifier. One-to-one relation with IscsiNode.storagerouter_guid.", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "last_heartbeat": {
                            "description": "When was the last (external) heartbeat send/received", 
                            "type": "number"
                        }, 
                        "machine_id": {
                            "description": "The hardware identifier of the Storage Router", 
                            "type": "string"
                        }, 
                        "name": {
                            "description": "Name of the Storage Router.", 
                            "type": "string"
                        }, 
                        "nbd_node_guid": {
                            "description": "NbdNode instance identifier. One-to-one relation with NbdNode.storagerouter_guid.", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "node_type": {
                            "default": "EXTRA", 
                            "description": "Indicates the node's type", 
                            "enum": [
                                "MASTER", 
                                "EXTRA"
                            ], 
                            "type": "string"
                        }, 
                        "package_information": {
                            "default": {}, 
                            "description": "Information about installed packages and potential available new versions", 
                            "type": "object"
                        }, 
                        "partition_config": {
                            "description": "Returns a dict with all partition information of a given storagerouter (dynamic property, cache timeout: 3600s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "rdma_capable": {
                            "description": "Is this Storage Router RDMA capable", 
                            "type": "boolean"
                        }, 
                        "recovery_domains": {
                            "description": "Returns a list of domain guids with backup flag true (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "regular_domains": {
                            "description": "Returns a list of domain guids with backup flag false (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "services_guids": {
                            "description": "Service instance identifiers. One-to-many relation with Service.storagerouter_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "statistics": {
                            "description": "Aggregates the Statistics (IOPS, Bandwidth, ...) of each vDisk. (dynamic property, cache timeout: 4s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "status": {
                            "description": "Calculates the current Storage Router status based on detailed_status (dynamic property, cache timeout: 10s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "storagedrivers_guids": {
                            "description": "StorageDriver instance identifiers. One-to-many relation with StorageDriver.storagerouter_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "vdisks_guids": {
                            "description": "Gets the vDisk guids served by this StorageRouter. (dynamic property, cache timeout: 15s)", 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "vpools_guids": {
                            "description": "Gets the vPool guids linked to this StorageRouter (trough StorageDriver) (dynamic property, cache timeout: 15s)", 
                            "readOnly": true, 
                            "type": "array"
                        }
                    }, 
                    "required": [
                        "ip", 
                        "heartbeats", 
                        "node_type", 
                        "rdma_capable", 
                        "name"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "A StorageRouter represents the Open vStorage software stack, any (v)machine on which it is installed"
        }, 
        "StorageRouterDomain": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "backup": {
                            "description": "Indicator whether the StorageRouterDomain is used as failure domain or regular domain", 
                            "type": "boolean"
                        }, 
                        "domain_guid": {
                            "description": "Domain instance identifier. One-to-many relation with Domain.storagerouters_guids.", 
                            "type": "string"
                        }, 
                        "storagerouter_guid": {
                            "description": "StorageRouter instance identifier. One-to-many relation with StorageRouter.domains_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "backup", 
                        "storagerouter_guid", 
                        "domain_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The StorageRouterDomain class represents the junction table between StorageRouter and Domain."
        }, 
        "TestDisk": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "children_guids": {
                            "description": "TestDisk instance identifiers. One-to-many relation with TestDisk.parent_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "description": {
                            "description": "Description of the test disk", 
                            "type": "string"
                        }, 
                        "machine_guid": {
                            "description": "TestMachine instance identifier, null if relation is not set. One-to-many relation with TestMachine.disks_guids.", 
                            "type": "string"
                        }, 
                        "name": {
                            "description": "Name of the test disk", 
                            "type": "string"
                        }, 
                        "one_guid": {
                            "description": "TestMachine instance identifier, null if relation is not set. One-to-one relation with TestMachine.one_guid.", 
                            "type": "string"
                        }, 
                        "order": {
                            "default": 0, 
                            "description": "Order of the test disk", 
                            "type": "integer"
                        }, 
                        "parent_guid": {
                            "description": "TestDisk instance identifier, null if relation is not set. One-to-many relation with TestDisk.children_guids.", 
                            "type": "string"
                        }, 
                        "predictable": {
                            "description": "A predictable dynamic property (dynamic property, cache timeout: 5s)", 
                            "readOnly": true, 
                            "type": "integer"
                        }, 
                        "size": {
                            "default": 0, 
                            "description": "Size of the test disk", 
                            "type": "number"
                        }, 
                        "something": {
                            "description": "Some property that can be set", 
                            "type": "string"
                        }, 
                        "something2": {
                            "description": "Some other property that can be set", 
                            "type": "string"
                        }, 
                        "storage_guid": {
                            "description": "TestMachine instance identifier, null if relation is not set. One-to-many relation with TestMachine.stored_disks_guids.", 
                            "type": "string"
                        }, 
                        "the_machines_guids": {
                            "description": "TestEMachine instance identifiers. One-to-many relation with TestEMachine.the_disk_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "type": {
                            "description": "Type of the test disk", 
                            "enum": [
                                "ONE", 
                                "TWO"
                            ], 
                            "type": "string"
                        }, 
                        "updatable_dict": {
                            "description": "Returns an external settable value (dynamic property, cache timeout: 5s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "updatable_int": {
                            "description": "Returns an external settable value (dynamic property, cache timeout: 5s)", 
                            "readOnly": true, 
                            "type": "integer"
                        }, 
                        "updatable_list": {
                            "description": "Returns an external settable value (dynamic property, cache timeout: 5s)", 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "updatable_string": {
                            "description": "Returns an external settable value (dynamic property, cache timeout: 5s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "used_size": {
                            "description": "Returns a certain fake used_size value (dynamic property, cache timeout: 5s)", 
                            "readOnly": true, 
                            "type": "integer"
                        }, 
                        "wrong_type": {
                            "description": "Returns the wrong type, should always fail (dynamic property, cache timeout: 5s)", 
                            "readOnly": true, 
                            "type": "integer"
                        }
                    }, 
                    "required": [
                        "name", 
                        "size", 
                        "order"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "This TestDisk object is used for running unittests."
        }, 
        "TestEMachine": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "description": {
                            "description": "Description of the test machine", 
                            "type": "string"
                        }, 
                        "disks_guids": {
                            "description": "TestDisk instance identifiers. One-to-many relation with TestDisk.machine_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "extended": {
                            "description": "Extended property", 
                            "type": "string"
                        }, 
                        "name": {
                            "description": "Name of the test machine", 
                            "type": "string"
                        }, 
                        "one_guid": {
                            "description": "TestDisk instance identifier. One-to-one relation with TestDisk.one_guid.", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "stored_disks_guids": {
                            "description": "TestDisk instance identifiers. One-to-many relation with TestDisk.storage_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "the_disk_guid": {
                            "description": "TestDisk instance identifier, null if relation is not set. One-to-many relation with TestDisk.the_machines_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "name"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "This ExtendedDisk object is used for running unittests."
        }, 
        "TestStorageDriver": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "name": {
                            "description": "Name of the test machine", 
                            "type": "string"
                        }, 
                        "storagerouter_guid": {
                            "description": "TestStorageRouter instance identifier. One-to-many relation with TestStorageRouter.storagedrivers_guids.", 
                            "type": "string"
                        }, 
                        "vpool_guid": {
                            "description": "TestVPool instance identifier. One-to-many relation with TestVPool.storagedrivers_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "name", 
                        "vpool_guid", 
                        "storagerouter_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "This TestStorageDriver object is used for running unittests."
        }, 
        "TestStorageRouter": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "name": {
                            "description": "Name of the test storage router", 
                            "type": "string"
                        }, 
                        "storagedrivers_guids": {
                            "description": "TestStorageDriver instance identifiers. One-to-many relation with TestStorageDriver.storagerouter_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }
                    }, 
                    "required": [
                        "name"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "This TestStorageRouter object is used for running unittests."
        }, 
        "TestVPool": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "name": {
                            "description": "Name of the test vpool", 
                            "type": "string"
                        }, 
                        "storagedrivers_guids": {
                            "description": "TestStorageDriver instance identifiers. One-to-many relation with TestStorageDriver.vpool_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }
                    }, 
                    "required": [
                        "name"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "This TestVPool object is used for running unittests."
        }, 
        "User": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "backend_rights_guids": {
                            "description": "BackendUser instance identifiers. One-to-many relation with BackendUser.user_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "clients_guids": {
                            "description": "Client instance identifiers. One-to-many relation with Client.user_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "group_guid": {
                            "description": "Group instance identifier. One-to-many relation with Group.users_guids.", 
                            "type": "string"
                        }, 
                        "is_active": {
                            "description": "Indicates whether the User is active.", 
                            "type": "boolean"
                        }, 
                        "language": {
                            "default": "en-US", 
                            "description": "Language of the User.", 
                            "enum": [
                                "en-US", 
                                "nl-NL", 
                                "ru"
                            ], 
                            "type": "string"
                        }, 
                        "password": {
                            "description": "Password of the User.", 
                            "type": "string"
                        }, 
                        "username": {
                            "description": "Username of the User.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "username", 
                        "is_active", 
                        "language", 
                        "password", 
                        "group_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The User class represents a User.  A user is an individual who can perform actions"
        }, 
        "VDisk": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "being_scrubbed": {
                            "description": "Return true when the vDisk is currently being scrubbed (dynamic property, cache timeout: 5s)", 
                            "readOnly": true, 
                            "type": "boolean"
                        }, 
                        "cache_quota": {
                            "description": "Maximum caching space(s) this volume can consume (in Bytes) per cache type. If not null, the caching(s) for this volume has been set manually", 
                            "type": "object"
                        }, 
                        "child_vdisks_guids": {
                            "description": "VDisk instance identifiers. One-to-many relation with VDisk.parent_vdisk_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "cinder_id": {
                            "description": "Cinder Volume ID, for volumes managed through Cinder", 
                            "type": "string"
                        }, 
                        "description": {
                            "description": "Description of the vDisk.", 
                            "type": "string"
                        }, 
                        "devicename": {
                            "description": "The name of the container file (e.g. the VMDK-file) describing the vDisk.", 
                            "type": "string"
                        }, 
                        "domains_dtl_guids": {
                            "description": "VDiskDomain instance identifiers. One-to-many relation with VDiskDomain.vdisk_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "dtl_status": {
                            "description": "Retrieve the DTL status for a vDisk (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "edge_clients": {
                            "description": "Retrieves all edge clients (dynamic property, cache timeout: 30s)", 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "has_manual_dtl": {
                            "default": false, 
                            "description": "Indicates whether the default DTL location has been overruled by customer", 
                            "type": "boolean"
                        }, 
                        "info": {
                            "description": "Fetches the info (see Volume Driver API) for the vDisk. (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "is_vtemplate": {
                            "description": "Returns whether the vdisk is a template (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "boolean"
                        }, 
                        "iscsinodes_guids": {
                            "description": "VDiskIscsiNode instance identifiers. One-to-many relation with VDiskIscsiNode.vdisk_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "mds_services_guids": {
                            "description": "MDSServiceVDisk instance identifiers. One-to-many relation with MDSServiceVDisk.vdisk_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "metadata": {
                            "default": {}, 
                            "description": "Contains fixed metadata about the volume (e.g. lba_size, ...)", 
                            "type": "object"
                        }, 
                        "name": {
                            "description": "Name of the vDisk.", 
                            "type": "string"
                        }, 
                        "nbdnodes_guids": {
                            "description": "VDiskNbdNode instance identifiers. One-to-many relation with VDiskNbdNode.vdisk_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "pagecache_ratio": {
                            "default": 1.0, 
                            "description": "Ratio of the volume's metadata pages that needs to be cached", 
                            "type": "number"
                        }, 
                        "parent_vdisk_guid": {
                            "description": "VDisk instance identifier, null if relation is not set. One-to-many relation with VDisk.child_vdisks_guids.", 
                            "type": "string"
                        }, 
                        "parentsnapshot": {
                            "description": "Points to a parent storage driver parent ID. null if there is no parent Snapshot", 
                            "type": "string"
                        }, 
                        "scrubbing_information": {
                            "description": "Scrubbing metadata set by scrubber with an expiration date", 
                            "type": "object"
                        }, 
                        "size": {
                            "description": "Size of the vDisk in Bytes.", 
                            "type": "integer"
                        }, 
                        "snapshot_ids": {
                            "description": "Fetches the snapshot IDs for this vDisk (dynamic property, cache timeout: 30s)", 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "snapshots": {
                            "description": "Fetches the information of all snapshots for this vDisk (dynamic property, cache timeout: 30s)", 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "statistics": {
                            "description": "Fetches the Statistics for the vDisk. (dynamic property, cache timeout: 4s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "storagedriver_id": {
                            "description": "Returns the Volume Storage Driver ID to which the vDisk is connected. (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "storagerouter_guid": {
                            "description": "Loads the vDisks StorageRouter guid (dynamic property, cache timeout: 15s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "volume_id": {
                            "description": "ID of the vDisk in the Open vStorage Volume Driver.", 
                            "type": "string"
                        }, 
                        "vpool_guid": {
                            "description": "VPool instance identifier. One-to-many relation with VPool.vdisks_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "size", 
                        "metadata", 
                        "devicename", 
                        "has_manual_dtl", 
                        "pagecache_ratio", 
                        "vpool_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The VDisk class represents a vDisk. A vDisk is a Virtual Disk served by Open vStorage."
        }, 
        "VDiskDomain": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "domain_guid": {
                            "description": "Domain instance identifier. One-to-many relation with Domain.vdisks_dtl_guids.", 
                            "type": "string"
                        }, 
                        "vdisk_guid": {
                            "description": "VDisk instance identifier. One-to-many relation with VDisk.domains_dtl_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "vdisk_guid", 
                        "domain_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The VDiskDomain class represents the junction table between vDisk and Domain."
        }, 
        "VDiskIscsiNode": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "iscsinode_guid": {
                            "description": "IscsiNode instance identifier. One-to-many relation with IscsiNode.vdisks_guids.", 
                            "type": "string"
                        }, 
                        "target_acls": {
                            "description": "List of IPs/subnets which are allowed to access the Target", 
                            "type": "array"
                        }, 
                        "target_id": {
                            "description": "Target ID", 
                            "type": "integer"
                        }, 
                        "target_iqn": {
                            "description": "Target IQN", 
                            "type": "string"
                        }, 
                        "vdisk_guid": {
                            "description": "VDisk instance identifier. One-to-many relation with VDisk.iscsinodes_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "target_id", 
                        "target_iqn", 
                        "iscsinode_guid", 
                        "vdisk_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The VDiskIscsiNode class represents the junction table between VDisk and iSCSI Node."
        }, 
        "VDiskNbdNode": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "nbdnode_guid": {
                            "description": "NbdNode instance identifier. One-to-many relation with NbdNode.vdisks_guids.", 
                            "type": "string"
                        }, 
                        "target_acls": {
                            "description": "List of IPs which are allowed to access exported vDisk.", 
                            "type": "array"
                        }, 
                        "vdisk_guid": {
                            "description": "VDisk instance identifier. One-to-many relation with VDisk.nbdnodes_guids.", 
                            "type": "string"
                        }
                    }, 
                    "required": [
                        "nbdnode_guid", 
                        "vdisk_guid"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The VDiskNbdNode class represents the junction table between VDisk and NBD Node."
        }, 
        "VPool": {
            "allOf": [
                {
                    "$ref": "#/definitions/DataObject"
                }, 
                {
                    "properties": {
                        "configuration": {
                            "description": "VPool configuration (dynamic property, cache timeout: 3600s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "connection": {
                            "description": "Connection (IP, URL, Domain name, Zone, ...) for the Storage BackendType.", 
                            "type": "string"
                        }, 
                        "description": {
                            "description": "Description of the vPool", 
                            "type": "string"
                        }, 
                        "extensible": {
                            "description": "Verifies whether this vPool can be extended or not (dynamic property, cache timeout: 60s)", 
                            "readOnly": true
                        }, 
                        "identifier": {
                            "description": "An identifier of this vPool in its current configuration state (dynamic property, cache timeout: 120s)", 
                            "readOnly": true, 
                            "type": "string"
                        }, 
                        "login": {
                            "description": "Login/Username for the Storage BackendType.", 
                            "type": "string"
                        }, 
                        "mds_services_guids": {
                            "description": "MDSService instance identifiers. One-to-many relation with MDSService.vpool_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "metadata": {
                            "description": "Metadata for the backends, as used by the Storage Drivers.", 
                            "type": "object"
                        }, 
                        "metadata_store_bits": {
                            "description": "StorageDrivers deployed for this vPool will make use of this amount of metadata store bits", 
                            "type": "integer"
                        }, 
                        "name": {
                            "description": "Name of the vPool", 
                            "type": "string"
                        }, 
                        "password": {
                            "description": "Password for the Storage BackendType.", 
                            "type": "string"
                        }, 
                        "rdma_enabled": {
                            "default": false, 
                            "description": "Has the vpool been configured to use RDMA for DTL transport, which is only possible if all storagerouters are RDMA capable", 
                            "type": "boolean"
                        }, 
                        "statistics": {
                            "description": "Aggregates the Statistics (IOPS, Bandwidth, ...) of each vDisk served by the vPool. (dynamic property, cache timeout: 4s)", 
                            "readOnly": true, 
                            "type": "object"
                        }, 
                        "status": {
                            "description": "Status of the vPool", 
                            "enum": [
                                "FAILURE", 
                                "DELETING", 
                                "INSTALLING", 
                                "EXTENDING", 
                                "RUNNING", 
                                "SHRINKING"
                            ], 
                            "type": "string"
                        }, 
                        "storagedrivers_guids": {
                            "description": "StorageDriver instance identifiers. One-to-many relation with StorageDriver.vpool_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "vdisks_guids": {
                            "description": "VDisk instance identifiers. One-to-many relation with VDisk.vpool_guid.", 
                            "items": {
                                "type": "string"
                            }, 
                            "readOnly": true, 
                            "type": "array"
                        }, 
                        "volume_potentials": {
                            "description": "Get an overview of all volume potentials for every Storagedriver in this vpool (dynamic property, cache timeout: 60s)", 
                            "readOnly": true, 
                            "type": "object"
                        }
                    }, 
                    "required": [
                        "rdma_enabled", 
                        "status", 
                        "name"
                    ], 
                    "type": "object"
                }
            ], 
            "description": "The VPool class represents a vPool. A vPool is a Virtual Storage Pool, a Filesystem, used to"
        }
    }, 
    "info": {
        "description": "The Open vStorage API.", 
        "title": "Open vStorage", 
        "version": "8"
    }, 
    "paths": {
        "/": {
            "get": {
                "operationId": "api", 
                "responses": {
                    "200": {
                        "descirption": "API metadata", 
                        "schema": {
                            "properties": {
                                "authenticated": {
                                    "description": "Indicates whether the client is authenticated.", 
                                    "type": "boolean"
                                }, 
                                "authentication_metadata": {
                                    "description": "Contains information on the usage of an optional 3rd party OAuth2.0 authentication service.", 
                                    "properties": {
                                        "authorize_uri": {
                                            "description": "The URI to which the user has to be redirect to authenticate.", 
                                            "type": "string"
                                        }, 
                                        "client_id": {
                                            "description": "The client identifier to be used when authenticating.", 
                                            "type": "string"
                                        }, 
                                        "ip": {
                                            "description": "The IP address of the current node.", 
                                            "type": "string"
                                        }, 
                                        "mode": {
                                            "description": "Indicates wheter the \"local\" or a \"remote\" authentication endpoint should be used.", 
                                            "enum": [
                                                "local", 
                                                "remote"
                                            ], 
                                            "type": "string"
                                        }, 
                                        "scope": {
                                            "description": "The scope that has to be requested to the authentication endpoint.", 
                                            "type": "string"
                                        }
                                    }, 
                                    "required": [], 
                                    "title": "AuthenticationMetadata", 
                                    "type": "object"
                                }, 
                                "authentication_state": {
                                    "description": "Povides more information on the \"authenticated\" state of a client.", 
                                    "enum": [
                                        "unauthenticated", 
                                        "invalid_authorization_type", 
                                        "invalid_token", 
                                        "token_expired", 
                                        "inactive_user", 
                                        "authenticated", 
                                        "unexpected_exception"
                                    ], 
                                    "type": "string"
                                }, 
                                "identification": {
                                    "description": "Contains identification information about the API/environment.", 
                                    "properties": {
                                        "cluster_id": {
                                            "description": "Environment identification string.", 
                                            "type": "string"
                                        }
                                    }, 
                                    "required": [
                                        "cluster_id"
                                    ], 
                                    "title": "APIIdentification", 
                                    "type": "object"
                                }, 
                                "plugins": {
                                    "description": "Contains information about plugins active in the system. Each property represents a plugin and the area where they provide functionality.", 
                                    "properties": {
                                        "alba": {
                                            "description": "An array of all areas the plugin provides functionality.", 
                                            "items": {
                                                "type": "string"
                                            }, 
                                            "type": "array"
                                        }, 
                                        "iscsi": {
                                            "description": "An array of all areas the plugin provides functionality.", 
                                            "items": {
                                                "type": "string"
                                            }, 
                                            "type": "array"
                                        }, 
                                        "nbd": {
                                            "description": "An array of all areas the plugin provides functionality.", 
                                            "items": {
                                                "type": "string"
                                            }, 
                                            "type": "array"
                                        }
                                    }, 
                                    "required": [], 
                                    "title": "PluginMetadata", 
                                    "type": "object"
                                }, 
                                "roles": {
                                    "description": "An array of the scopes that were granted to the client.", 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "type": "array"
                                }, 
                                "storagerouter_ips": {
                                    "description": "An array containing the IP addresses of all StorageRouters in the environment.", 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "type": "array"
                                }, 
                                "userguid": {
                                    "description": "The GUID (primary key) of the client's user or null if not available.", 
                                    "type": "string"
                                }, 
                                "username": {
                                    "description": "The username of the client or null if not available.", 
                                    "type": "string"
                                }, 
                                "versions": {
                                    "description": "An array of all versions that this instance of the API supports.", 
                                    "items": {
                                        "type": "integer"
                                    }, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "authenticated", 
                                "authentication_state", 
                                "authentication_metadata", 
                                "username", 
                                "userguid", 
                                "roles", 
                                "identification", 
                                "storagerouter_ips", 
                                "versions", 
                                "plugins"
                            ], 
                            "title": "APIMetadata", 
                            "type": "object"
                        }
                    }
                }, 
                "summary": "Retrieve API metadata"
            }
        }, 
        "/alba/backends/": {
            "get": {
                "operationId": "alba/backends.list", 
                "parameters": [
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "alba_id", 
                            "scaling", 
                            "backend_guid", 
                            "usages", 
                            "presets", 
                            "live_status", 
                            "available", 
                            "name", 
                            "local_summary", 
                            "asd_statistics", 
                            "local_stack", 
                            "remote_stack", 
                            "statistics", 
                            "ns_data", 
                            "linked_backend_guids", 
                            "nsm_clusters_guids", 
                            "osds_guids", 
                            "abm_cluster_guid", 
                            "-alba_id", 
                            "-scaling", 
                            "-backend_guid", 
                            "-usages", 
                            "-presets", 
                            "-live_status", 
                            "-available", 
                            "-name", 
                            "-local_summary", 
                            "-asd_statistics", 
                            "-local_stack", 
                            "-remote_stack", 
                            "-statistics", 
                            "-ns_data", 
                            "-linked_backend_guids", 
                            "-nsm_clusters_guids", 
                            "-osds_guids", 
                            "-abm_cluster_guid"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "alba_id", 
                            "scaling", 
                            "backend_guid", 
                            "usages", 
                            "presets", 
                            "live_status", 
                            "available", 
                            "name", 
                            "local_summary", 
                            "asd_statistics", 
                            "local_stack", 
                            "remote_stack", 
                            "statistics", 
                            "ns_data", 
                            "linked_backend_guids", 
                            "nsm_clusters_guids", 
                            "osds_guids", 
                            "abm_cluster_guid", 
                            "-alba_id", 
                            "-scaling", 
                            "-backend_guid", 
                            "-usages", 
                            "-presets", 
                            "-live_status", 
                            "-available", 
                            "-name", 
                            "-local_summary", 
                            "-asd_statistics", 
                            "-local_stack", 
                            "-remote_stack", 
                            "-statistics", 
                            "-ns_data", 
                            "-linked_backend_guids", 
                            "-nsm_clusters_guids", 
                            "-osds_guids", 
                            "-abm_cluster_guid"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "List all available ALBA Backends", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "alba_id", 
                                        "scaling", 
                                        "backend_guid", 
                                        "usages", 
                                        "presets", 
                                        "live_status", 
                                        "available", 
                                        "name", 
                                        "local_summary", 
                                        "asd_statistics", 
                                        "local_stack", 
                                        "remote_stack", 
                                        "statistics", 
                                        "ns_data", 
                                        "linked_backend_guids", 
                                        "nsm_clusters_guids", 
                                        "osds_guids", 
                                        "abm_cluster_guid", 
                                        "-alba_id", 
                                        "-scaling", 
                                        "-backend_guid", 
                                        "-usages", 
                                        "-presets", 
                                        "-live_status", 
                                        "-available", 
                                        "-name", 
                                        "-local_summary", 
                                        "-asd_statistics", 
                                        "-local_stack", 
                                        "-remote_stack", 
                                        "-statistics", 
                                        "-ns_data", 
                                        "-linked_backend_guids", 
                                        "-nsm_clusters_guids", 
                                        "-osds_guids", 
                                        "-abm_cluster_guid"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "alba_id", 
                                        "scaling", 
                                        "backend_guid", 
                                        "usages", 
                                        "presets", 
                                        "live_status", 
                                        "available", 
                                        "name", 
                                        "local_summary", 
                                        "asd_statistics", 
                                        "local_stack", 
                                        "remote_stack", 
                                        "statistics", 
                                        "ns_data", 
                                        "linked_backend_guids", 
                                        "nsm_clusters_guids", 
                                        "osds_guids", 
                                        "abm_cluster_guid", 
                                        "-alba_id", 
                                        "-scaling", 
                                        "-backend_guid", 
                                        "-usages", 
                                        "-presets", 
                                        "-live_status", 
                                        "-available", 
                                        "-name", 
                                        "-local_summary", 
                                        "-asd_statistics", 
                                        "-local_stack", 
                                        "-remote_stack", 
                                        "-statistics", 
                                        "-ns_data", 
                                        "-linked_backend_guids", 
                                        "-nsm_clusters_guids", 
                                        "-osds_guids", 
                                        "-abm_cluster_guid"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized AlbaBackends.", 
                                    "items": {
                                        "$ref": "#/definitions/AlbaBackend"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "List all available ALBA Backends"
            }, 
            "post": {
                "operationId": "alba/backends.create", 
                "parameters": [
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "alba_id", 
                            "scaling", 
                            "backend_guid", 
                            "usages", 
                            "presets", 
                            "live_status", 
                            "available", 
                            "name", 
                            "local_summary", 
                            "asd_statistics", 
                            "local_stack", 
                            "remote_stack", 
                            "statistics", 
                            "ns_data", 
                            "linked_backend_guids", 
                            "nsm_clusters_guids", 
                            "osds_guids", 
                            "abm_cluster_guid", 
                            "-alba_id", 
                            "-scaling", 
                            "-backend_guid", 
                            "-usages", 
                            "-presets", 
                            "-live_status", 
                            "-available", 
                            "-name", 
                            "-local_summary", 
                            "-asd_statistics", 
                            "-local_stack", 
                            "-remote_stack", 
                            "-statistics", 
                            "-ns_data", 
                            "-linked_backend_guids", 
                            "-nsm_clusters_guids", 
                            "-osds_guids", 
                            "-abm_cluster_guid"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }, 
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "abm_cluster": {
                                    "description": " ABM cluster to claim for this new ALBA Backend", 
                                    "type": "string"
                                }, 
                                "backend_guid": {
                                    "description": " GUID of generic Backend to be linked.", 
                                    "type": "string"
                                }, 
                                "nsm_clusters": {
                                    "description": " NSM clusters to claim for this new ALBA Backend", 
                                    "items": {}, 
                                    "type": "array"
                                }, 
                                "scaling": {
                                    "description": " Scaling for ALBA Backend.", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "backend_guid"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Creates an ALBA Backend", 
                        "schema": {
                            "$ref": "#/definitions/AlbaBackend"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Creates an ALBA Backend"
            }
        }, 
        "/alba/backends/{guid}/": {
            "delete": {
                "operationId": "alba/backends.destroy", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Deletes an ALBA Backend", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Deletes an ALBA Backend"
            }, 
            "get": {
                "operationId": "alba/backends.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "alba_id", 
                            "scaling", 
                            "backend_guid", 
                            "usages", 
                            "presets", 
                            "live_status", 
                            "available", 
                            "name", 
                            "local_summary", 
                            "asd_statistics", 
                            "local_stack", 
                            "remote_stack", 
                            "statistics", 
                            "ns_data", 
                            "linked_backend_guids", 
                            "nsm_clusters_guids", 
                            "osds_guids", 
                            "abm_cluster_guid", 
                            "-alba_id", 
                            "-scaling", 
                            "-backend_guid", 
                            "-usages", 
                            "-presets", 
                            "-live_status", 
                            "-available", 
                            "-name", 
                            "-local_summary", 
                            "-asd_statistics", 
                            "-local_stack", 
                            "-remote_stack", 
                            "-statistics", 
                            "-ns_data", 
                            "-linked_backend_guids", 
                            "-nsm_clusters_guids", 
                            "-osds_guids", 
                            "-abm_cluster_guid"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given ALBA Backend", 
                        "schema": {
                            "$ref": "#/definitions/AlbaBackend"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given ALBA Backend"
            }
        }, 
        "/alba/backends/{guid}/add_preset/": {
            "post": {
                "operationId": "alba/backends.post_add_preset", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "albabackend", 
                        "schema": {
                            "properties": {
                                "compression": {
                                    "description": " Compression type", 
                                    "type": "string"
                                }, 
                                "encryption": {
                                    "description": " Encryption type", 
                                    "type": "string"
                                }, 
                                "fragment_size": {
                                    "description": " Size of a fragment in bytes", 
                                    "type": "integer"
                                }, 
                                "name": {
                                    "description": " Name of preset", 
                                    "type": "string"
                                }, 
                                "policies": {
                                    "description": " Policies linked to the preset", 
                                    "items": {}, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "name", 
                                "compression", 
                                "policies", 
                                "encryption"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Adds a preset to a Backend", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Adds a preset to a Backend"
            }
        }, 
        "/alba/backends/{guid}/add_units/": {
            "post": {
                "operationId": "alba/backends.post_add_units", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "albabackend", 
                        "schema": {
                            "properties": {
                                "osds": {
                                    "description": " List of OSD ids", 
                                    "items": {}, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "osds"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Add storage units to the backend and register with ALBA NSM", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Add storage units to the backend and register with ALBA NSM"
            }
        }, 
        "/alba/backends/{guid}/calculate_safety/": {
            "get": {
                "operationId": "alba/backends.get_calculate_safety", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "description": " ID of the ASD to calculate safety off", 
                        "in": "query", 
                        "name": "asd_id", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Returns the safety resulting the removal of a given Disk", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Returns the safety resulting the removal of a given Disk"
            }
        }, 
        "/alba/backends/{guid}/delete_preset/": {
            "post": {
                "operationId": "alba/backends.post_delete_preset", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "albabackend", 
                        "schema": {
                            "properties": {
                                "name": {
                                    "description": " Name of preset to delete", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "name"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Deletes a preset", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Deletes a preset"
            }
        }, 
        "/alba/backends/{guid}/expand_nsm_clusters/": {
            "post": {
                "operationId": "alba/backends.post_expand_nsm_clusters", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "albabackend", 
                        "schema": {
                            "properties": {
                                "amount": {
                                    "description": " Amount of additional NSM clusters to deploy", 
                                    "type": "integer"
                                }, 
                                "cluster_names": {
                                    "description": " Names of the cluster to claim (Only applicable for externally managed NSM Arakoon clusters)", 
                                    "items": {}, 
                                    "type": "array"
                                }
                            }, 
                            "required": [], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Internally managed NSM Arakoon clusters: Deploy and claim additional NSM Arakoon clusters", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Internally managed NSM Arakoon clusters: Deploy and claim additional NSM Arakoon clusters"
            }
        }, 
        "/alba/backends/{guid}/get_available_actions/": {
            "get": {
                "operationId": "alba/backends.get_get_available_actions", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Gets a list of all available actions", 
                        "schema": {
                            "description": "List of available actions", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Gets a list of all available actions"
            }
        }, 
        "/alba/backends/{guid}/get_config_metadata/": {
            "get": {
                "operationId": "alba/backends.get_get_config_metadata", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Gets the configuration metadata for an ALBA Backend", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Gets the configuration metadata for an ALBA Backend"
            }
        }, 
        "/alba/backends/{guid}/link_alba_backends/": {
            "post": {
                "operationId": "alba/backends.post_link_alba_backends", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "albabackend", 
                        "schema": {
                            "properties": {
                                "metadata": {
                                    "description": " Metadata about the linked ALBA Backend", 
                                    "type": "object"
                                }
                            }, 
                            "required": [
                                "metadata"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Link a GLOBAL ALBA Backend to a LOCAL or another GLOBAL ALBA Backend", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Link a GLOBAL ALBA Backend to a LOCAL or another GLOBAL ALBA Backend"
            }
        }, 
        "/alba/backends/{guid}/unlink_alba_backends/": {
            "post": {
                "operationId": "alba/backends.post_unlink_alba_backends", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "albabackend", 
                        "schema": {
                            "properties": {
                                "linked_guid": {
                                    "description": " Guid of the GLOBAL or LOCAL ALBA Backend which will be unlinked (Can be a local or a remote ALBA Backend)", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "linked_guid"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Unlink a LOCAL or GLOBAL ALBA Backend from a GLOBAL ALBA Backend", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Unlink a LOCAL or GLOBAL ALBA Backend from a GLOBAL ALBA Backend"
            }
        }, 
        "/alba/backends/{guid}/update_preset/": {
            "post": {
                "operationId": "alba/backends.post_update_preset", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "albabackend", 
                        "schema": {
                            "properties": {
                                "name": {
                                    "description": " Name of preset", 
                                    "type": "string"
                                }, 
                                "policies": {
                                    "description": " Policies to set", 
                                    "items": {}, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "name", 
                                "policies"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Updates a preset's policies to a Backend", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Updates a preset's policies to a Backend"
            }
        }, 
        "/alba/nodes/": {
            "get": {
                "operationId": "alba/nodes.list", 
                "parameters": [
                    {
                        "description": " If True and IP provided, return list of single ALBA node, If True and no IP provided, return all ALBA nodes else return modeled ALBA nodes", 
                        "in": "query", 
                        "name": "discover", 
                        "required": false, 
                        "type": "boolean"
                    }, 
                    {
                        "description": " IP of ALBA node to retrieve", 
                        "in": "query", 
                        "name": "ip", 
                        "required": false, 
                        "type": "string"
                    }, 
                    {
                        "description": " ID of the ALBA node", 
                        "in": "query", 
                        "name": "node_id", 
                        "required": false, 
                        "type": "string"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "password", 
                            "type", 
                            "package_information", 
                            "ip", 
                            "port", 
                            "node_id", 
                            "username", 
                            "storagerouter_guid", 
                            "ips", 
                            "storage_stack", 
                            "maintenance_services", 
                            "disks_guids", 
                            "-password", 
                            "-type", 
                            "-package_information", 
                            "-ip", 
                            "-port", 
                            "-node_id", 
                            "-username", 
                            "-storagerouter_guid", 
                            "-ips", 
                            "-storage_stack", 
                            "-maintenance_services", 
                            "-disks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "password", 
                            "type", 
                            "package_information", 
                            "ip", 
                            "port", 
                            "node_id", 
                            "username", 
                            "storagerouter_guid", 
                            "ips", 
                            "storage_stack", 
                            "maintenance_services", 
                            "disks_guids", 
                            "-password", 
                            "-type", 
                            "-package_information", 
                            "-ip", 
                            "-port", 
                            "-node_id", 
                            "-username", 
                            "-storagerouter_guid", 
                            "-ips", 
                            "-storage_stack", 
                            "-maintenance_services", 
                            "-disks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "List all available ALBA Nodes", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "password", 
                                        "type", 
                                        "package_information", 
                                        "ip", 
                                        "port", 
                                        "node_id", 
                                        "username", 
                                        "storagerouter_guid", 
                                        "ips", 
                                        "storage_stack", 
                                        "maintenance_services", 
                                        "disks_guids", 
                                        "-password", 
                                        "-type", 
                                        "-package_information", 
                                        "-ip", 
                                        "-port", 
                                        "-node_id", 
                                        "-username", 
                                        "-storagerouter_guid", 
                                        "-ips", 
                                        "-storage_stack", 
                                        "-maintenance_services", 
                                        "-disks_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "password", 
                                        "type", 
                                        "package_information", 
                                        "ip", 
                                        "port", 
                                        "node_id", 
                                        "username", 
                                        "storagerouter_guid", 
                                        "ips", 
                                        "storage_stack", 
                                        "maintenance_services", 
                                        "disks_guids", 
                                        "-password", 
                                        "-type", 
                                        "-package_information", 
                                        "-ip", 
                                        "-port", 
                                        "-node_id", 
                                        "-username", 
                                        "-storagerouter_guid", 
                                        "-ips", 
                                        "-storage_stack", 
                                        "-maintenance_services", 
                                        "-disks_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized AlbaNodes.", 
                                    "items": {
                                        "$ref": "#/definitions/AlbaNode"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "List all available ALBA Nodes"
            }, 
            "post": {
                "operationId": "alba/nodes.create", 
                "parameters": [
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "node_id": {
                                    "description": " ID of the ALBA node to create", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "node_id"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Add a ALBA Node with a given node_id to the model", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Add a ALBA Node with a given node_id to the model"
            }
        }, 
        "/alba/nodes/{guid}/": {
            "delete": {
                "operationId": "alba/nodes.destroy", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Delete an ALBA Node", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Delete an ALBA Node"
            }, 
            "get": {
                "operationId": "alba/nodes.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "password", 
                            "type", 
                            "package_information", 
                            "ip", 
                            "port", 
                            "node_id", 
                            "username", 
                            "storagerouter_guid", 
                            "ips", 
                            "storage_stack", 
                            "maintenance_services", 
                            "disks_guids", 
                            "-password", 
                            "-type", 
                            "-package_information", 
                            "-ip", 
                            "-port", 
                            "-node_id", 
                            "-username", 
                            "-storagerouter_guid", 
                            "-ips", 
                            "-storage_stack", 
                            "-maintenance_services", 
                            "-disks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given ALBA Backend", 
                        "schema": {
                            "$ref": "#/definitions/AlbaNode"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given ALBA Backend"
            }
        }, 
        "/alba/nodes/{guid}/get_logfiles/": {
            "get": {
                "operationId": "alba/nodes.get_get_logfiles", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Retrieve the logfiles of an ALBA Node", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Retrieve the logfiles of an ALBA Node"
            }
        }, 
        "/alba/nodes/{guid}/initialize_disks/": {
            "post": {
                "operationId": "alba/nodes.post_initialize_disks", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "albanode", 
                        "schema": {
                            "properties": {
                                "disks": {
                                    "description": " Disks to initialize (dict from type {disk_alias (str): amount of asds (int)})", 
                                    "type": "object"
                                }
                            }, 
                            "required": [
                                "disks"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Initialize the Disks", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Initialize the Disks"
            }
        }, 
        "/alba/nodes/{guid}/remove_disk/": {
            "post": {
                "operationId": "alba/nodes.post_remove_disk", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "albanode", 
                        "schema": {
                            "properties": {
                                "disk": {
                                    "description": " Disk to remove", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "disk"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Remove the Disk", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Remove the Disk"
            }
        }, 
        "/alba/nodes/{guid}/replace_node/": {
            "post": {
                "operationId": "alba/nodes.post_replace_node", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "albanode", 
                        "schema": {
                            "properties": {
                                "new_node_id": {
                                    "description": " ID of the new ALBA node", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "new_node_id"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Replace an existing ALBA Node with a newly configured node (only possible if IPs are identical)", 
                        "schema": {
                            "description": "A task identifier. The task returns: Celery async task result", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Replace an existing ALBA Node with a newly configured node (only possible if IPs are identical)"
            }
        }, 
        "/alba/nodes/{guid}/reset_asd/": {
            "post": {
                "operationId": "alba/nodes.post_reset_asd", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "albanode", 
                        "schema": {
                            "properties": {
                                "asd_id": {
                                    "description": " ASD ID to reset", 
                                    "type": "string"
                                }, 
                                "safety": {
                                    "description": " Safety to maintain", 
                                    "type": "object"
                                }
                            }, 
                            "required": [
                                "asd_id", 
                                "safety"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Remove and re-add an ASD", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Remove and re-add an ASD"
            }
        }, 
        "/alba/nodes/{guid}/restart_asd/": {
            "post": {
                "operationId": "alba/nodes.post_restart_asd", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "albanode", 
                        "schema": {
                            "properties": {
                                "asd_id": {
                                    "description": " The ASD to restart", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "asd_id"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Restart an ASD process", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Restart an ASD process"
            }
        }, 
        "/alba/nodes/{guid}/restart_disk/": {
            "post": {
                "operationId": "alba/nodes.post_restart_disk", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "albanode", 
                        "schema": {
                            "properties": {
                                "disk": {
                                    "description": " Disk to restart", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "disk"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Restart a Disk", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Restart a Disk"
            }
        }, 
        "/backends/": {
            "get": {
                "operationId": "backends.list", 
                "parameters": [
                    {
                        "description": " Optional BackendType code to filter", 
                        "in": "query", 
                        "name": "backend_type", 
                        "required": false, 
                        "type": "string"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "name", 
                            "status", 
                            "backend_type_guid", 
                            "live_status", 
                            "linked_guid", 
                            "access_rights", 
                            "available", 
                            "regular_domains", 
                            "domains_guids", 
                            "client_rights_guids", 
                            "alba_backend_guid", 
                            "user_rights_guids", 
                            "-name", 
                            "-status", 
                            "-backend_type_guid", 
                            "-live_status", 
                            "-linked_guid", 
                            "-access_rights", 
                            "-available", 
                            "-regular_domains", 
                            "-domains_guids", 
                            "-client_rights_guids", 
                            "-alba_backend_guid", 
                            "-user_rights_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "name", 
                            "status", 
                            "backend_type_guid", 
                            "live_status", 
                            "linked_guid", 
                            "access_rights", 
                            "available", 
                            "regular_domains", 
                            "domains_guids", 
                            "client_rights_guids", 
                            "alba_backend_guid", 
                            "user_rights_guids", 
                            "-name", 
                            "-status", 
                            "-backend_type_guid", 
                            "-live_status", 
                            "-linked_guid", 
                            "-access_rights", 
                            "-available", 
                            "-regular_domains", 
                            "-domains_guids", 
                            "-client_rights_guids", 
                            "-alba_backend_guid", 
                            "-user_rights_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Overview of all Backends (from a certain type, if given) on the LOCAL Node (or a remote one)", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "name", 
                                        "status", 
                                        "backend_type_guid", 
                                        "live_status", 
                                        "linked_guid", 
                                        "access_rights", 
                                        "available", 
                                        "regular_domains", 
                                        "domains_guids", 
                                        "client_rights_guids", 
                                        "alba_backend_guid", 
                                        "user_rights_guids", 
                                        "-name", 
                                        "-status", 
                                        "-backend_type_guid", 
                                        "-live_status", 
                                        "-linked_guid", 
                                        "-access_rights", 
                                        "-available", 
                                        "-regular_domains", 
                                        "-domains_guids", 
                                        "-client_rights_guids", 
                                        "-alba_backend_guid", 
                                        "-user_rights_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "name", 
                                        "status", 
                                        "backend_type_guid", 
                                        "live_status", 
                                        "linked_guid", 
                                        "access_rights", 
                                        "available", 
                                        "regular_domains", 
                                        "domains_guids", 
                                        "client_rights_guids", 
                                        "alba_backend_guid", 
                                        "user_rights_guids", 
                                        "-name", 
                                        "-status", 
                                        "-backend_type_guid", 
                                        "-live_status", 
                                        "-linked_guid", 
                                        "-access_rights", 
                                        "-available", 
                                        "-regular_domains", 
                                        "-domains_guids", 
                                        "-client_rights_guids", 
                                        "-alba_backend_guid", 
                                        "-user_rights_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized Backends.", 
                                    "items": {
                                        "$ref": "#/definitions/Backend"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Overview of all Backends (from a certain type, if given) on the LOCAL Node (or a remote one)"
            }, 
            "post": {
                "operationId": "backends.create", 
                "parameters": [
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "name", 
                            "status", 
                            "backend_type_guid", 
                            "live_status", 
                            "linked_guid", 
                            "access_rights", 
                            "available", 
                            "regular_domains", 
                            "domains_guids", 
                            "client_rights_guids", 
                            "alba_backend_guid", 
                            "user_rights_guids", 
                            "-name", 
                            "-status", 
                            "-backend_type_guid", 
                            "-live_status", 
                            "-linked_guid", 
                            "-access_rights", 
                            "-available", 
                            "-regular_domains", 
                            "-domains_guids", 
                            "-client_rights_guids", 
                            "-alba_backend_guid", 
                            "-user_rights_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }, 
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "backend_type_guid": {
                                    "description": " GUID of backend type.", 
                                    "type": "string"
                                }, 
                                "name": {
                                    "description": " Name of the Backend.", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "name", 
                                "backend_type_guid"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Creates a Backend", 
                        "schema": {
                            "$ref": "#/definitions/Backend"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Creates a Backend"
            }
        }, 
        "/backends/{guid}/": {
            "get": {
                "operationId": "backends.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "name", 
                            "status", 
                            "backend_type_guid", 
                            "live_status", 
                            "linked_guid", 
                            "access_rights", 
                            "available", 
                            "regular_domains", 
                            "domains_guids", 
                            "client_rights_guids", 
                            "alba_backend_guid", 
                            "user_rights_guids", 
                            "-name", 
                            "-status", 
                            "-backend_type_guid", 
                            "-live_status", 
                            "-linked_guid", 
                            "-access_rights", 
                            "-available", 
                            "-regular_domains", 
                            "-domains_guids", 
                            "-client_rights_guids", 
                            "-alba_backend_guid", 
                            "-user_rights_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given Backend", 
                        "schema": {
                            "$ref": "#/definitions/Backend"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given Backend"
            }
        }, 
        "/backends/{guid}/configure_rights/": {
            "post": {
                "operationId": "backends.post_configure_rights", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "backend", 
                        "schema": {
                            "properties": {
                                "new_rights": {
                                    "description": " New access rights", 
                                    "type": "object"
                                }
                            }, 
                            "required": [
                                "new_rights"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Configures the access rights for this Backend", 
                        "schema": {
                            "description": "New access rights", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Configures the access rights for this Backend"
            }
        }, 
        "/backends/{guid}/set_domains/": {
            "post": {
                "operationId": "backends.post_set_domains", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "backend", 
                        "schema": {
                            "properties": {
                                "domain_guids": {
                                    "description": " A list of Domain guids", 
                                    "items": {}, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "domain_guids"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Configures the given Domains to the Storage Router."
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Configures the given Domains to the Storage Router."
            }
        }, 
        "/backendtypes/": {
            "get": {
                "operationId": "backendtypes.list", 
                "parameters": [
                    {
                        "description": " Optional filter for BackendTypes", 
                        "in": "query", 
                        "name": "query", 
                        "required": false, 
                        "type": "string"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "code", 
                            "name", 
                            "has_plugin", 
                            "backends_guids", 
                            "-code", 
                            "-name", 
                            "-has_plugin", 
                            "-backends_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "code", 
                            "name", 
                            "has_plugin", 
                            "backends_guids", 
                            "-code", 
                            "-name", 
                            "-has_plugin", 
                            "-backends_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Overview of all Backend Types", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "code", 
                                        "name", 
                                        "has_plugin", 
                                        "backends_guids", 
                                        "-code", 
                                        "-name", 
                                        "-has_plugin", 
                                        "-backends_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "code", 
                                        "name", 
                                        "has_plugin", 
                                        "backends_guids", 
                                        "-code", 
                                        "-name", 
                                        "-has_plugin", 
                                        "-backends_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized BackendTypes.", 
                                    "items": {
                                        "$ref": "#/definitions/BackendType"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Overview of all Backend Types"
            }
        }, 
        "/backendtypes/{guid}/": {
            "get": {
                "operationId": "backendtypes.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "code", 
                            "name", 
                            "has_plugin", 
                            "backends_guids", 
                            "-code", 
                            "-name", 
                            "-has_plugin", 
                            "-backends_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given Backend Type", 
                        "schema": {
                            "$ref": "#/definitions/BackendType"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given Backend Type"
            }
        }, 
        "/branding/": {
            "get": {
                "operationId": "branding.list", 
                "parameters": [
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "description", 
                            "is_default", 
                            "name", 
                            "productname", 
                            "css", 
                            "-description", 
                            "-is_default", 
                            "-name", 
                            "-productname", 
                            "-css"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "description", 
                            "is_default", 
                            "name", 
                            "productname", 
                            "css", 
                            "-description", 
                            "-is_default", 
                            "-name", 
                            "-productname", 
                            "-css"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Overview of all Brandings", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "description", 
                                        "is_default", 
                                        "name", 
                                        "productname", 
                                        "css", 
                                        "-description", 
                                        "-is_default", 
                                        "-name", 
                                        "-productname", 
                                        "-css"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "description", 
                                        "is_default", 
                                        "name", 
                                        "productname", 
                                        "css", 
                                        "-description", 
                                        "-is_default", 
                                        "-name", 
                                        "-productname", 
                                        "-css"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized Brandings.", 
                                    "items": {
                                        "$ref": "#/definitions/Branding"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Overview of all Brandings"
            }
        }, 
        "/branding/{guid}/": {
            "get": {
                "operationId": "branding.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "description", 
                            "is_default", 
                            "name", 
                            "productname", 
                            "css", 
                            "-description", 
                            "-is_default", 
                            "-name", 
                            "-productname", 
                            "-css"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given Branding", 
                        "schema": {
                            "$ref": "#/definitions/Branding"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given Branding"
            }
        }, 
        "/clients/": {
            "get": {
                "operationId": "clients.list", 
                "parameters": [
                    {
                        "description": " User guid to filter the clients", 
                        "in": "query", 
                        "name": "userguid", 
                        "required": false, 
                        "type": "string"
                    }, 
                    {
                        "description": " Filter on the Client's ovs_type", 
                        "in": "query", 
                        "name": "ovs_type", 
                        "required": false, 
                        "type": "string"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "ovs_type", 
                            "name", 
                            "client_secret", 
                            "grant_type", 
                            "user_guid", 
                            "client_id", 
                            "tokens_guids", 
                            "backend_rights_guids", 
                            "roles_guids", 
                            "-ovs_type", 
                            "-name", 
                            "-client_secret", 
                            "-grant_type", 
                            "-user_guid", 
                            "-client_id", 
                            "-tokens_guids", 
                            "-backend_rights_guids", 
                            "-roles_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "ovs_type", 
                            "name", 
                            "client_secret", 
                            "grant_type", 
                            "user_guid", 
                            "client_id", 
                            "tokens_guids", 
                            "backend_rights_guids", 
                            "roles_guids", 
                            "-ovs_type", 
                            "-name", 
                            "-client_secret", 
                            "-grant_type", 
                            "-user_guid", 
                            "-client_id", 
                            "-tokens_guids", 
                            "-backend_rights_guids", 
                            "-roles_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Lists all available Clients where the logged in user has access to", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "ovs_type", 
                                        "name", 
                                        "client_secret", 
                                        "grant_type", 
                                        "user_guid", 
                                        "client_id", 
                                        "tokens_guids", 
                                        "backend_rights_guids", 
                                        "roles_guids", 
                                        "-ovs_type", 
                                        "-name", 
                                        "-client_secret", 
                                        "-grant_type", 
                                        "-user_guid", 
                                        "-client_id", 
                                        "-tokens_guids", 
                                        "-backend_rights_guids", 
                                        "-roles_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "ovs_type", 
                                        "name", 
                                        "client_secret", 
                                        "grant_type", 
                                        "user_guid", 
                                        "client_id", 
                                        "tokens_guids", 
                                        "backend_rights_guids", 
                                        "roles_guids", 
                                        "-ovs_type", 
                                        "-name", 
                                        "-client_secret", 
                                        "-grant_type", 
                                        "-user_guid", 
                                        "-client_id", 
                                        "-tokens_guids", 
                                        "-backend_rights_guids", 
                                        "-roles_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized Clients.", 
                                    "items": {
                                        "$ref": "#/definitions/Client"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Lists all available Clients where the logged in user has access to"
            }, 
            "post": {
                "operationId": "clients.create", 
                "parameters": [
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "ovs_type", 
                            "name", 
                            "client_secret", 
                            "grant_type", 
                            "user_guid", 
                            "client_id", 
                            "tokens_guids", 
                            "backend_rights_guids", 
                            "roles_guids", 
                            "-ovs_type", 
                            "-name", 
                            "-client_secret", 
                            "-grant_type", 
                            "-user_guid", 
                            "-client_id", 
                            "-tokens_guids", 
                            "-backend_rights_guids", 
                            "-roles_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }, 
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "role_guids": {
                                    "description": " The GUIDs of the roles where the client should get access to", 
                                    "type": "string"
                                }
                            }, 
                            "required": [], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Creates a Client", 
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Creates a Client"
            }
        }, 
        "/clients/{guid}/": {
            "delete": {
                "operationId": "clients.destroy", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deletes a User"
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Deletes a User"
            }, 
            "get": {
                "operationId": "clients.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "ovs_type", 
                            "name", 
                            "client_secret", 
                            "grant_type", 
                            "user_guid", 
                            "client_id", 
                            "tokens_guids", 
                            "backend_rights_guids", 
                            "roles_guids", 
                            "-ovs_type", 
                            "-name", 
                            "-client_secret", 
                            "-grant_type", 
                            "-user_guid", 
                            "-client_id", 
                            "-tokens_guids", 
                            "-backend_rights_guids", 
                            "-roles_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given Client", 
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given Client"
            }
        }, 
        "/diskpartitions/": {
            "get": {
                "operationId": "diskpartitions.list", 
                "parameters": [
                    {
                        "description": " Disk guid to get the partitions from", 
                        "in": "query", 
                        "name": "diskguid", 
                        "required": false, 
                        "type": "string"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "roles", 
                            "size", 
                            "state", 
                            "offset", 
                            "filesystem", 
                            "name", 
                            "mountpoint", 
                            "aliases", 
                            "disk_guid", 
                            "folder", 
                            "usage", 
                            "storagedrivers_guids", 
                            "-roles", 
                            "-size", 
                            "-state", 
                            "-offset", 
                            "-filesystem", 
                            "-name", 
                            "-mountpoint", 
                            "-aliases", 
                            "-disk_guid", 
                            "-folder", 
                            "-usage", 
                            "-storagedrivers_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "roles", 
                            "size", 
                            "state", 
                            "offset", 
                            "filesystem", 
                            "name", 
                            "mountpoint", 
                            "aliases", 
                            "disk_guid", 
                            "folder", 
                            "usage", 
                            "storagedrivers_guids", 
                            "-roles", 
                            "-size", 
                            "-state", 
                            "-offset", 
                            "-filesystem", 
                            "-name", 
                            "-mountpoint", 
                            "-aliases", 
                            "-disk_guid", 
                            "-folder", 
                            "-usage", 
                            "-storagedrivers_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Overview of all Disks", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "roles", 
                                        "size", 
                                        "state", 
                                        "offset", 
                                        "filesystem", 
                                        "name", 
                                        "mountpoint", 
                                        "aliases", 
                                        "disk_guid", 
                                        "folder", 
                                        "usage", 
                                        "storagedrivers_guids", 
                                        "-roles", 
                                        "-size", 
                                        "-state", 
                                        "-offset", 
                                        "-filesystem", 
                                        "-name", 
                                        "-mountpoint", 
                                        "-aliases", 
                                        "-disk_guid", 
                                        "-folder", 
                                        "-usage", 
                                        "-storagedrivers_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "roles", 
                                        "size", 
                                        "state", 
                                        "offset", 
                                        "filesystem", 
                                        "name", 
                                        "mountpoint", 
                                        "aliases", 
                                        "disk_guid", 
                                        "folder", 
                                        "usage", 
                                        "storagedrivers_guids", 
                                        "-roles", 
                                        "-size", 
                                        "-state", 
                                        "-offset", 
                                        "-filesystem", 
                                        "-name", 
                                        "-mountpoint", 
                                        "-aliases", 
                                        "-disk_guid", 
                                        "-folder", 
                                        "-usage", 
                                        "-storagedrivers_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized DiskPartitions.", 
                                    "items": {
                                        "$ref": "#/definitions/DiskPartition"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Overview of all Disks"
            }
        }, 
        "/diskpartitions/{guid}/": {
            "get": {
                "operationId": "diskpartitions.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "roles", 
                            "size", 
                            "state", 
                            "offset", 
                            "filesystem", 
                            "name", 
                            "mountpoint", 
                            "aliases", 
                            "disk_guid", 
                            "folder", 
                            "usage", 
                            "storagedrivers_guids", 
                            "-roles", 
                            "-size", 
                            "-state", 
                            "-offset", 
                            "-filesystem", 
                            "-name", 
                            "-mountpoint", 
                            "-aliases", 
                            "-disk_guid", 
                            "-folder", 
                            "-usage", 
                            "-storagedrivers_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given Disk Partition", 
                        "schema": {
                            "$ref": "#/definitions/DiskPartition"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given Disk Partition"
            }
        }, 
        "/disks/": {
            "get": {
                "operationId": "disks.list", 
                "parameters": [
                    {
                        "description": " The StorageRouter to get the disks from", 
                        "in": "query", 
                        "name": "storagerouterguid", 
                        "required": false, 
                        "type": "string"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "size", 
                            "is_ssd", 
                            "aliases", 
                            "model", 
                            "serial", 
                            "state", 
                            "name", 
                            "storagerouter_guid", 
                            "partitions_guids", 
                            "-size", 
                            "-is_ssd", 
                            "-aliases", 
                            "-model", 
                            "-serial", 
                            "-state", 
                            "-name", 
                            "-storagerouter_guid", 
                            "-partitions_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "size", 
                            "is_ssd", 
                            "aliases", 
                            "model", 
                            "serial", 
                            "state", 
                            "name", 
                            "storagerouter_guid", 
                            "partitions_guids", 
                            "-size", 
                            "-is_ssd", 
                            "-aliases", 
                            "-model", 
                            "-serial", 
                            "-state", 
                            "-name", 
                            "-storagerouter_guid", 
                            "-partitions_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Overview of all disks", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "size", 
                                        "is_ssd", 
                                        "aliases", 
                                        "model", 
                                        "serial", 
                                        "state", 
                                        "name", 
                                        "storagerouter_guid", 
                                        "partitions_guids", 
                                        "-size", 
                                        "-is_ssd", 
                                        "-aliases", 
                                        "-model", 
                                        "-serial", 
                                        "-state", 
                                        "-name", 
                                        "-storagerouter_guid", 
                                        "-partitions_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "size", 
                                        "is_ssd", 
                                        "aliases", 
                                        "model", 
                                        "serial", 
                                        "state", 
                                        "name", 
                                        "storagerouter_guid", 
                                        "partitions_guids", 
                                        "-size", 
                                        "-is_ssd", 
                                        "-aliases", 
                                        "-model", 
                                        "-serial", 
                                        "-state", 
                                        "-name", 
                                        "-storagerouter_guid", 
                                        "-partitions_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized Disks.", 
                                    "items": {
                                        "$ref": "#/definitions/Disk"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Overview of all disks"
            }
        }, 
        "/disks/{guid}/": {
            "get": {
                "operationId": "disks.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "size", 
                            "is_ssd", 
                            "aliases", 
                            "model", 
                            "serial", 
                            "state", 
                            "name", 
                            "storagerouter_guid", 
                            "partitions_guids", 
                            "-size", 
                            "-is_ssd", 
                            "-aliases", 
                            "-model", 
                            "-serial", 
                            "-state", 
                            "-name", 
                            "-storagerouter_guid", 
                            "-partitions_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given disk", 
                        "schema": {
                            "$ref": "#/definitions/Disk"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given disk"
            }
        }, 
        "/domains/": {
            "get": {
                "operationId": "domains.list", 
                "parameters": [
                    {
                        "description": " Optional vDisk GUID. If passed in, only domains suitable for this vDisk will be returned", 
                        "in": "query", 
                        "name": "vdisk_guid", 
                        "required": false, 
                        "type": "string"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "name", 
                            "storage_router_layout", 
                            "backends_guids", 
                            "storagerouters_guids", 
                            "osds_guids", 
                            "vdisks_dtl_guids", 
                            "-name", 
                            "-storage_router_layout", 
                            "-backends_guids", 
                            "-storagerouters_guids", 
                            "-osds_guids", 
                            "-vdisks_dtl_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "name", 
                            "storage_router_layout", 
                            "backends_guids", 
                            "storagerouters_guids", 
                            "osds_guids", 
                            "vdisks_dtl_guids", 
                            "-name", 
                            "-storage_router_layout", 
                            "-backends_guids", 
                            "-storagerouters_guids", 
                            "-osds_guids", 
                            "-vdisks_dtl_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Lists all available Domains", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "name", 
                                        "storage_router_layout", 
                                        "backends_guids", 
                                        "storagerouters_guids", 
                                        "osds_guids", 
                                        "vdisks_dtl_guids", 
                                        "-name", 
                                        "-storage_router_layout", 
                                        "-backends_guids", 
                                        "-storagerouters_guids", 
                                        "-osds_guids", 
                                        "-vdisks_dtl_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "name", 
                                        "storage_router_layout", 
                                        "backends_guids", 
                                        "storagerouters_guids", 
                                        "osds_guids", 
                                        "vdisks_dtl_guids", 
                                        "-name", 
                                        "-storage_router_layout", 
                                        "-backends_guids", 
                                        "-storagerouters_guids", 
                                        "-osds_guids", 
                                        "-vdisks_dtl_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized Domains.", 
                                    "items": {
                                        "$ref": "#/definitions/Domain"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Lists all available Domains"
            }, 
            "post": {
                "operationId": "domains.create", 
                "parameters": [
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "name", 
                            "storage_router_layout", 
                            "backends_guids", 
                            "storagerouters_guids", 
                            "osds_guids", 
                            "vdisks_dtl_guids", 
                            "-name", 
                            "-storage_router_layout", 
                            "-backends_guids", 
                            "-storagerouters_guids", 
                            "-osds_guids", 
                            "-vdisks_dtl_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }, 
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "name": {
                                    "description": " Name of new domain.", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "name"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Creates a new Domain", 
                        "schema": {
                            "$ref": "#/definitions/Domain"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Creates a new Domain"
            }
        }, 
        "/domains/{guid}/": {
            "delete": {
                "operationId": "domains.destroy", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deletes a Domain"
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Deletes a Domain"
            }, 
            "get": {
                "operationId": "domains.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "name", 
                            "storage_router_layout", 
                            "backends_guids", 
                            "storagerouters_guids", 
                            "osds_guids", 
                            "vdisks_dtl_guids", 
                            "-name", 
                            "-storage_router_layout", 
                            "-backends_guids", 
                            "-storagerouters_guids", 
                            "-osds_guids", 
                            "-vdisks_dtl_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given Domain", 
                        "schema": {
                            "$ref": "#/definitions/Domain"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given Domain"
            }, 
            "patch": {
                "operationId": "domains.partial_update", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "name", 
                            "storage_router_layout", 
                            "backends_guids", 
                            "storagerouters_guids", 
                            "osds_guids", 
                            "vdisks_dtl_guids", 
                            "-name", 
                            "-storage_router_layout", 
                            "-backends_guids", 
                            "-storagerouters_guids", 
                            "-osds_guids", 
                            "-vdisks_dtl_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }, 
                    {
                        "in": "body", 
                        "name": "domain", 
                        "schema": {
                            "properties": {
                                "name": {
                                    "description": " New name for domain.", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "name"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "202": {
                        "description": "Update a Failure Domain", 
                        "schema": {
                            "$ref": "#/definitions/Domain"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Update a Failure Domain"
            }
        }, 
        "/groups/": {
            "get": {
                "operationId": "groups.list", 
                "parameters": [
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "name", 
                            "description", 
                            "users_guids", 
                            "roles_guids", 
                            "-name", 
                            "-description", 
                            "-users_guids", 
                            "-roles_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "name", 
                            "description", 
                            "users_guids", 
                            "roles_guids", 
                            "-name", 
                            "-description", 
                            "-users_guids", 
                            "-roles_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Lists all available Groups", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "name", 
                                        "description", 
                                        "users_guids", 
                                        "roles_guids", 
                                        "-name", 
                                        "-description", 
                                        "-users_guids", 
                                        "-roles_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "name", 
                                        "description", 
                                        "users_guids", 
                                        "roles_guids", 
                                        "-name", 
                                        "-description", 
                                        "-users_guids", 
                                        "-roles_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized Groups.", 
                                    "items": {
                                        "$ref": "#/definitions/Group"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Lists all available Groups"
            }
        }, 
        "/groups/{guid}/": {
            "get": {
                "operationId": "groups.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "name", 
                            "description", 
                            "users_guids", 
                            "roles_guids", 
                            "-name", 
                            "-description", 
                            "-users_guids", 
                            "-roles_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given Group", 
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given Group"
            }
        }, 
        "/health/": {
            "get": {
                "operationId": "health.list", 
                "parameters": [], 
                "responses": {
                    "200": {
                        "description": "Returns {IP: Status} of LOCAL Storage Router", 
                        "schema": {
                            "description": "Dict with LOCAL Storage Router status", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Returns {IP: Status} of LOCAL Storage Router"
            }
        }, 
        "/health/run_healthchecks/": {
            "post": {
                "operationId": "health.post_run_healthchecks", 
                "parameters": [
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "tests": {
                                    "description": " List of pairs (modulename, (test1, test2)).", 
                                    "items": {}, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "tests"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Execute chosen HealthChecks (tests) on DES node and return results.", 
                        "schema": {
                            "description": "List of excuted HealthChecks", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Execute chosen HealthChecks (tests) on DES node and return results."
            }
        }, 
        "/iscsi/nodes/": {
            "get": {
                "operationId": "iscsi/nodes.list", 
                "parameters": [
                    {
                        "description": " If True, only the registered iSCSI nodes are returned", 
                        "in": "query", 
                        "name": "discover", 
                        "required": false, 
                        "type": "boolean"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "node_id", 
                            "username", 
                            "password", 
                            "hostname", 
                            "package_information", 
                            "api_port", 
                            "api_ip", 
                            "storagerouter_guid", 
                            "status", 
                            "portals", 
                            "targets", 
                            "vdisks_guids", 
                            "-node_id", 
                            "-username", 
                            "-password", 
                            "-hostname", 
                            "-package_information", 
                            "-api_port", 
                            "-api_ip", 
                            "-storagerouter_guid", 
                            "-status", 
                            "-portals", 
                            "-targets", 
                            "-vdisks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "node_id", 
                            "username", 
                            "password", 
                            "hostname", 
                            "package_information", 
                            "api_port", 
                            "api_ip", 
                            "storagerouter_guid", 
                            "status", 
                            "portals", 
                            "targets", 
                            "vdisks_guids", 
                            "-node_id", 
                            "-username", 
                            "-password", 
                            "-hostname", 
                            "-package_information", 
                            "-api_port", 
                            "-api_ip", 
                            "-storagerouter_guid", 
                            "-status", 
                            "-portals", 
                            "-targets", 
                            "-vdisks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Lists all available iSCSI Nodes", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "node_id", 
                                        "username", 
                                        "password", 
                                        "hostname", 
                                        "package_information", 
                                        "api_port", 
                                        "api_ip", 
                                        "storagerouter_guid", 
                                        "status", 
                                        "portals", 
                                        "targets", 
                                        "vdisks_guids", 
                                        "-node_id", 
                                        "-username", 
                                        "-password", 
                                        "-hostname", 
                                        "-package_information", 
                                        "-api_port", 
                                        "-api_ip", 
                                        "-storagerouter_guid", 
                                        "-status", 
                                        "-portals", 
                                        "-targets", 
                                        "-vdisks_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "node_id", 
                                        "username", 
                                        "password", 
                                        "hostname", 
                                        "package_information", 
                                        "api_port", 
                                        "api_ip", 
                                        "storagerouter_guid", 
                                        "status", 
                                        "portals", 
                                        "targets", 
                                        "vdisks_guids", 
                                        "-node_id", 
                                        "-username", 
                                        "-password", 
                                        "-hostname", 
                                        "-package_information", 
                                        "-api_port", 
                                        "-api_ip", 
                                        "-storagerouter_guid", 
                                        "-status", 
                                        "-portals", 
                                        "-targets", 
                                        "-vdisks_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized IscsiNodes.", 
                                    "items": {
                                        "$ref": "#/definitions/IscsiNode"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Lists all available iSCSI Nodes"
            }, 
            "post": {
                "operationId": "iscsi/nodes.create", 
                "parameters": [
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "node_id", 
                            "username", 
                            "password", 
                            "hostname", 
                            "package_information", 
                            "api_port", 
                            "api_ip", 
                            "storagerouter_guid", 
                            "status", 
                            "portals", 
                            "targets", 
                            "vdisks_guids", 
                            "-node_id", 
                            "-username", 
                            "-password", 
                            "-hostname", 
                            "-package_information", 
                            "-api_port", 
                            "-api_ip", 
                            "-storagerouter_guid", 
                            "-status", 
                            "-portals", 
                            "-targets", 
                            "-vdisks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }, 
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "node_id": {
                                    "description": " ID of the ALBA node to create", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "node_id"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Adds a node with a given node_id to the model", 
                        "schema": {
                            "$ref": "#/definitions/IscsiNode"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Adds a node with a given node_id to the model"
            }
        }, 
        "/iscsi/nodes/unexpose_vdisk/": {
            "post": {
                "operationId": "iscsi/nodes.post_unexpose_vdisk", 
                "parameters": [
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "vdisk_guid": {
                                    "description": " Guid of the vDisk to un-expose", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "vdisk_guid"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Un-expose a vDisk from all iSCSI Nodes", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Un-expose a vDisk from all iSCSI Nodes"
            }
        }, 
        "/iscsi/nodes/{guid}/": {
            "delete": {
                "operationId": "iscsi/nodes.destroy", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Deletes an iSCSI node", 
                        "schema": {
                            "description": "None", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Deletes an iSCSI node"
            }, 
            "get": {
                "operationId": "iscsi/nodes.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "node_id", 
                            "username", 
                            "password", 
                            "hostname", 
                            "package_information", 
                            "api_port", 
                            "api_ip", 
                            "storagerouter_guid", 
                            "status", 
                            "portals", 
                            "targets", 
                            "vdisks_guids", 
                            "-node_id", 
                            "-username", 
                            "-password", 
                            "-hostname", 
                            "-package_information", 
                            "-api_port", 
                            "-api_ip", 
                            "-storagerouter_guid", 
                            "-status", 
                            "-portals", 
                            "-targets", 
                            "-vdisks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given iSCSI Node", 
                        "schema": {
                            "$ref": "#/definitions/IscsiNode"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given iSCSI Node"
            }
        }, 
        "/iscsi/nodes/{guid}/expose_vdisk/": {
            "post": {
                "operationId": "iscsi/nodes.post_expose_vdisk", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "iscsinode", 
                        "schema": {
                            "properties": {
                                "acls": {
                                    "description": " ACL information to enforce limited access to the vDisk", 
                                    "items": {}, 
                                    "type": "array"
                                }, 
                                "password": {
                                    "description": " Password linked to the user", 
                                    "type": "string"
                                }, 
                                "username": {
                                    "description": " User to which the Edge vDisk belongs to", 
                                    "type": "string"
                                }, 
                                "vdisk_guid": {
                                    "description": " Guid of the vDisk to expose", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "vdisk_guid"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Expose a vDisk on the specified iSCSI Node", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Expose a vDisk on the specified iSCSI Node"
            }
        }, 
        "/iscsi/nodes/{guid}/get_config/": {
            "get": {
                "operationId": "iscsi/nodes.get_get_config", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Retrieve the configuration of the specified iSCSI node", 
                        "schema": {
                            "description": "Configuration of the iSCSI node", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Retrieve the configuration of the specified iSCSI node"
            }
        }, 
        "/iscsi/nodes/{guid}/get_logfiles/": {
            "get": {
                "operationId": "iscsi/nodes.get_get_logfiles", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Retrieve the log files of an iSCSI Node", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Retrieve the log files of an iSCSI Node"
            }
        }, 
        "/iscsi/nodes/{guid}/get_vdisks_exposed_on_node/": {
            "get": {
                "operationId": "iscsi/nodes.get_get_vdisks_exposed_on_node", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "description", 
                            "size", 
                            "metadata", 
                            "devicename", 
                            "volume_id", 
                            "parentsnapshot", 
                            "cinder_id", 
                            "has_manual_dtl", 
                            "name", 
                            "scrubbing_information", 
                            "pagecache_ratio", 
                            "cache_quota", 
                            "parent_vdisk_guid", 
                            "vpool_guid", 
                            "info", 
                            "statistics", 
                            "storagedriver_id", 
                            "storagerouter_guid", 
                            "is_vtemplate", 
                            "dtl_status", 
                            "being_scrubbed", 
                            "snapshots", 
                            "snapshot_ids", 
                            "edge_clients", 
                            "mds_services_guids", 
                            "domains_dtl_guids", 
                            "nbdnodes_guids", 
                            "iscsinodes_guids", 
                            "child_vdisks_guids", 
                            "-description", 
                            "-size", 
                            "-metadata", 
                            "-devicename", 
                            "-volume_id", 
                            "-parentsnapshot", 
                            "-cinder_id", 
                            "-has_manual_dtl", 
                            "-name", 
                            "-scrubbing_information", 
                            "-pagecache_ratio", 
                            "-cache_quota", 
                            "-parent_vdisk_guid", 
                            "-vpool_guid", 
                            "-info", 
                            "-statistics", 
                            "-storagedriver_id", 
                            "-storagerouter_guid", 
                            "-is_vtemplate", 
                            "-dtl_status", 
                            "-being_scrubbed", 
                            "-snapshots", 
                            "-snapshot_ids", 
                            "-edge_clients", 
                            "-mds_services_guids", 
                            "-domains_dtl_guids", 
                            "-nbdnodes_guids", 
                            "-iscsinodes_guids", 
                            "-child_vdisks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "description", 
                            "size", 
                            "metadata", 
                            "devicename", 
                            "volume_id", 
                            "parentsnapshot", 
                            "cinder_id", 
                            "has_manual_dtl", 
                            "name", 
                            "scrubbing_information", 
                            "pagecache_ratio", 
                            "cache_quota", 
                            "parent_vdisk_guid", 
                            "vpool_guid", 
                            "info", 
                            "statistics", 
                            "storagedriver_id", 
                            "storagerouter_guid", 
                            "is_vtemplate", 
                            "dtl_status", 
                            "being_scrubbed", 
                            "snapshots", 
                            "snapshot_ids", 
                            "edge_clients", 
                            "mds_services_guids", 
                            "domains_dtl_guids", 
                            "nbdnodes_guids", 
                            "iscsinodes_guids", 
                            "child_vdisks_guids", 
                            "-description", 
                            "-size", 
                            "-metadata", 
                            "-devicename", 
                            "-volume_id", 
                            "-parentsnapshot", 
                            "-cinder_id", 
                            "-has_manual_dtl", 
                            "-name", 
                            "-scrubbing_information", 
                            "-pagecache_ratio", 
                            "-cache_quota", 
                            "-parent_vdisk_guid", 
                            "-vpool_guid", 
                            "-info", 
                            "-statistics", 
                            "-storagedriver_id", 
                            "-storagerouter_guid", 
                            "-is_vtemplate", 
                            "-dtl_status", 
                            "-being_scrubbed", 
                            "-snapshots", 
                            "-snapshot_ids", 
                            "-edge_clients", 
                            "-mds_services_guids", 
                            "-domains_dtl_guids", 
                            "-nbdnodes_guids", 
                            "-iscsinodes_guids", 
                            "-child_vdisks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Retrieve the vDisks exposed on specified iSCSI node", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "description", 
                                        "size", 
                                        "metadata", 
                                        "devicename", 
                                        "volume_id", 
                                        "parentsnapshot", 
                                        "cinder_id", 
                                        "has_manual_dtl", 
                                        "name", 
                                        "scrubbing_information", 
                                        "pagecache_ratio", 
                                        "cache_quota", 
                                        "parent_vdisk_guid", 
                                        "vpool_guid", 
                                        "info", 
                                        "statistics", 
                                        "storagedriver_id", 
                                        "storagerouter_guid", 
                                        "is_vtemplate", 
                                        "dtl_status", 
                                        "being_scrubbed", 
                                        "snapshots", 
                                        "snapshot_ids", 
                                        "edge_clients", 
                                        "mds_services_guids", 
                                        "domains_dtl_guids", 
                                        "nbdnodes_guids", 
                                        "iscsinodes_guids", 
                                        "child_vdisks_guids", 
                                        "-description", 
                                        "-size", 
                                        "-metadata", 
                                        "-devicename", 
                                        "-volume_id", 
                                        "-parentsnapshot", 
                                        "-cinder_id", 
                                        "-has_manual_dtl", 
                                        "-name", 
                                        "-scrubbing_information", 
                                        "-pagecache_ratio", 
                                        "-cache_quota", 
                                        "-parent_vdisk_guid", 
                                        "-vpool_guid", 
                                        "-info", 
                                        "-statistics", 
                                        "-storagedriver_id", 
                                        "-storagerouter_guid", 
                                        "-is_vtemplate", 
                                        "-dtl_status", 
                                        "-being_scrubbed", 
                                        "-snapshots", 
                                        "-snapshot_ids", 
                                        "-edge_clients", 
                                        "-mds_services_guids", 
                                        "-domains_dtl_guids", 
                                        "-nbdnodes_guids", 
                                        "-iscsinodes_guids", 
                                        "-child_vdisks_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "description", 
                                        "size", 
                                        "metadata", 
                                        "devicename", 
                                        "volume_id", 
                                        "parentsnapshot", 
                                        "cinder_id", 
                                        "has_manual_dtl", 
                                        "name", 
                                        "scrubbing_information", 
                                        "pagecache_ratio", 
                                        "cache_quota", 
                                        "parent_vdisk_guid", 
                                        "vpool_guid", 
                                        "info", 
                                        "statistics", 
                                        "storagedriver_id", 
                                        "storagerouter_guid", 
                                        "is_vtemplate", 
                                        "dtl_status", 
                                        "being_scrubbed", 
                                        "snapshots", 
                                        "snapshot_ids", 
                                        "edge_clients", 
                                        "mds_services_guids", 
                                        "domains_dtl_guids", 
                                        "nbdnodes_guids", 
                                        "iscsinodes_guids", 
                                        "child_vdisks_guids", 
                                        "-description", 
                                        "-size", 
                                        "-metadata", 
                                        "-devicename", 
                                        "-volume_id", 
                                        "-parentsnapshot", 
                                        "-cinder_id", 
                                        "-has_manual_dtl", 
                                        "-name", 
                                        "-scrubbing_information", 
                                        "-pagecache_ratio", 
                                        "-cache_quota", 
                                        "-parent_vdisk_guid", 
                                        "-vpool_guid", 
                                        "-info", 
                                        "-statistics", 
                                        "-storagedriver_id", 
                                        "-storagerouter_guid", 
                                        "-is_vtemplate", 
                                        "-dtl_status", 
                                        "-being_scrubbed", 
                                        "-snapshots", 
                                        "-snapshot_ids", 
                                        "-edge_clients", 
                                        "-mds_services_guids", 
                                        "-domains_dtl_guids", 
                                        "-nbdnodes_guids", 
                                        "-iscsinodes_guids", 
                                        "-child_vdisks_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized VDisks.", 
                                    "items": {
                                        "$ref": "#/definitions/VDisk"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Retrieve the vDisks exposed on specified iSCSI node"
            }
        }, 
        "/iscsi/nodes/{guid}/service_restart/": {
            "post": {
                "operationId": "iscsi/nodes.post_service_restart", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "iscsinode", 
                        "schema": {
                            "properties": {
                                "service_name": {
                                    "description": " Name of the service to restart", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "service_name"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Restart the iSCSI Manager service on the specified iSCSI node", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Restart the iSCSI Manager service on the specified iSCSI node"
            }
        }, 
        "/nbd/nodes/": {
            "get": {
                "operationId": "nbd/nodes.list", 
                "parameters": [
                    {
                        "description": " If True, only the registered NBD nodes are returned", 
                        "in": "query", 
                        "name": "discover", 
                        "required": false, 
                        "type": "boolean"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "api_ip", 
                            "mode", 
                            "node_id", 
                            "api_port", 
                            "username", 
                            "password", 
                            "hostname", 
                            "package_information", 
                            "storagerouter_guid", 
                            "exports", 
                            "status", 
                            "vdisks_guids", 
                            "-api_ip", 
                            "-mode", 
                            "-node_id", 
                            "-api_port", 
                            "-username", 
                            "-password", 
                            "-hostname", 
                            "-package_information", 
                            "-storagerouter_guid", 
                            "-exports", 
                            "-status", 
                            "-vdisks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "api_ip", 
                            "mode", 
                            "node_id", 
                            "api_port", 
                            "username", 
                            "password", 
                            "hostname", 
                            "package_information", 
                            "storagerouter_guid", 
                            "exports", 
                            "status", 
                            "vdisks_guids", 
                            "-api_ip", 
                            "-mode", 
                            "-node_id", 
                            "-api_port", 
                            "-username", 
                            "-password", 
                            "-hostname", 
                            "-package_information", 
                            "-storagerouter_guid", 
                            "-exports", 
                            "-status", 
                            "-vdisks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Lists all available NBD Nodes", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "api_ip", 
                                        "mode", 
                                        "node_id", 
                                        "api_port", 
                                        "username", 
                                        "password", 
                                        "hostname", 
                                        "package_information", 
                                        "storagerouter_guid", 
                                        "exports", 
                                        "status", 
                                        "vdisks_guids", 
                                        "-api_ip", 
                                        "-mode", 
                                        "-node_id", 
                                        "-api_port", 
                                        "-username", 
                                        "-password", 
                                        "-hostname", 
                                        "-package_information", 
                                        "-storagerouter_guid", 
                                        "-exports", 
                                        "-status", 
                                        "-vdisks_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "api_ip", 
                                        "mode", 
                                        "node_id", 
                                        "api_port", 
                                        "username", 
                                        "password", 
                                        "hostname", 
                                        "package_information", 
                                        "storagerouter_guid", 
                                        "exports", 
                                        "status", 
                                        "vdisks_guids", 
                                        "-api_ip", 
                                        "-mode", 
                                        "-node_id", 
                                        "-api_port", 
                                        "-username", 
                                        "-password", 
                                        "-hostname", 
                                        "-package_information", 
                                        "-storagerouter_guid", 
                                        "-exports", 
                                        "-status", 
                                        "-vdisks_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized NbdNodes.", 
                                    "items": {
                                        "$ref": "#/definitions/NbdNode"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Lists all available NBD Nodes"
            }, 
            "post": {
                "operationId": "nbd/nodes.create", 
                "parameters": [
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "api_ip", 
                            "mode", 
                            "node_id", 
                            "api_port", 
                            "username", 
                            "password", 
                            "hostname", 
                            "package_information", 
                            "storagerouter_guid", 
                            "exports", 
                            "status", 
                            "vdisks_guids", 
                            "-api_ip", 
                            "-mode", 
                            "-node_id", 
                            "-api_port", 
                            "-username", 
                            "-password", 
                            "-hostname", 
                            "-package_information", 
                            "-storagerouter_guid", 
                            "-exports", 
                            "-status", 
                            "-vdisks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }, 
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "node_id": {
                                    "description": " ID of the ALBA node to create", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "node_id"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Adds a node with a given node_id to the model", 
                        "schema": {
                            "$ref": "#/definitions/NbdNode"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Adds a node with a given node_id to the model"
            }
        }, 
        "/nbd/nodes/restart_exports/": {
            "post": {
                "operationId": "nbd/nodes.post_restart_exports", 
                "parameters": [
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "clean": {
                                    "description": " Stop exports that does not have conf-files (for nbdkit only).", 
                                    "type": "boolean"
                                }, 
                                "vdisk_guids": {
                                    "description": " GUIDs of vDisks to restart (for nbdkit only).", 
                                    "items": {}, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "vdisk_guids"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Restart NBD exports of chosen vDisks.", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Restart NBD exports of chosen vDisks."
            }
        }, 
        "/nbd/nodes/unexpose_vdisk/": {
            "post": {
                "operationId": "nbd/nodes.post_unexpose_vdisk", 
                "parameters": [
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "vdisk_guid": {
                                    "description": " Guid of the vDisk to un-expose", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "vdisk_guid"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Un-expose a vDisk from all NBD Nodes", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Un-expose a vDisk from all NBD Nodes"
            }
        }, 
        "/nbd/nodes/{guid}/": {
            "delete": {
                "operationId": "nbd/nodes.destroy", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Deletes an NBD node", 
                        "schema": {
                            "description": "None", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Deletes an NBD node"
            }, 
            "get": {
                "operationId": "nbd/nodes.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "api_ip", 
                            "mode", 
                            "node_id", 
                            "api_port", 
                            "username", 
                            "password", 
                            "hostname", 
                            "package_information", 
                            "storagerouter_guid", 
                            "exports", 
                            "status", 
                            "vdisks_guids", 
                            "-api_ip", 
                            "-mode", 
                            "-node_id", 
                            "-api_port", 
                            "-username", 
                            "-password", 
                            "-hostname", 
                            "-package_information", 
                            "-storagerouter_guid", 
                            "-exports", 
                            "-status", 
                            "-vdisks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given NBD Node", 
                        "schema": {
                            "$ref": "#/definitions/NbdNode"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given NBD Node"
            }
        }, 
        "/nbd/nodes/{guid}/expose_vdisk/": {
            "post": {
                "operationId": "nbd/nodes.post_expose_vdisk", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "nbdnode", 
                        "schema": {
                            "properties": {
                                "acls": {
                                    "description": " ACL information to enforce limited access to the vDisk", 
                                    "items": {}, 
                                    "type": "array"
                                }, 
                                "nbd_port": {
                                    "description": " Port on which vDisk will be exported (for nbdkit only).", 
                                    "type": "integer"
                                }, 
                                "password": {
                                    "description": " Password linked to the user", 
                                    "type": "string"
                                }, 
                                "protocol": {
                                    "description": " Protocol to use, e.g. \"tcp\" (for nbdkit only).", 
                                    "type": "string"
                                }, 
                                "readonly": {
                                    "description": " If true the export will be read-only (for nbdkit). Disallow writes to the device (for nbd-server).", 
                                    "type": "boolean"
                                }, 
                                "username": {
                                    "description": " User to which the Edge vDisk belongs to", 
                                    "type": "string"
                                }, 
                                "vdisk_guid": {
                                    "description": " Guid of the vDisk to expose", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "vdisk_guid"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Expose a vDisk on the specified NBD Node", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Expose a vDisk on the specified NBD Node"
            }
        }, 
        "/nbd/nodes/{guid}/get_config/": {
            "get": {
                "operationId": "nbd/nodes.get_get_config", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Retrieve the configuration of the specified NBD node", 
                        "schema": {
                            "description": "Configuration of the NBD node", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Retrieve the configuration of the specified NBD node"
            }
        }, 
        "/nbd/nodes/{guid}/get_export_config/": {
            "get": {
                "operationId": "nbd/nodes.get_get_export_config", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "description": " GUID of the vDisk to get config of.", 
                        "in": "query", 
                        "name": "vdisk_guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Retrieve current NBD export config of vDisk from NBD Node.", 
                        "schema": {
                            "description": "Dict with NBD connections to vDisk.", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Retrieve current NBD export config of vDisk from NBD Node."
            }
        }, 
        "/nbd/nodes/{guid}/get_logfiles/": {
            "get": {
                "operationId": "nbd/nodes.get_get_logfiles", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Retrieve the log files of an NBD Node", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Retrieve the log files of an NBD Node"
            }
        }, 
        "/nbd/nodes/{guid}/get_main_config/": {
            "get": {
                "operationId": "nbd/nodes.get_get_main_config", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Return main NBD config as dict (e.g. contents of \"/etc/nbd-server/config\").", 
                        "schema": {
                            "description": "Dict with main NBD config", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Return main NBD config as dict (e.g. contents of \"/etc/nbd-server/config\")."
            }
        }, 
        "/nbd/nodes/{guid}/get_vdisks_exposed_on_node/": {
            "get": {
                "operationId": "nbd/nodes.get_get_vdisks_exposed_on_node", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "description", 
                            "size", 
                            "metadata", 
                            "devicename", 
                            "volume_id", 
                            "parentsnapshot", 
                            "cinder_id", 
                            "has_manual_dtl", 
                            "name", 
                            "scrubbing_information", 
                            "pagecache_ratio", 
                            "cache_quota", 
                            "parent_vdisk_guid", 
                            "vpool_guid", 
                            "info", 
                            "statistics", 
                            "storagedriver_id", 
                            "storagerouter_guid", 
                            "is_vtemplate", 
                            "dtl_status", 
                            "being_scrubbed", 
                            "snapshots", 
                            "snapshot_ids", 
                            "edge_clients", 
                            "mds_services_guids", 
                            "domains_dtl_guids", 
                            "nbdnodes_guids", 
                            "iscsinodes_guids", 
                            "child_vdisks_guids", 
                            "-description", 
                            "-size", 
                            "-metadata", 
                            "-devicename", 
                            "-volume_id", 
                            "-parentsnapshot", 
                            "-cinder_id", 
                            "-has_manual_dtl", 
                            "-name", 
                            "-scrubbing_information", 
                            "-pagecache_ratio", 
                            "-cache_quota", 
                            "-parent_vdisk_guid", 
                            "-vpool_guid", 
                            "-info", 
                            "-statistics", 
                            "-storagedriver_id", 
                            "-storagerouter_guid", 
                            "-is_vtemplate", 
                            "-dtl_status", 
                            "-being_scrubbed", 
                            "-snapshots", 
                            "-snapshot_ids", 
                            "-edge_clients", 
                            "-mds_services_guids", 
                            "-domains_dtl_guids", 
                            "-nbdnodes_guids", 
                            "-iscsinodes_guids", 
                            "-child_vdisks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "description", 
                            "size", 
                            "metadata", 
                            "devicename", 
                            "volume_id", 
                            "parentsnapshot", 
                            "cinder_id", 
                            "has_manual_dtl", 
                            "name", 
                            "scrubbing_information", 
                            "pagecache_ratio", 
                            "cache_quota", 
                            "parent_vdisk_guid", 
                            "vpool_guid", 
                            "info", 
                            "statistics", 
                            "storagedriver_id", 
                            "storagerouter_guid", 
                            "is_vtemplate", 
                            "dtl_status", 
                            "being_scrubbed", 
                            "snapshots", 
                            "snapshot_ids", 
                            "edge_clients", 
                            "mds_services_guids", 
                            "domains_dtl_guids", 
                            "nbdnodes_guids", 
                            "iscsinodes_guids", 
                            "child_vdisks_guids", 
                            "-description", 
                            "-size", 
                            "-metadata", 
                            "-devicename", 
                            "-volume_id", 
                            "-parentsnapshot", 
                            "-cinder_id", 
                            "-has_manual_dtl", 
                            "-name", 
                            "-scrubbing_information", 
                            "-pagecache_ratio", 
                            "-cache_quota", 
                            "-parent_vdisk_guid", 
                            "-vpool_guid", 
                            "-info", 
                            "-statistics", 
                            "-storagedriver_id", 
                            "-storagerouter_guid", 
                            "-is_vtemplate", 
                            "-dtl_status", 
                            "-being_scrubbed", 
                            "-snapshots", 
                            "-snapshot_ids", 
                            "-edge_clients", 
                            "-mds_services_guids", 
                            "-domains_dtl_guids", 
                            "-nbdnodes_guids", 
                            "-iscsinodes_guids", 
                            "-child_vdisks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Retrieve the vDisks exposed on specified NBD node", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "description", 
                                        "size", 
                                        "metadata", 
                                        "devicename", 
                                        "volume_id", 
                                        "parentsnapshot", 
                                        "cinder_id", 
                                        "has_manual_dtl", 
                                        "name", 
                                        "scrubbing_information", 
                                        "pagecache_ratio", 
                                        "cache_quota", 
                                        "parent_vdisk_guid", 
                                        "vpool_guid", 
                                        "info", 
                                        "statistics", 
                                        "storagedriver_id", 
                                        "storagerouter_guid", 
                                        "is_vtemplate", 
                                        "dtl_status", 
                                        "being_scrubbed", 
                                        "snapshots", 
                                        "snapshot_ids", 
                                        "edge_clients", 
                                        "mds_services_guids", 
                                        "domains_dtl_guids", 
                                        "nbdnodes_guids", 
                                        "iscsinodes_guids", 
                                        "child_vdisks_guids", 
                                        "-description", 
                                        "-size", 
                                        "-metadata", 
                                        "-devicename", 
                                        "-volume_id", 
                                        "-parentsnapshot", 
                                        "-cinder_id", 
                                        "-has_manual_dtl", 
                                        "-name", 
                                        "-scrubbing_information", 
                                        "-pagecache_ratio", 
                                        "-cache_quota", 
                                        "-parent_vdisk_guid", 
                                        "-vpool_guid", 
                                        "-info", 
                                        "-statistics", 
                                        "-storagedriver_id", 
                                        "-storagerouter_guid", 
                                        "-is_vtemplate", 
                                        "-dtl_status", 
                                        "-being_scrubbed", 
                                        "-snapshots", 
                                        "-snapshot_ids", 
                                        "-edge_clients", 
                                        "-mds_services_guids", 
                                        "-domains_dtl_guids", 
                                        "-nbdnodes_guids", 
                                        "-iscsinodes_guids", 
                                        "-child_vdisks_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "description", 
                                        "size", 
                                        "metadata", 
                                        "devicename", 
                                        "volume_id", 
                                        "parentsnapshot", 
                                        "cinder_id", 
                                        "has_manual_dtl", 
                                        "name", 
                                        "scrubbing_information", 
                                        "pagecache_ratio", 
                                        "cache_quota", 
                                        "parent_vdisk_guid", 
                                        "vpool_guid", 
                                        "info", 
                                        "statistics", 
                                        "storagedriver_id", 
                                        "storagerouter_guid", 
                                        "is_vtemplate", 
                                        "dtl_status", 
                                        "being_scrubbed", 
                                        "snapshots", 
                                        "snapshot_ids", 
                                        "edge_clients", 
                                        "mds_services_guids", 
                                        "domains_dtl_guids", 
                                        "nbdnodes_guids", 
                                        "iscsinodes_guids", 
                                        "child_vdisks_guids", 
                                        "-description", 
                                        "-size", 
                                        "-metadata", 
                                        "-devicename", 
                                        "-volume_id", 
                                        "-parentsnapshot", 
                                        "-cinder_id", 
                                        "-has_manual_dtl", 
                                        "-name", 
                                        "-scrubbing_information", 
                                        "-pagecache_ratio", 
                                        "-cache_quota", 
                                        "-parent_vdisk_guid", 
                                        "-vpool_guid", 
                                        "-info", 
                                        "-statistics", 
                                        "-storagedriver_id", 
                                        "-storagerouter_guid", 
                                        "-is_vtemplate", 
                                        "-dtl_status", 
                                        "-being_scrubbed", 
                                        "-snapshots", 
                                        "-snapshot_ids", 
                                        "-edge_clients", 
                                        "-mds_services_guids", 
                                        "-domains_dtl_guids", 
                                        "-nbdnodes_guids", 
                                        "-iscsinodes_guids", 
                                        "-child_vdisks_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized VDisks.", 
                                    "items": {
                                        "$ref": "#/definitions/VDisk"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Retrieve the vDisks exposed on specified NBD node"
            }
        }, 
        "/nbd/nodes/{guid}/list_export_connections/": {
            "get": {
                "operationId": "nbd/nodes.get_list_export_connections", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "description": " GUID of the vDisk.", 
                        "in": "query", 
                        "name": "vdisk_guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "List all active NBD connections to vDisk (NBD export).", 
                        "schema": {
                            "description": "Dict with NBD connections to vDisk.", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "List all active NBD connections to vDisk (NBD export)."
            }
        }, 
        "/nbd/nodes/{guid}/service_restart/": {
            "post": {
                "operationId": "nbd/nodes.post_service_restart", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "nbdnode", 
                        "schema": {
                            "properties": {
                                "service_name": {
                                    "description": " Name of the service to restart", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "service_name"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Restart the NBD Manager service on the specified NBD node", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Restart the NBD Manager service on the specified NBD node"
            }
        }, 
        "/nbd/nodes/{guid}/set_export_config/": {
            "patch": {
                "operationId": "nbd/nodes.patch_set_export_config", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "nbdnode", 
                        "schema": {
                            "properties": {
                                "config": {
                                    "description": " New config to set.", 
                                    "type": "object"
                                }, 
                                "restart_export": {
                                    "description": " Whether to restart export after changing config.", 
                                    "type": "boolean"
                                }, 
                                "vdisk_guid": {
                                    "description": " GUID of the vDisk to set config for.", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "vdisk_guid", 
                                "config"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Set NBD export config on NBD Node.", 
                        "schema": {
                            "description": "None", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Set NBD export config on NBD Node."
            }
        }, 
        "/nbd/nodes/{guid}/set_main_config/": {
            "patch": {
                "operationId": "nbd/nodes.patch_set_main_config", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "nbdnode", 
                        "schema": {
                            "properties": {
                                "config": {
                                    "description": " New config to set.", 
                                    "type": "object"
                                }, 
                                "restart_exports": {
                                    "description": " Whether to restart NBD exports after changing config.", 
                                    "type": "boolean"
                                }
                            }, 
                            "required": [
                                "config"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Set NBD main config on NBD Node.", 
                        "schema": {
                            "description": "None", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Set NBD main config on NBD Node."
            }
        }, 
        "/roles/": {
            "get": {
                "operationId": "roles.list", 
                "parameters": [
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "name", 
                            "description", 
                            "code", 
                            "tokens_guids", 
                            "clients_guids", 
                            "groups_guids", 
                            "-name", 
                            "-description", 
                            "-code", 
                            "-tokens_guids", 
                            "-clients_guids", 
                            "-groups_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "name", 
                            "description", 
                            "code", 
                            "tokens_guids", 
                            "clients_guids", 
                            "groups_guids", 
                            "-name", 
                            "-description", 
                            "-code", 
                            "-tokens_guids", 
                            "-clients_guids", 
                            "-groups_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Lists all available Roles", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "name", 
                                        "description", 
                                        "code", 
                                        "tokens_guids", 
                                        "clients_guids", 
                                        "groups_guids", 
                                        "-name", 
                                        "-description", 
                                        "-code", 
                                        "-tokens_guids", 
                                        "-clients_guids", 
                                        "-groups_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "name", 
                                        "description", 
                                        "code", 
                                        "tokens_guids", 
                                        "clients_guids", 
                                        "groups_guids", 
                                        "-name", 
                                        "-description", 
                                        "-code", 
                                        "-tokens_guids", 
                                        "-clients_guids", 
                                        "-groups_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized Roles.", 
                                    "items": {
                                        "$ref": "#/definitions/Role"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Lists all available Roles"
            }
        }, 
        "/roles/{guid}/": {
            "get": {
                "operationId": "roles.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "name", 
                            "description", 
                            "code", 
                            "tokens_guids", 
                            "clients_guids", 
                            "groups_guids", 
                            "-name", 
                            "-description", 
                            "-code", 
                            "-tokens_guids", 
                            "-clients_guids", 
                            "-groups_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given Role", 
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given Role"
            }
        }, 
        "/storagedrivers/": {
            "get": {
                "operationId": "storagedrivers.list", 
                "parameters": [
                    {
                        "description": " Guid of the vPool", 
                        "in": "query", 
                        "name": "vpool_guid", 
                        "required": false, 
                        "type": "string"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "ports", 
                            "cluster_ip", 
                            "storage_ip", 
                            "storagedriver_id", 
                            "mountpoint", 
                            "startup_counter", 
                            "name", 
                            "description", 
                            "vpool_guid", 
                            "storagerouter_guid", 
                            "status", 
                            "statistics", 
                            "edge_clients", 
                            "vdisks_guids", 
                            "vpool_backend_info", 
                            "cluster_node_config", 
                            "alba_proxies_guids", 
                            "partitions_guids", 
                            "-ports", 
                            "-cluster_ip", 
                            "-storage_ip", 
                            "-storagedriver_id", 
                            "-mountpoint", 
                            "-startup_counter", 
                            "-name", 
                            "-description", 
                            "-vpool_guid", 
                            "-storagerouter_guid", 
                            "-status", 
                            "-statistics", 
                            "-edge_clients", 
                            "-vdisks_guids", 
                            "-vpool_backend_info", 
                            "-cluster_node_config", 
                            "-alba_proxies_guids", 
                            "-partitions_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "ports", 
                            "cluster_ip", 
                            "storage_ip", 
                            "storagedriver_id", 
                            "mountpoint", 
                            "startup_counter", 
                            "name", 
                            "description", 
                            "vpool_guid", 
                            "storagerouter_guid", 
                            "status", 
                            "statistics", 
                            "edge_clients", 
                            "vdisks_guids", 
                            "vpool_backend_info", 
                            "cluster_node_config", 
                            "alba_proxies_guids", 
                            "partitions_guids", 
                            "-ports", 
                            "-cluster_ip", 
                            "-storage_ip", 
                            "-storagedriver_id", 
                            "-mountpoint", 
                            "-startup_counter", 
                            "-name", 
                            "-description", 
                            "-vpool_guid", 
                            "-storagerouter_guid", 
                            "-status", 
                            "-statistics", 
                            "-edge_clients", 
                            "-vdisks_guids", 
                            "-vpool_backend_info", 
                            "-cluster_node_config", 
                            "-alba_proxies_guids", 
                            "-partitions_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Overview of all Storage Drivers", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "ports", 
                                        "cluster_ip", 
                                        "storage_ip", 
                                        "storagedriver_id", 
                                        "mountpoint", 
                                        "startup_counter", 
                                        "name", 
                                        "description", 
                                        "vpool_guid", 
                                        "storagerouter_guid", 
                                        "status", 
                                        "statistics", 
                                        "edge_clients", 
                                        "vdisks_guids", 
                                        "vpool_backend_info", 
                                        "cluster_node_config", 
                                        "alba_proxies_guids", 
                                        "partitions_guids", 
                                        "-ports", 
                                        "-cluster_ip", 
                                        "-storage_ip", 
                                        "-storagedriver_id", 
                                        "-mountpoint", 
                                        "-startup_counter", 
                                        "-name", 
                                        "-description", 
                                        "-vpool_guid", 
                                        "-storagerouter_guid", 
                                        "-status", 
                                        "-statistics", 
                                        "-edge_clients", 
                                        "-vdisks_guids", 
                                        "-vpool_backend_info", 
                                        "-cluster_node_config", 
                                        "-alba_proxies_guids", 
                                        "-partitions_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "ports", 
                                        "cluster_ip", 
                                        "storage_ip", 
                                        "storagedriver_id", 
                                        "mountpoint", 
                                        "startup_counter", 
                                        "name", 
                                        "description", 
                                        "vpool_guid", 
                                        "storagerouter_guid", 
                                        "status", 
                                        "statistics", 
                                        "edge_clients", 
                                        "vdisks_guids", 
                                        "vpool_backend_info", 
                                        "cluster_node_config", 
                                        "alba_proxies_guids", 
                                        "partitions_guids", 
                                        "-ports", 
                                        "-cluster_ip", 
                                        "-storage_ip", 
                                        "-storagedriver_id", 
                                        "-mountpoint", 
                                        "-startup_counter", 
                                        "-name", 
                                        "-description", 
                                        "-vpool_guid", 
                                        "-storagerouter_guid", 
                                        "-status", 
                                        "-statistics", 
                                        "-edge_clients", 
                                        "-vdisks_guids", 
                                        "-vpool_backend_info", 
                                        "-cluster_node_config", 
                                        "-alba_proxies_guids", 
                                        "-partitions_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized StorageDrivers.", 
                                    "items": {
                                        "$ref": "#/definitions/StorageDriver"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Overview of all Storage Drivers"
            }
        }, 
        "/storagedrivers/{guid}/": {
            "get": {
                "operationId": "storagedrivers.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "ports", 
                            "cluster_ip", 
                            "storage_ip", 
                            "storagedriver_id", 
                            "mountpoint", 
                            "startup_counter", 
                            "name", 
                            "description", 
                            "vpool_guid", 
                            "storagerouter_guid", 
                            "status", 
                            "statistics", 
                            "edge_clients", 
                            "vdisks_guids", 
                            "vpool_backend_info", 
                            "cluster_node_config", 
                            "alba_proxies_guids", 
                            "partitions_guids", 
                            "-ports", 
                            "-cluster_ip", 
                            "-storage_ip", 
                            "-storagedriver_id", 
                            "-mountpoint", 
                            "-startup_counter", 
                            "-name", 
                            "-description", 
                            "-vpool_guid", 
                            "-storagerouter_guid", 
                            "-status", 
                            "-statistics", 
                            "-edge_clients", 
                            "-vdisks_guids", 
                            "-vpool_backend_info", 
                            "-cluster_node_config", 
                            "-alba_proxies_guids", 
                            "-partitions_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given Storage Driver", 
                        "schema": {
                            "$ref": "#/definitions/StorageDriver"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given Storage Driver"
            }
        }, 
        "/storagedrivers/{guid}/refresh_configuration/": {
            "post": {
                "operationId": "storagedrivers.post_refresh_configuration", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Refresh the configuration of the Storage Driver", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Refresh the configuration of the Storage Driver"
            }
        }, 
        "/storagerouters/": {
            "get": {
                "operationId": "storagerouters.list", 
                "parameters": [
                    {
                        "description": " A query to filter the StorageRouters", 
                        "in": "query", 
                        "name": "query", 
                        "required": false, 
                        "type": "string"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": "name", 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "ip", 
                            "heartbeats", 
                            "node_type", 
                            "rdma_capable", 
                            "last_heartbeat", 
                            "name", 
                            "machine_id", 
                            "description", 
                            "package_information", 
                            "vdisks_guids", 
                            "detailed_status", 
                            "status", 
                            "partition_config", 
                            "regular_domains", 
                            "recovery_domains", 
                            "features", 
                            "statistics", 
                            "vpools_guids", 
                            "nbd_node_guid", 
                            "disks_guids", 
                            "storagedrivers_guids", 
                            "services_guids", 
                            "domains_guids", 
                            "alba_node_guid", 
                            "iscsi_node_guid", 
                            "-ip", 
                            "-heartbeats", 
                            "-node_type", 
                            "-rdma_capable", 
                            "-last_heartbeat", 
                            "-name", 
                            "-machine_id", 
                            "-description", 
                            "-package_information", 
                            "-vdisks_guids", 
                            "-detailed_status", 
                            "-status", 
                            "-partition_config", 
                            "-regular_domains", 
                            "-recovery_domains", 
                            "-features", 
                            "-statistics", 
                            "-vpools_guids", 
                            "-nbd_node_guid", 
                            "-disks_guids", 
                            "-storagedrivers_guids", 
                            "-services_guids", 
                            "-domains_guids", 
                            "-alba_node_guid", 
                            "-iscsi_node_guid"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "ip", 
                            "heartbeats", 
                            "node_type", 
                            "rdma_capable", 
                            "last_heartbeat", 
                            "name", 
                            "machine_id", 
                            "description", 
                            "package_information", 
                            "vdisks_guids", 
                            "detailed_status", 
                            "status", 
                            "partition_config", 
                            "regular_domains", 
                            "recovery_domains", 
                            "features", 
                            "statistics", 
                            "vpools_guids", 
                            "nbd_node_guid", 
                            "disks_guids", 
                            "storagedrivers_guids", 
                            "services_guids", 
                            "domains_guids", 
                            "alba_node_guid", 
                            "iscsi_node_guid", 
                            "-ip", 
                            "-heartbeats", 
                            "-node_type", 
                            "-rdma_capable", 
                            "-last_heartbeat", 
                            "-name", 
                            "-machine_id", 
                            "-description", 
                            "-package_information", 
                            "-vdisks_guids", 
                            "-detailed_status", 
                            "-status", 
                            "-partition_config", 
                            "-regular_domains", 
                            "-recovery_domains", 
                            "-features", 
                            "-statistics", 
                            "-vpools_guids", 
                            "-nbd_node_guid", 
                            "-disks_guids", 
                            "-storagedrivers_guids", 
                            "-services_guids", 
                            "-domains_guids", 
                            "-alba_node_guid", 
                            "-iscsi_node_guid"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Overview of all Storage Routers", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "ip", 
                                        "heartbeats", 
                                        "node_type", 
                                        "rdma_capable", 
                                        "last_heartbeat", 
                                        "name", 
                                        "machine_id", 
                                        "description", 
                                        "package_information", 
                                        "vdisks_guids", 
                                        "detailed_status", 
                                        "status", 
                                        "partition_config", 
                                        "regular_domains", 
                                        "recovery_domains", 
                                        "features", 
                                        "statistics", 
                                        "vpools_guids", 
                                        "nbd_node_guid", 
                                        "disks_guids", 
                                        "storagedrivers_guids", 
                                        "services_guids", 
                                        "domains_guids", 
                                        "alba_node_guid", 
                                        "iscsi_node_guid", 
                                        "-ip", 
                                        "-heartbeats", 
                                        "-node_type", 
                                        "-rdma_capable", 
                                        "-last_heartbeat", 
                                        "-name", 
                                        "-machine_id", 
                                        "-description", 
                                        "-package_information", 
                                        "-vdisks_guids", 
                                        "-detailed_status", 
                                        "-status", 
                                        "-partition_config", 
                                        "-regular_domains", 
                                        "-recovery_domains", 
                                        "-features", 
                                        "-statistics", 
                                        "-vpools_guids", 
                                        "-nbd_node_guid", 
                                        "-disks_guids", 
                                        "-storagedrivers_guids", 
                                        "-services_guids", 
                                        "-domains_guids", 
                                        "-alba_node_guid", 
                                        "-iscsi_node_guid"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "ip", 
                                        "heartbeats", 
                                        "node_type", 
                                        "rdma_capable", 
                                        "last_heartbeat", 
                                        "name", 
                                        "machine_id", 
                                        "description", 
                                        "package_information", 
                                        "vdisks_guids", 
                                        "detailed_status", 
                                        "status", 
                                        "partition_config", 
                                        "regular_domains", 
                                        "recovery_domains", 
                                        "features", 
                                        "statistics", 
                                        "vpools_guids", 
                                        "nbd_node_guid", 
                                        "disks_guids", 
                                        "storagedrivers_guids", 
                                        "services_guids", 
                                        "domains_guids", 
                                        "alba_node_guid", 
                                        "iscsi_node_guid", 
                                        "-ip", 
                                        "-heartbeats", 
                                        "-node_type", 
                                        "-rdma_capable", 
                                        "-last_heartbeat", 
                                        "-name", 
                                        "-machine_id", 
                                        "-description", 
                                        "-package_information", 
                                        "-vdisks_guids", 
                                        "-detailed_status", 
                                        "-status", 
                                        "-partition_config", 
                                        "-regular_domains", 
                                        "-recovery_domains", 
                                        "-features", 
                                        "-statistics", 
                                        "-vpools_guids", 
                                        "-nbd_node_guid", 
                                        "-disks_guids", 
                                        "-storagedrivers_guids", 
                                        "-services_guids", 
                                        "-domains_guids", 
                                        "-alba_node_guid", 
                                        "-iscsi_node_guid"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized StorageRouters.", 
                                    "items": {
                                        "$ref": "#/definitions/StorageRouter"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Overview of all Storage Routers"
            }
        }, 
        "/storagerouters/configure_support/": {
            "post": {
                "operationId": "storagerouters.post_configure_support", 
                "parameters": [
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "enable": {
                                    "description": " Indicates whether to enable heartbeats", 
                                    "type": "boolean"
                                }, 
                                "enable_support": {
                                    "description": " Indicates whether to enable remote support", 
                                    "type": "boolean"
                                }, 
                                "interval": {
                                    "description": " New interval (secs) for heartbeat", 
                                    "type": "integer"
                                }, 
                                "url": {
                                    "description": " New url where to send heartbeat", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "enable", 
                                "interval", 
                                "url", 
                                "enable_support"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Configures support", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Configures support"
            }
        }, 
        "/storagerouters/get_update_information/": {
            "get": {
                "operationId": "storagerouters.get_get_update_information", 
                "parameters": [], 
                "responses": {
                    "200": {
                        "description": "Retrieve the update information for all Storage Routers", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Retrieve the update information for all Storage Routers"
            }
        }, 
        "/storagerouters/merge_package_information/": {
            "get": {
                "operationId": "storagerouters.get_merge_package_information", 
                "parameters": [], 
                "responses": {
                    "200": {
                        "description": "Retrieve the package information from the model for both Storage Routers and ALBA Nodes and merge it", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Retrieve the package information from the model for both Storage Routers and ALBA Nodes and merge it"
            }
        }, 
        "/storagerouters/refresh_package_information/": {
            "get": {
                "operationId": "storagerouters.get_refresh_package_information", 
                "parameters": [], 
                "responses": {
                    "200": {
                        "description": "Refresh the package information for all StorageRouters.", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Refresh the package information for all StorageRouters."
            }
        }, 
        "/storagerouters/update_components/": {
            "post": {
                "operationId": "storagerouters.post_update_components", 
                "parameters": [
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "components": {
                                    "description": " Components to update", 
                                    "items": {}, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "components"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Initiate a task on a Storage Router to update the specified components on all Storage Routers", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Initiate a task on a Storage Router to update the specified components on all Storage Routers"
            }
        }, 
        "/storagerouters/{guid}/": {
            "get": {
                "operationId": "storagerouters.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "ip", 
                            "heartbeats", 
                            "node_type", 
                            "rdma_capable", 
                            "last_heartbeat", 
                            "name", 
                            "machine_id", 
                            "description", 
                            "package_information", 
                            "vdisks_guids", 
                            "detailed_status", 
                            "status", 
                            "partition_config", 
                            "regular_domains", 
                            "recovery_domains", 
                            "features", 
                            "statistics", 
                            "vpools_guids", 
                            "nbd_node_guid", 
                            "disks_guids", 
                            "storagedrivers_guids", 
                            "services_guids", 
                            "domains_guids", 
                            "alba_node_guid", 
                            "iscsi_node_guid", 
                            "-ip", 
                            "-heartbeats", 
                            "-node_type", 
                            "-rdma_capable", 
                            "-last_heartbeat", 
                            "-name", 
                            "-machine_id", 
                            "-description", 
                            "-package_information", 
                            "-vdisks_guids", 
                            "-detailed_status", 
                            "-status", 
                            "-partition_config", 
                            "-regular_domains", 
                            "-recovery_domains", 
                            "-features", 
                            "-statistics", 
                            "-vpools_guids", 
                            "-nbd_node_guid", 
                            "-disks_guids", 
                            "-storagedrivers_guids", 
                            "-services_guids", 
                            "-domains_guids", 
                            "-alba_node_guid", 
                            "-iscsi_node_guid"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given Storage Router", 
                        "schema": {
                            "$ref": "#/definitions/StorageRouter"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given Storage Router"
            }, 
            "patch": {
                "operationId": "storagerouters.partial_update", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "ip", 
                            "heartbeats", 
                            "node_type", 
                            "rdma_capable", 
                            "last_heartbeat", 
                            "name", 
                            "machine_id", 
                            "description", 
                            "package_information", 
                            "vdisks_guids", 
                            "detailed_status", 
                            "status", 
                            "partition_config", 
                            "regular_domains", 
                            "recovery_domains", 
                            "features", 
                            "statistics", 
                            "vpools_guids", 
                            "nbd_node_guid", 
                            "disks_guids", 
                            "storagedrivers_guids", 
                            "services_guids", 
                            "domains_guids", 
                            "alba_node_guid", 
                            "iscsi_node_guid", 
                            "-ip", 
                            "-heartbeats", 
                            "-node_type", 
                            "-rdma_capable", 
                            "-last_heartbeat", 
                            "-name", 
                            "-machine_id", 
                            "-description", 
                            "-package_information", 
                            "-vdisks_guids", 
                            "-detailed_status", 
                            "-status", 
                            "-partition_config", 
                            "-regular_domains", 
                            "-recovery_domains", 
                            "-features", 
                            "-statistics", 
                            "-vpools_guids", 
                            "-nbd_node_guid", 
                            "-disks_guids", 
                            "-storagedrivers_guids", 
                            "-services_guids", 
                            "-domains_guids", 
                            "-alba_node_guid", 
                            "-iscsi_node_guid"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }, 
                    {
                        "in": "body", 
                        "name": "storagerouter", 
                        "schema": {
                            "properties": {}, 
                            "required": [], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "202": {
                        "description": "Update a Storage Router", 
                        "schema": {
                            "$ref": "#/definitions/StorageRouter"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Update a Storage Router"
            }
        }, 
        "/storagerouters/{guid}/add_vpool/": {
            "post": {
                "operationId": "storagerouters.post_add_vpool", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "storagerouter", 
                        "schema": {
                            "properties": {
                                "backend_info": {
                                    "description": " Keys: preset:str, alba_backend_guid:str.", 
                                    "type": "object"
                                }, 
                                "block_cache_on_read": {
                                    "description": " Enable/disable block cache on read.", 
                                    "type": "boolean"
                                }, 
                                "block_cache_on_write": {
                                    "description": " Enable/disable block cache on write.", 
                                    "type": "boolean"
                                }, 
                                "config_params": {
                                    "description": " Keys: dtl_mode:str, sco_size:int, cluster_size:int, write_buffer:int, dtl_transport:str.", 
                                    "type": "object"
                                }, 
                                "connection_info": {
                                    "description": " Keys: host:str, port:int, local:bool, client_id:str, client_secret:str.", 
                                    "type": "object"
                                }, 
                                "fragment_cache_on_read": {
                                    "description": " Enable/disable fragment cache on read.", 
                                    "type": "boolean"
                                }, 
                                "fragment_cache_on_write": {
                                    "description": " Enable/disable fragment cache on write.", 
                                    "type": "boolean"
                                }, 
                                "parallelism": {
                                    "description": " Keys: proxies:int.", 
                                    "type": "object"
                                }, 
                                "storage_ip": {
                                    "description": " IP address on which the vpool is shared to hypervisor.", 
                                    "type": "string"
                                }, 
                                "storagerouter_ip": {
                                    "description": " IP of StorageRouter for SSHClient.", 
                                    "type": "string"
                                }, 
                                "vpool_name": {
                                    "description": " Name of new vPool.", 
                                    "type": "string"
                                }, 
                                "writecache_size": {
                                    "description": " Size of WRITE cache to use (in GBs).", 
                                    "type": "integer"
                                }
                            }, 
                            "required": [
                                "vpool_name", 
                                "storage_ip", 
                                "storagerouter_ip", 
                                "writecache_size", 
                                "fragment_cache_on_read", 
                                "fragment_cache_on_write", 
                                "block_cache_on_read", 
                                "block_cache_on_write", 
                                "connection_info", 
                                "backend_info", 
                                "config_params", 
                                "parallelism"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Adds a vPool to a given Storage Router", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Adds a vPool to a given Storage Router"
            }
        }, 
        "/storagerouters/{guid}/check_mtpt/": {
            "post": {
                "operationId": "storagerouters.post_check_mtpt", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "storagerouter", 
                        "schema": {
                            "properties": {
                                "name": {
                                    "description": " The name of the mountpoint to validate (vPool name)", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "name"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Validates whether the mountpoint for a vPool is available", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Validates whether the mountpoint for a vPool is available"
            }
        }, 
        "/storagerouters/{guid}/configure_disk/": {
            "post": {
                "operationId": "storagerouters.post_configure_disk", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "storagerouter", 
                        "schema": {
                            "properties": {
                                "disk_guid": {
                                    "description": " The GUID of the Disk to configure", 
                                    "type": "string"
                                }, 
                                "offset": {
                                    "description": " The offset of the partition to configure", 
                                    "type": "integer"
                                }, 
                                "partition_guid": {
                                    "description": " The guid of the partition if applicable", 
                                    "type": "string"
                                }, 
                                "roles": {
                                    "description": " A list of all roles to be assigned", 
                                    "items": {}, 
                                    "type": "array"
                                }, 
                                "size": {
                                    "description": " The size of the partition to configure", 
                                    "type": "integer"
                                }
                            }, 
                            "required": [
                                "disk_guid", 
                                "offset", 
                                "size", 
                                "roles"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Configures a Disk on a Storage Router", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Configures a Disk on a Storage Router"
            }
        }, 
        "/storagerouters/{guid}/create_hprm_config_files/": {
            "get": {
                "operationId": "storagerouters.get_create_hprm_config_files", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "description": " Additional information required for the HPRM configuration files", 
                        "in": "query", 
                        "name": "parameters", 
                        "required": true, 
                        "type": "object"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Create the required configuration files to be able to make use of HPRM (aka PRACC)", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Create the required configuration files to be able to make use of HPRM (aka PRACC)"
            }
        }, 
        "/storagerouters/{guid}/extend_vpool/": {
            "post": {
                "operationId": "storagerouters.post_extend_vpool", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "storagerouter", 
                        "schema": {
                            "properties": {
                                "proxies": {
                                    "description": " Keys: Number of ALBA Proxies to create.", 
                                    "type": "integer"
                                }, 
                                "storage_ip": {
                                    "description": " IP address on which the vpool is shared to hypervisor.", 
                                    "type": "string"
                                }, 
                                "storagerouter_ip": {
                                    "description": " IP of StorageRouter for SSHClient.", 
                                    "type": "string"
                                }, 
                                "vpool_name": {
                                    "description": " Name of extending vPool.", 
                                    "type": "string"
                                }, 
                                "writecache_size": {
                                    "description": " Size (in GBs) of WRITE cache to use on new StorageRouter.", 
                                    "type": "integer"
                                }
                            }, 
                            "required": [
                                "vpool_name", 
                                "storage_ip", 
                                "storagerouter_ip", 
                                "writecache_size", 
                                "proxies"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Extend vPool to a given Storage Router", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Extend vPool to a given Storage Router"
            }
        }, 
        "/storagerouters/{guid}/get_logfiles/": {
            "get": {
                "operationId": "storagerouters.get_get_logfiles", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Collects logs, moves them to a web-accessible location and returns log tgz's filename", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Collects logs, moves them to a web-accessible location and returns log tgz's filename"
            }
        }, 
        "/storagerouters/{guid}/get_metadata/": {
            "get": {
                "operationId": "storagerouters.get_get_metadata", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Returns a list of mountpoints on the given Storage Router", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Returns a list of mountpoints on the given Storage Router"
            }
        }, 
        "/storagerouters/{guid}/get_proxy_config/": {
            "get": {
                "operationId": "storagerouters.get_get_proxy_config", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "description": " Guid of the vPool for which the proxy is configured", 
                        "in": "query", 
                        "name": "vpool_guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Gets the ALBA Proxy for a given Storage Router and vPool", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Gets the ALBA Proxy for a given Storage Router and vPool"
            }
        }, 
        "/storagerouters/{guid}/get_support_info/": {
            "get": {
                "operationId": "storagerouters.get_get_support_info", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Gets support information of a given Storage Router", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Gets support information of a given Storage Router"
            }
        }, 
        "/storagerouters/{guid}/get_support_metadata/": {
            "get": {
                "operationId": "storagerouters.get_get_support_metadata", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Gets support metadata of a given Storage Router", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Gets support metadata of a given Storage Router"
            }
        }, 
        "/storagerouters/{guid}/get_update_metadata/": {
            "get": {
                "operationId": "storagerouters.get_get_update_metadata", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Returns metadata required for updating", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Returns metadata required for updating"
            }
        }, 
        "/storagerouters/{guid}/get_version_info/": {
            "get": {
                "operationId": "storagerouters.get_get_version_info", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Gets version information of a given Storage Router", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Gets version information of a given Storage Router"
            }
        }, 
        "/storagerouters/{guid}/mark_offline/": {
            "post": {
                "operationId": "storagerouters.post_mark_offline", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Marks all Storage Drivers of a given Node offline. DO NOT USE ON RUNNING STORAGE ROUTERS!", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Marks all Storage Drivers of a given Node offline. DO NOT USE ON RUNNING STORAGE ROUTERS!"
            }
        }, 
        "/storagerouters/{guid}/refresh_hardware/": {
            "post": {
                "operationId": "storagerouters.post_refresh_hardware", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Refreshes all hardware parameters", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Refreshes all hardware parameters"
            }
        }, 
        "/storagerouters/{guid}/rescan_disks/": {
            "post": {
                "operationId": "storagerouters.post_rescan_disks", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Triggers a Disk sync on the given Storage Router", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Triggers a Disk sync on the given Storage Router"
            }
        }, 
        "/storagerouters/{guid}/set_domains/": {
            "post": {
                "operationId": "storagerouters.post_set_domains", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "storagerouter", 
                        "schema": {
                            "properties": {
                                "domain_guids": {
                                    "description": " A list of Domain guids", 
                                    "items": {}, 
                                    "type": "array"
                                }, 
                                "recovery_domain_guids": {
                                    "description": " A list of Domain guids to set as recovery Domain", 
                                    "items": {}, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "domain_guids", 
                                "recovery_domain_guids"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Configures the given Domains to the Storage Router."
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Configures the given Domains to the Storage Router."
            }
        }, 
        "/tasks/": {
            "get": {
                "operationId": "tasks.list", 
                "parameters": [], 
                "responses": {
                    "200": {
                        "description": "Overview of active, scheduled, reserved and revoked tasks", 
                        "schema": {
                            "description": "Dict of all tasks", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Overview of active, scheduled, reserved and revoked tasks"
            }
        }, 
        "/tasks/{guid}/": {
            "get": {
                "operationId": "tasks.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which the call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given task", 
                        "schema": {
                            "description": "Task metadata (status, result, ...)", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given task"
            }
        }, 
        "/tasks/{guid}/get/": {
            "get": {
                "operationId": "tasks.get_get", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which the call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Gets a given task's result", 
                        "schema": {
                            "description": "Task result", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Gets a given task's result"
            }
        }, 
        "/users/": {
            "get": {
                "operationId": "users.list", 
                "parameters": [
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "username", 
                            "is_active", 
                            "language", 
                            "password", 
                            "group_guid", 
                            "backend_rights_guids", 
                            "clients_guids", 
                            "-username", 
                            "-is_active", 
                            "-language", 
                            "-password", 
                            "-group_guid", 
                            "-backend_rights_guids", 
                            "-clients_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "username", 
                            "is_active", 
                            "language", 
                            "password", 
                            "group_guid", 
                            "backend_rights_guids", 
                            "clients_guids", 
                            "-username", 
                            "-is_active", 
                            "-language", 
                            "-password", 
                            "-group_guid", 
                            "-backend_rights_guids", 
                            "-clients_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Lists all available Users where the logged in User has access to", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "username", 
                                        "is_active", 
                                        "language", 
                                        "password", 
                                        "group_guid", 
                                        "backend_rights_guids", 
                                        "clients_guids", 
                                        "-username", 
                                        "-is_active", 
                                        "-language", 
                                        "-password", 
                                        "-group_guid", 
                                        "-backend_rights_guids", 
                                        "-clients_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "username", 
                                        "is_active", 
                                        "language", 
                                        "password", 
                                        "group_guid", 
                                        "backend_rights_guids", 
                                        "clients_guids", 
                                        "-username", 
                                        "-is_active", 
                                        "-language", 
                                        "-password", 
                                        "-group_guid", 
                                        "-backend_rights_guids", 
                                        "-clients_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized Users.", 
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Lists all available Users where the logged in User has access to"
            }, 
            "post": {
                "operationId": "users.create", 
                "parameters": [
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "username", 
                            "is_active", 
                            "language", 
                            "password", 
                            "group_guid", 
                            "backend_rights_guids", 
                            "clients_guids", 
                            "-username", 
                            "-is_active", 
                            "-language", 
                            "-password", 
                            "-group_guid", 
                            "-backend_rights_guids", 
                            "-clients_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }, 
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "group_guid": {
                                    "description": " Group to bind User to.", 
                                    "type": "string"
                                }, 
                                "is_active": {
                                    "description": " Indicates whether the User is active..", 
                                    "type": "boolean"
                                }, 
                                "language": {
                                    "description": " Language of the User.", 
                                    "type": "string"
                                }, 
                                "password": {
                                    "description": " Password of the User.", 
                                    "type": "string"
                                }, 
                                "username": {
                                    "description": " Username of the User.", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "username", 
                                "password", 
                                "group_guid"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Creates a User", 
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Creates a User"
            }
        }, 
        "/users/{guid}/": {
            "delete": {
                "operationId": "users.destroy", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deletes a User"
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Deletes a User"
            }, 
            "get": {
                "operationId": "users.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "username", 
                            "is_active", 
                            "language", 
                            "password", 
                            "group_guid", 
                            "backend_rights_guids", 
                            "clients_guids", 
                            "-username", 
                            "-is_active", 
                            "-language", 
                            "-password", 
                            "-group_guid", 
                            "-backend_rights_guids", 
                            "-clients_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given User. Only the currently logged in User is accessible, or all if the logged in User has a manage role", 
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given User. Only the currently logged in User is accessible, or all if the logged in User has a manage role"
            }, 
            "patch": {
                "operationId": "users.partial_update", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "username", 
                            "is_active", 
                            "language", 
                            "password", 
                            "group_guid", 
                            "backend_rights_guids", 
                            "clients_guids", 
                            "-username", 
                            "-is_active", 
                            "-language", 
                            "-password", 
                            "-group_guid", 
                            "-backend_rights_guids", 
                            "-clients_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }, 
                    {
                        "in": "body", 
                        "name": "user", 
                        "schema": {
                            "properties": {}, 
                            "required": [], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "202": {
                        "description": "Update a User", 
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Update a User"
            }
        }, 
        "/users/{guid}/set_password/": {
            "post": {
                "operationId": "users.post_set_password", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "username", 
                            "is_active", 
                            "language", 
                            "password", 
                            "group_guid", 
                            "backend_rights_guids", 
                            "clients_guids", 
                            "-username", 
                            "-is_active", 
                            "-language", 
                            "-password", 
                            "-group_guid", 
                            "-backend_rights_guids", 
                            "-clients_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }, 
                    {
                        "in": "body", 
                        "name": "user", 
                        "schema": {
                            "properties": {
                                "new_password": {
                                    "description": " The new password to be set", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "new_password"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "202": {
                        "description": "Sets the password of a given User. A logged in User can only changes its own password, or all passwords if the logged in User has a manage role", 
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Sets the password of a given User. A logged in User can only changes its own password, or all passwords if the logged in User has a manage role"
            }
        }, 
        "/vdisks/": {
            "get": {
                "operationId": "vdisks.list", 
                "parameters": [
                    {
                        "description": " Guid of the vPool to retrieve its disks", 
                        "in": "query", 
                        "name": "vpoolguid", 
                        "required": false, 
                        "type": "string"
                    }, 
                    {
                        "description": " Guid of the StorageRouter to retrieve its disks", 
                        "in": "query", 
                        "name": "storagerouterguid", 
                        "required": false, 
                        "type": "string"
                    }, 
                    {
                        "description": " A query to be executed if required", 
                        "in": "query", 
                        "name": "query", 
                        "required": false, 
                        "type": "string"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "description", 
                            "size", 
                            "metadata", 
                            "devicename", 
                            "volume_id", 
                            "parentsnapshot", 
                            "cinder_id", 
                            "has_manual_dtl", 
                            "name", 
                            "scrubbing_information", 
                            "pagecache_ratio", 
                            "cache_quota", 
                            "parent_vdisk_guid", 
                            "vpool_guid", 
                            "info", 
                            "statistics", 
                            "storagedriver_id", 
                            "storagerouter_guid", 
                            "is_vtemplate", 
                            "dtl_status", 
                            "being_scrubbed", 
                            "snapshots", 
                            "snapshot_ids", 
                            "edge_clients", 
                            "mds_services_guids", 
                            "domains_dtl_guids", 
                            "nbdnodes_guids", 
                            "iscsinodes_guids", 
                            "child_vdisks_guids", 
                            "-description", 
                            "-size", 
                            "-metadata", 
                            "-devicename", 
                            "-volume_id", 
                            "-parentsnapshot", 
                            "-cinder_id", 
                            "-has_manual_dtl", 
                            "-name", 
                            "-scrubbing_information", 
                            "-pagecache_ratio", 
                            "-cache_quota", 
                            "-parent_vdisk_guid", 
                            "-vpool_guid", 
                            "-info", 
                            "-statistics", 
                            "-storagedriver_id", 
                            "-storagerouter_guid", 
                            "-is_vtemplate", 
                            "-dtl_status", 
                            "-being_scrubbed", 
                            "-snapshots", 
                            "-snapshot_ids", 
                            "-edge_clients", 
                            "-mds_services_guids", 
                            "-domains_dtl_guids", 
                            "-nbdnodes_guids", 
                            "-iscsinodes_guids", 
                            "-child_vdisks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "description", 
                            "size", 
                            "metadata", 
                            "devicename", 
                            "volume_id", 
                            "parentsnapshot", 
                            "cinder_id", 
                            "has_manual_dtl", 
                            "name", 
                            "scrubbing_information", 
                            "pagecache_ratio", 
                            "cache_quota", 
                            "parent_vdisk_guid", 
                            "vpool_guid", 
                            "info", 
                            "statistics", 
                            "storagedriver_id", 
                            "storagerouter_guid", 
                            "is_vtemplate", 
                            "dtl_status", 
                            "being_scrubbed", 
                            "snapshots", 
                            "snapshot_ids", 
                            "edge_clients", 
                            "mds_services_guids", 
                            "domains_dtl_guids", 
                            "nbdnodes_guids", 
                            "iscsinodes_guids", 
                            "child_vdisks_guids", 
                            "-description", 
                            "-size", 
                            "-metadata", 
                            "-devicename", 
                            "-volume_id", 
                            "-parentsnapshot", 
                            "-cinder_id", 
                            "-has_manual_dtl", 
                            "-name", 
                            "-scrubbing_information", 
                            "-pagecache_ratio", 
                            "-cache_quota", 
                            "-parent_vdisk_guid", 
                            "-vpool_guid", 
                            "-info", 
                            "-statistics", 
                            "-storagedriver_id", 
                            "-storagerouter_guid", 
                            "-is_vtemplate", 
                            "-dtl_status", 
                            "-being_scrubbed", 
                            "-snapshots", 
                            "-snapshot_ids", 
                            "-edge_clients", 
                            "-mds_services_guids", 
                            "-domains_dtl_guids", 
                            "-nbdnodes_guids", 
                            "-iscsinodes_guids", 
                            "-child_vdisks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Overview of all vDisks", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "description", 
                                        "size", 
                                        "metadata", 
                                        "devicename", 
                                        "volume_id", 
                                        "parentsnapshot", 
                                        "cinder_id", 
                                        "has_manual_dtl", 
                                        "name", 
                                        "scrubbing_information", 
                                        "pagecache_ratio", 
                                        "cache_quota", 
                                        "parent_vdisk_guid", 
                                        "vpool_guid", 
                                        "info", 
                                        "statistics", 
                                        "storagedriver_id", 
                                        "storagerouter_guid", 
                                        "is_vtemplate", 
                                        "dtl_status", 
                                        "being_scrubbed", 
                                        "snapshots", 
                                        "snapshot_ids", 
                                        "edge_clients", 
                                        "mds_services_guids", 
                                        "domains_dtl_guids", 
                                        "nbdnodes_guids", 
                                        "iscsinodes_guids", 
                                        "child_vdisks_guids", 
                                        "-description", 
                                        "-size", 
                                        "-metadata", 
                                        "-devicename", 
                                        "-volume_id", 
                                        "-parentsnapshot", 
                                        "-cinder_id", 
                                        "-has_manual_dtl", 
                                        "-name", 
                                        "-scrubbing_information", 
                                        "-pagecache_ratio", 
                                        "-cache_quota", 
                                        "-parent_vdisk_guid", 
                                        "-vpool_guid", 
                                        "-info", 
                                        "-statistics", 
                                        "-storagedriver_id", 
                                        "-storagerouter_guid", 
                                        "-is_vtemplate", 
                                        "-dtl_status", 
                                        "-being_scrubbed", 
                                        "-snapshots", 
                                        "-snapshot_ids", 
                                        "-edge_clients", 
                                        "-mds_services_guids", 
                                        "-domains_dtl_guids", 
                                        "-nbdnodes_guids", 
                                        "-iscsinodes_guids", 
                                        "-child_vdisks_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "description", 
                                        "size", 
                                        "metadata", 
                                        "devicename", 
                                        "volume_id", 
                                        "parentsnapshot", 
                                        "cinder_id", 
                                        "has_manual_dtl", 
                                        "name", 
                                        "scrubbing_information", 
                                        "pagecache_ratio", 
                                        "cache_quota", 
                                        "parent_vdisk_guid", 
                                        "vpool_guid", 
                                        "info", 
                                        "statistics", 
                                        "storagedriver_id", 
                                        "storagerouter_guid", 
                                        "is_vtemplate", 
                                        "dtl_status", 
                                        "being_scrubbed", 
                                        "snapshots", 
                                        "snapshot_ids", 
                                        "edge_clients", 
                                        "mds_services_guids", 
                                        "domains_dtl_guids", 
                                        "nbdnodes_guids", 
                                        "iscsinodes_guids", 
                                        "child_vdisks_guids", 
                                        "-description", 
                                        "-size", 
                                        "-metadata", 
                                        "-devicename", 
                                        "-volume_id", 
                                        "-parentsnapshot", 
                                        "-cinder_id", 
                                        "-has_manual_dtl", 
                                        "-name", 
                                        "-scrubbing_information", 
                                        "-pagecache_ratio", 
                                        "-cache_quota", 
                                        "-parent_vdisk_guid", 
                                        "-vpool_guid", 
                                        "-info", 
                                        "-statistics", 
                                        "-storagedriver_id", 
                                        "-storagerouter_guid", 
                                        "-is_vtemplate", 
                                        "-dtl_status", 
                                        "-being_scrubbed", 
                                        "-snapshots", 
                                        "-snapshot_ids", 
                                        "-edge_clients", 
                                        "-mds_services_guids", 
                                        "-domains_dtl_guids", 
                                        "-nbdnodes_guids", 
                                        "-iscsinodes_guids", 
                                        "-child_vdisks_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized VDisks.", 
                                    "items": {
                                        "$ref": "#/definitions/VDisk"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Overview of all vDisks"
            }, 
            "post": {
                "operationId": "vdisks.create", 
                "parameters": [
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "cache_quota": {
                                    "description": " Maximum caching space(s) the new volume can consume (in Bytes) per cache type.", 
                                    "type": "object"
                                }, 
                                "name": {
                                    "description": " Name of the new vdisk", 
                                    "type": "string"
                                }, 
                                "pagecache_ratio": {
                                    "description": " Ratio (0 < x <= 1) of the pagecache size related to the size", 
                                    "type": "number"
                                }, 
                                "size": {
                                    "description": " Size of  virtual disk in bytes", 
                                    "type": "integer"
                                }, 
                                "storagerouter_guid": {
                                    "description": " Guid of the storagerouter to assign disk to", 
                                    "type": "string"
                                }, 
                                "vpool_guid": {
                                    "description": " Guid of vPool to create new vdisk on", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "name", 
                                "size", 
                                "vpool_guid", 
                                "storagerouter_guid"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Create a new vDisk", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Create a new vDisk"
            }
        }, 
        "/vdisks/{guid}/": {
            "delete": {
                "operationId": "vdisks.destroy", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Delete a given vDisk", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Delete a given vDisk"
            }, 
            "get": {
                "operationId": "vdisks.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "description", 
                            "size", 
                            "metadata", 
                            "devicename", 
                            "volume_id", 
                            "parentsnapshot", 
                            "cinder_id", 
                            "has_manual_dtl", 
                            "name", 
                            "scrubbing_information", 
                            "pagecache_ratio", 
                            "cache_quota", 
                            "parent_vdisk_guid", 
                            "vpool_guid", 
                            "info", 
                            "statistics", 
                            "storagedriver_id", 
                            "storagerouter_guid", 
                            "is_vtemplate", 
                            "dtl_status", 
                            "being_scrubbed", 
                            "snapshots", 
                            "snapshot_ids", 
                            "edge_clients", 
                            "mds_services_guids", 
                            "domains_dtl_guids", 
                            "nbdnodes_guids", 
                            "iscsinodes_guids", 
                            "child_vdisks_guids", 
                            "-description", 
                            "-size", 
                            "-metadata", 
                            "-devicename", 
                            "-volume_id", 
                            "-parentsnapshot", 
                            "-cinder_id", 
                            "-has_manual_dtl", 
                            "-name", 
                            "-scrubbing_information", 
                            "-pagecache_ratio", 
                            "-cache_quota", 
                            "-parent_vdisk_guid", 
                            "-vpool_guid", 
                            "-info", 
                            "-statistics", 
                            "-storagedriver_id", 
                            "-storagerouter_guid", 
                            "-is_vtemplate", 
                            "-dtl_status", 
                            "-being_scrubbed", 
                            "-snapshots", 
                            "-snapshot_ids", 
                            "-edge_clients", 
                            "-mds_services_guids", 
                            "-domains_dtl_guids", 
                            "-nbdnodes_guids", 
                            "-iscsinodes_guids", 
                            "-child_vdisks_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given vDisk", 
                        "schema": {
                            "$ref": "#/definitions/VDisk"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given vDisk"
            }
        }, 
        "/vdisks/{guid}/clone/": {
            "post": {
                "operationId": "vdisks.post_clone", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "vdisk", 
                        "schema": {
                            "properties": {
                                "cache_quota": {
                                    "description": " Maximum caching space(s) the new clone can consume (in Bytes) per cache type.", 
                                    "type": "object"
                                }, 
                                "name": {
                                    "description": " Name for the clone (filename or user friendly name)", 
                                    "type": "string"
                                }, 
                                "pagecache_ratio": {
                                    "description": " Ratio (0 < x <= 1) of the pagecache size related to the size", 
                                    "type": "number"
                                }, 
                                "snapshot_id": {
                                    "description": " ID of the snapshot to clone from", 
                                    "type": "string"
                                }, 
                                "storagerouter_guid": {
                                    "description": " Guid of the storagerouter hosting the virtual disk", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "name", 
                                "storagerouter_guid"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Clones a vDisk", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Clones a vDisk"
            }
        }, 
        "/vdisks/{guid}/create_from_template/": {
            "post": {
                "operationId": "vdisks.post_create_from_template", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "vdisk", 
                        "schema": {
                            "properties": {
                                "cache_quota": {
                                    "description": " Maximum caching space(s) the new volume can consume (in Bytes) per cache type.", 
                                    "type": "object"
                                }, 
                                "name": {
                                    "description": " Name of the new vdisk", 
                                    "type": "string"
                                }, 
                                "pagecache_ratio": {
                                    "description": " Ratio (0 < x <= 1) of the pagecache size related to the size", 
                                    "type": "number"
                                }, 
                                "storagerouter_guid": {
                                    "description": " Guid of StorageRouter to create new vDisk on", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "name", 
                                "storagerouter_guid"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Create a new vDisk from a Template vDisk", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Create a new vDisk from a Template vDisk"
            }
        }, 
        "/vdisks/{guid}/create_snapshot/": {
            "post": {
                "operationId": "vdisks.post_create_snapshot", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "vdisk", 
                        "schema": {
                            "properties": {
                                "automatic": {
                                    "description": " Indicates whether the snapshot was triggered by an automatic or manual process", 
                                    "type": "boolean"
                                }, 
                                "consistent": {
                                    "description": " Indicates whether the snapshot will be consistent", 
                                    "type": "boolean"
                                }, 
                                "name": {
                                    "description": " Name of the snapshot (label)", 
                                    "type": "string"
                                }, 
                                "sticky": {
                                    "description": " Indicates whether the system should clean the snapshot automatically", 
                                    "type": "boolean"
                                }, 
                                "timestamp": {
                                    "description": " Timestamp of the snapshot", 
                                    "type": "integer"
                                }
                            }, 
                            "required": [
                                "name"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Creates a snapshot from the vDisk", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Creates a snapshot from the vDisk"
            }
        }, 
        "/vdisks/{guid}/extend/": {
            "post": {
                "operationId": "vdisks.post_extend", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "vdisk", 
                        "schema": {
                            "properties": {
                                "new_size": {
                                    "description": " The new size of the vDisk (in bytes)", 
                                    "type": "integer"
                                }
                            }, 
                            "required": [
                                "new_size"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Extends a given vDisk to a new size", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Extends a given vDisk to a new size"
            }
        }, 
        "/vdisks/{guid}/get_config_params/": {
            "get": {
                "operationId": "vdisks.get_get_config_params", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Retrieve the configuration parameters for the given Disk from the Storage Driver.", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Retrieve the configuration parameters for the given Disk from the Storage Driver."
            }
        }, 
        "/vdisks/{guid}/get_scrub_storagerouters/": {
            "get": {
                "operationId": "vdisks.get_get_scrub_storagerouters", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "ip", 
                            "heartbeats", 
                            "node_type", 
                            "rdma_capable", 
                            "last_heartbeat", 
                            "name", 
                            "machine_id", 
                            "description", 
                            "package_information", 
                            "vdisks_guids", 
                            "detailed_status", 
                            "status", 
                            "partition_config", 
                            "regular_domains", 
                            "recovery_domains", 
                            "features", 
                            "statistics", 
                            "vpools_guids", 
                            "nbd_node_guid", 
                            "disks_guids", 
                            "storagedrivers_guids", 
                            "services_guids", 
                            "domains_guids", 
                            "alba_node_guid", 
                            "iscsi_node_guid", 
                            "-ip", 
                            "-heartbeats", 
                            "-node_type", 
                            "-rdma_capable", 
                            "-last_heartbeat", 
                            "-name", 
                            "-machine_id", 
                            "-description", 
                            "-package_information", 
                            "-vdisks_guids", 
                            "-detailed_status", 
                            "-status", 
                            "-partition_config", 
                            "-regular_domains", 
                            "-recovery_domains", 
                            "-features", 
                            "-statistics", 
                            "-vpools_guids", 
                            "-nbd_node_guid", 
                            "-disks_guids", 
                            "-storagedrivers_guids", 
                            "-services_guids", 
                            "-domains_guids", 
                            "-alba_node_guid", 
                            "-iscsi_node_guid"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "ip", 
                            "heartbeats", 
                            "node_type", 
                            "rdma_capable", 
                            "last_heartbeat", 
                            "name", 
                            "machine_id", 
                            "description", 
                            "package_information", 
                            "vdisks_guids", 
                            "detailed_status", 
                            "status", 
                            "partition_config", 
                            "regular_domains", 
                            "recovery_domains", 
                            "features", 
                            "statistics", 
                            "vpools_guids", 
                            "nbd_node_guid", 
                            "disks_guids", 
                            "storagedrivers_guids", 
                            "services_guids", 
                            "domains_guids", 
                            "alba_node_guid", 
                            "iscsi_node_guid", 
                            "-ip", 
                            "-heartbeats", 
                            "-node_type", 
                            "-rdma_capable", 
                            "-last_heartbeat", 
                            "-name", 
                            "-machine_id", 
                            "-description", 
                            "-package_information", 
                            "-vdisks_guids", 
                            "-detailed_status", 
                            "-status", 
                            "-partition_config", 
                            "-regular_domains", 
                            "-recovery_domains", 
                            "-features", 
                            "-statistics", 
                            "-vpools_guids", 
                            "-nbd_node_guid", 
                            "-disks_guids", 
                            "-storagedrivers_guids", 
                            "-services_guids", 
                            "-domains_guids", 
                            "-alba_node_guid", 
                            "-iscsi_node_guid"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Loads a list of suitable Storage Routers for scrubbing the given vDisk", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "ip", 
                                        "heartbeats", 
                                        "node_type", 
                                        "rdma_capable", 
                                        "last_heartbeat", 
                                        "name", 
                                        "machine_id", 
                                        "description", 
                                        "package_information", 
                                        "vdisks_guids", 
                                        "detailed_status", 
                                        "status", 
                                        "partition_config", 
                                        "regular_domains", 
                                        "recovery_domains", 
                                        "features", 
                                        "statistics", 
                                        "vpools_guids", 
                                        "nbd_node_guid", 
                                        "disks_guids", 
                                        "storagedrivers_guids", 
                                        "services_guids", 
                                        "domains_guids", 
                                        "alba_node_guid", 
                                        "iscsi_node_guid", 
                                        "-ip", 
                                        "-heartbeats", 
                                        "-node_type", 
                                        "-rdma_capable", 
                                        "-last_heartbeat", 
                                        "-name", 
                                        "-machine_id", 
                                        "-description", 
                                        "-package_information", 
                                        "-vdisks_guids", 
                                        "-detailed_status", 
                                        "-status", 
                                        "-partition_config", 
                                        "-regular_domains", 
                                        "-recovery_domains", 
                                        "-features", 
                                        "-statistics", 
                                        "-vpools_guids", 
                                        "-nbd_node_guid", 
                                        "-disks_guids", 
                                        "-storagedrivers_guids", 
                                        "-services_guids", 
                                        "-domains_guids", 
                                        "-alba_node_guid", 
                                        "-iscsi_node_guid"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "ip", 
                                        "heartbeats", 
                                        "node_type", 
                                        "rdma_capable", 
                                        "last_heartbeat", 
                                        "name", 
                                        "machine_id", 
                                        "description", 
                                        "package_information", 
                                        "vdisks_guids", 
                                        "detailed_status", 
                                        "status", 
                                        "partition_config", 
                                        "regular_domains", 
                                        "recovery_domains", 
                                        "features", 
                                        "statistics", 
                                        "vpools_guids", 
                                        "nbd_node_guid", 
                                        "disks_guids", 
                                        "storagedrivers_guids", 
                                        "services_guids", 
                                        "domains_guids", 
                                        "alba_node_guid", 
                                        "iscsi_node_guid", 
                                        "-ip", 
                                        "-heartbeats", 
                                        "-node_type", 
                                        "-rdma_capable", 
                                        "-last_heartbeat", 
                                        "-name", 
                                        "-machine_id", 
                                        "-description", 
                                        "-package_information", 
                                        "-vdisks_guids", 
                                        "-detailed_status", 
                                        "-status", 
                                        "-partition_config", 
                                        "-regular_domains", 
                                        "-recovery_domains", 
                                        "-features", 
                                        "-statistics", 
                                        "-vpools_guids", 
                                        "-nbd_node_guid", 
                                        "-disks_guids", 
                                        "-storagedrivers_guids", 
                                        "-services_guids", 
                                        "-domains_guids", 
                                        "-alba_node_guid", 
                                        "-iscsi_node_guid"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized StorageRouters.", 
                                    "items": {
                                        "$ref": "#/definitions/StorageRouter"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Loads a list of suitable Storage Routers for scrubbing the given vDisk"
            }
        }, 
        "/vdisks/{guid}/get_target_storagerouters/": {
            "get": {
                "operationId": "vdisks.get_get_target_storagerouters", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "ip", 
                            "heartbeats", 
                            "node_type", 
                            "rdma_capable", 
                            "last_heartbeat", 
                            "name", 
                            "machine_id", 
                            "description", 
                            "package_information", 
                            "vdisks_guids", 
                            "detailed_status", 
                            "status", 
                            "partition_config", 
                            "regular_domains", 
                            "recovery_domains", 
                            "features", 
                            "statistics", 
                            "vpools_guids", 
                            "nbd_node_guid", 
                            "disks_guids", 
                            "storagedrivers_guids", 
                            "services_guids", 
                            "domains_guids", 
                            "alba_node_guid", 
                            "iscsi_node_guid", 
                            "-ip", 
                            "-heartbeats", 
                            "-node_type", 
                            "-rdma_capable", 
                            "-last_heartbeat", 
                            "-name", 
                            "-machine_id", 
                            "-description", 
                            "-package_information", 
                            "-vdisks_guids", 
                            "-detailed_status", 
                            "-status", 
                            "-partition_config", 
                            "-regular_domains", 
                            "-recovery_domains", 
                            "-features", 
                            "-statistics", 
                            "-vpools_guids", 
                            "-nbd_node_guid", 
                            "-disks_guids", 
                            "-storagedrivers_guids", 
                            "-services_guids", 
                            "-domains_guids", 
                            "-alba_node_guid", 
                            "-iscsi_node_guid"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "ip", 
                            "heartbeats", 
                            "node_type", 
                            "rdma_capable", 
                            "last_heartbeat", 
                            "name", 
                            "machine_id", 
                            "description", 
                            "package_information", 
                            "vdisks_guids", 
                            "detailed_status", 
                            "status", 
                            "partition_config", 
                            "regular_domains", 
                            "recovery_domains", 
                            "features", 
                            "statistics", 
                            "vpools_guids", 
                            "nbd_node_guid", 
                            "disks_guids", 
                            "storagedrivers_guids", 
                            "services_guids", 
                            "domains_guids", 
                            "alba_node_guid", 
                            "iscsi_node_guid", 
                            "-ip", 
                            "-heartbeats", 
                            "-node_type", 
                            "-rdma_capable", 
                            "-last_heartbeat", 
                            "-name", 
                            "-machine_id", 
                            "-description", 
                            "-package_information", 
                            "-vdisks_guids", 
                            "-detailed_status", 
                            "-status", 
                            "-partition_config", 
                            "-regular_domains", 
                            "-recovery_domains", 
                            "-features", 
                            "-statistics", 
                            "-vpools_guids", 
                            "-nbd_node_guid", 
                            "-disks_guids", 
                            "-storagedrivers_guids", 
                            "-services_guids", 
                            "-domains_guids", 
                            "-alba_node_guid", 
                            "-iscsi_node_guid"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Gets all possible target Storage Routers for a given vDisk (e.g. when cloning, creating from template or moving)", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "ip", 
                                        "heartbeats", 
                                        "node_type", 
                                        "rdma_capable", 
                                        "last_heartbeat", 
                                        "name", 
                                        "machine_id", 
                                        "description", 
                                        "package_information", 
                                        "vdisks_guids", 
                                        "detailed_status", 
                                        "status", 
                                        "partition_config", 
                                        "regular_domains", 
                                        "recovery_domains", 
                                        "features", 
                                        "statistics", 
                                        "vpools_guids", 
                                        "nbd_node_guid", 
                                        "disks_guids", 
                                        "storagedrivers_guids", 
                                        "services_guids", 
                                        "domains_guids", 
                                        "alba_node_guid", 
                                        "iscsi_node_guid", 
                                        "-ip", 
                                        "-heartbeats", 
                                        "-node_type", 
                                        "-rdma_capable", 
                                        "-last_heartbeat", 
                                        "-name", 
                                        "-machine_id", 
                                        "-description", 
                                        "-package_information", 
                                        "-vdisks_guids", 
                                        "-detailed_status", 
                                        "-status", 
                                        "-partition_config", 
                                        "-regular_domains", 
                                        "-recovery_domains", 
                                        "-features", 
                                        "-statistics", 
                                        "-vpools_guids", 
                                        "-nbd_node_guid", 
                                        "-disks_guids", 
                                        "-storagedrivers_guids", 
                                        "-services_guids", 
                                        "-domains_guids", 
                                        "-alba_node_guid", 
                                        "-iscsi_node_guid"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "ip", 
                                        "heartbeats", 
                                        "node_type", 
                                        "rdma_capable", 
                                        "last_heartbeat", 
                                        "name", 
                                        "machine_id", 
                                        "description", 
                                        "package_information", 
                                        "vdisks_guids", 
                                        "detailed_status", 
                                        "status", 
                                        "partition_config", 
                                        "regular_domains", 
                                        "recovery_domains", 
                                        "features", 
                                        "statistics", 
                                        "vpools_guids", 
                                        "nbd_node_guid", 
                                        "disks_guids", 
                                        "storagedrivers_guids", 
                                        "services_guids", 
                                        "domains_guids", 
                                        "alba_node_guid", 
                                        "iscsi_node_guid", 
                                        "-ip", 
                                        "-heartbeats", 
                                        "-node_type", 
                                        "-rdma_capable", 
                                        "-last_heartbeat", 
                                        "-name", 
                                        "-machine_id", 
                                        "-description", 
                                        "-package_information", 
                                        "-vdisks_guids", 
                                        "-detailed_status", 
                                        "-status", 
                                        "-partition_config", 
                                        "-regular_domains", 
                                        "-recovery_domains", 
                                        "-features", 
                                        "-statistics", 
                                        "-vpools_guids", 
                                        "-nbd_node_guid", 
                                        "-disks_guids", 
                                        "-storagedrivers_guids", 
                                        "-services_guids", 
                                        "-domains_guids", 
                                        "-alba_node_guid", 
                                        "-iscsi_node_guid"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized StorageRouters.", 
                                    "items": {
                                        "$ref": "#/definitions/StorageRouter"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Gets all possible target Storage Routers for a given vDisk (e.g. when cloning, creating from template or moving)"
            }
        }, 
        "/vdisks/{guid}/is_volume_synced_up_to_snapshot/": {
            "post": {
                "operationId": "vdisks.post_is_volume_synced_up_to_snapshot", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "vdisk", 
                        "schema": {
                            "properties": {
                                "snapshot_id": {
                                    "description": " Snapshot to verify", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "snapshot_id"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Verify if volume is synced to Backend up to a specific snapshot", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Verify if volume is synced to Backend up to a specific snapshot"
            }
        }, 
        "/vdisks/{guid}/is_volume_synced_up_to_tlog/": {
            "post": {
                "operationId": "vdisks.post_is_volume_synced_up_to_tlog", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "vdisk", 
                        "schema": {
                            "properties": {
                                "tlog_name": {
                                    "description": " TLog name to verify", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "tlog_name"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Verify if volume is synced to Backend up to a specific tlog", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Verify if volume is synced to Backend up to a specific tlog"
            }
        }, 
        "/vdisks/{guid}/move/": {
            "post": {
                "operationId": "vdisks.post_move", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "vdisk", 
                        "schema": {
                            "properties": {
                                "force": {
                                    "description": " Indicate whether to force the migration (forcing the migration might cause data loss)", 
                                    "type": "boolean"
                                }, 
                                "target_storagerouter_guid": {
                                    "description": " Guid of the StorageRouter to move the vDisk to", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "target_storagerouter_guid"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Moves a vDisk", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Moves a vDisk"
            }
        }, 
        "/vdisks/{guid}/remove_snapshot/": {
            "post": {
                "operationId": "vdisks.post_remove_snapshot", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "vdisk", 
                        "schema": {
                            "properties": {
                                "snapshot_id": {
                                    "description": " ID of the snapshot to remove", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "snapshot_id"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Remove a snapshot from a vDisk", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Remove a snapshot from a vDisk"
            }
        }, 
        "/vdisks/{guid}/restart/": {
            "post": {
                "operationId": "vdisks.post_restart", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "vdisk", 
                        "schema": {
                            "properties": {
                                "force": {
                                    "description": " Force a restart at a possible cost of data loss", 
                                    "type": "boolean"
                                }
                            }, 
                            "required": [], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Restart a vDisk", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Restart a vDisk"
            }
        }, 
        "/vdisks/{guid}/rollback/": {
            "post": {
                "operationId": "vdisks.post_rollback", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "vdisk", 
                        "schema": {
                            "properties": {
                                "timestamp": {
                                    "description": " Timestamp of the snapshot to rollback to", 
                                    "type": "integer"
                                }
                            }, 
                            "required": [
                                "timestamp"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Rollbacks a vDisk to a given timestamp", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Rollbacks a vDisk to a given timestamp"
            }
        }, 
        "/vdisks/{guid}/schedule_backend_sync/": {
            "post": {
                "operationId": "vdisks.post_schedule_backend_sync", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Schedule a Backend sync on a vDisk", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Schedule a Backend sync on a vDisk"
            }
        }, 
        "/vdisks/{guid}/scrub/": {
            "post": {
                "operationId": "vdisks.post_scrub", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "vdisk", 
                        "schema": {
                            "properties": {
                                "storagerouter_guid": {
                                    "description": " The guid of the StorageRouter to do the scrubbing on", 
                                    "type": "string"
                                }
                            }, 
                            "required": [], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Scrubs a given vDisk on a given Storage Router", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Scrubs a given vDisk on a given Storage Router"
            }
        }, 
        "/vdisks/{guid}/set_as_template/": {
            "post": {
                "operationId": "vdisks.post_set_as_template", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Sets a vDisk as Template", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Sets a vDisk as Template"
            }
        }, 
        "/vdisks/{guid}/set_config_params/": {
            "post": {
                "operationId": "vdisks.post_set_config_params", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "vdisk", 
                        "schema": {
                            "properties": {
                                "new_config_params": {
                                    "description": " Configuration settings for the virtual disk", 
                                    "type": "object"
                                }
                            }, 
                            "required": [
                                "new_config_params"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Sets configuration parameters to a given vDisk.", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Sets configuration parameters to a given vDisk."
            }
        }, 
        "/vpools/": {
            "get": {
                "operationId": "vpools.list", 
                "parameters": [
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": "name", 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "rdma_enabled", 
                            "status", 
                            "metadata_store_bits", 
                            "metadata", 
                            "password", 
                            "login", 
                            "name", 
                            "connection", 
                            "description", 
                            "statistics", 
                            "extensible", 
                            "configuration", 
                            "volume_potentials", 
                            "identifier", 
                            "mds_services_guids", 
                            "vdisks_guids", 
                            "storagedrivers_guids", 
                            "-rdma_enabled", 
                            "-status", 
                            "-metadata_store_bits", 
                            "-metadata", 
                            "-password", 
                            "-login", 
                            "-name", 
                            "-connection", 
                            "-description", 
                            "-statistics", 
                            "-extensible", 
                            "-configuration", 
                            "-volume_potentials", 
                            "-identifier", 
                            "-mds_services_guids", 
                            "-vdisks_guids", 
                            "-storagedrivers_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "rdma_enabled", 
                            "status", 
                            "metadata_store_bits", 
                            "metadata", 
                            "password", 
                            "login", 
                            "name", 
                            "connection", 
                            "description", 
                            "statistics", 
                            "extensible", 
                            "configuration", 
                            "volume_potentials", 
                            "identifier", 
                            "mds_services_guids", 
                            "vdisks_guids", 
                            "storagedrivers_guids", 
                            "-rdma_enabled", 
                            "-status", 
                            "-metadata_store_bits", 
                            "-metadata", 
                            "-password", 
                            "-login", 
                            "-name", 
                            "-connection", 
                            "-description", 
                            "-statistics", 
                            "-extensible", 
                            "-configuration", 
                            "-volume_potentials", 
                            "-identifier", 
                            "-mds_services_guids", 
                            "-vdisks_guids", 
                            "-storagedrivers_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Overview of all vPools", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "rdma_enabled", 
                                        "status", 
                                        "metadata_store_bits", 
                                        "metadata", 
                                        "password", 
                                        "login", 
                                        "name", 
                                        "connection", 
                                        "description", 
                                        "statistics", 
                                        "extensible", 
                                        "configuration", 
                                        "volume_potentials", 
                                        "identifier", 
                                        "mds_services_guids", 
                                        "vdisks_guids", 
                                        "storagedrivers_guids", 
                                        "-rdma_enabled", 
                                        "-status", 
                                        "-metadata_store_bits", 
                                        "-metadata", 
                                        "-password", 
                                        "-login", 
                                        "-name", 
                                        "-connection", 
                                        "-description", 
                                        "-statistics", 
                                        "-extensible", 
                                        "-configuration", 
                                        "-volume_potentials", 
                                        "-identifier", 
                                        "-mds_services_guids", 
                                        "-vdisks_guids", 
                                        "-storagedrivers_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "rdma_enabled", 
                                        "status", 
                                        "metadata_store_bits", 
                                        "metadata", 
                                        "password", 
                                        "login", 
                                        "name", 
                                        "connection", 
                                        "description", 
                                        "statistics", 
                                        "extensible", 
                                        "configuration", 
                                        "volume_potentials", 
                                        "identifier", 
                                        "mds_services_guids", 
                                        "vdisks_guids", 
                                        "storagedrivers_guids", 
                                        "-rdma_enabled", 
                                        "-status", 
                                        "-metadata_store_bits", 
                                        "-metadata", 
                                        "-password", 
                                        "-login", 
                                        "-name", 
                                        "-connection", 
                                        "-description", 
                                        "-statistics", 
                                        "-extensible", 
                                        "-configuration", 
                                        "-volume_potentials", 
                                        "-identifier", 
                                        "-mds_services_guids", 
                                        "-vdisks_guids", 
                                        "-storagedrivers_guids"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized VPools.", 
                                    "items": {
                                        "$ref": "#/definitions/VPool"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Overview of all vPools"
            }
        }, 
        "/vpools/create_snapshots/": {
            "post": {
                "operationId": "vpools.post_create_snapshots", 
                "parameters": [
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "automatic": {
                                    "description": " Indicate whether the snaphots are taken by an automatic process or manually", 
                                    "type": "boolean"
                                }, 
                                "consistent": {
                                    "description": " Indicates whether the snapshots will contain consistent data", 
                                    "type": "boolean"
                                }, 
                                "name": {
                                    "description": " Name of the snapshot (label)", 
                                    "type": "string"
                                }, 
                                "sticky": {
                                    "description": " Indicates whether the system should clean the snapshots", 
                                    "type": "boolean"
                                }, 
                                "timestamp": {
                                    "description": " Timestamp of the snapshot", 
                                    "type": "integer"
                                }, 
                                "vdisk_guids": {
                                    "description": " Guids of the virtual disks to create snapshot from", 
                                    "items": {}, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "vdisk_guids", 
                                "name"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Creates snapshots for a list of VDisks", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Creates snapshots for a list of VDisks"
            }
        }, 
        "/vpools/remove_snapshots/": {
            "post": {
                "operationId": "vpools.post_remove_snapshots", 
                "parameters": [
                    {
                        "in": "body", 
                        "name": "body", 
                        "schema": {
                            "properties": {
                                "snapshot_mapping": {
                                    "description": " Dict containing vDisk guid / Snapshot ID(s) pairs", 
                                    "type": "object"
                                }
                            }, 
                            "required": [
                                "snapshot_mapping"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Remove a snapshot from a list of VDisks", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Remove a snapshot from a list of VDisks"
            }
        }, 
        "/vpools/{guid}/": {
            "get": {
                "operationId": "vpools.retrieve", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "rdma_enabled", 
                            "status", 
                            "metadata_store_bits", 
                            "metadata", 
                            "password", 
                            "login", 
                            "name", 
                            "connection", 
                            "description", 
                            "statistics", 
                            "extensible", 
                            "configuration", 
                            "volume_potentials", 
                            "identifier", 
                            "mds_services_guids", 
                            "vdisks_guids", 
                            "storagedrivers_guids", 
                            "-rdma_enabled", 
                            "-status", 
                            "-metadata_store_bits", 
                            "-metadata", 
                            "-password", 
                            "-login", 
                            "-name", 
                            "-connection", 
                            "-description", 
                            "-statistics", 
                            "-extensible", 
                            "-configuration", 
                            "-volume_potentials", 
                            "-identifier", 
                            "-mds_services_guids", 
                            "-vdisks_guids", 
                            "-storagedrivers_guids"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Load information about a given vPool", 
                        "schema": {
                            "$ref": "#/definitions/VPool"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Load information about a given vPool"
            }
        }, 
        "/vpools/{guid}/devicename_exists/": {
            "get": {
                "operationId": "vpools.get_devicename_exists", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "description": " Candidate name", 
                        "in": "query", 
                        "name": "name", 
                        "required": false, 
                        "type": "string"
                    }, 
                    {
                        "description": " Candidate names", 
                        "in": "query", 
                        "items": {}, 
                        "name": "names", 
                        "required": false, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Checks whether a given name can be created on the vPool", 
                        "schema": {
                            "description": "Whether the devicename exists", 
                            "type": "boolean"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Checks whether a given name can be created on the vPool"
            }
        }, 
        "/vpools/{guid}/scrub_all_vdisks/": {
            "post": {
                "operationId": "vpools.post_scrub_all_vdisks", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Scrubs the vDisks linked to the specified vPool", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Scrubs the vDisks linked to the specified vPool"
            }
        }, 
        "/vpools/{guid}/scrub_multiple_vdisks/": {
            "post": {
                "operationId": "vpools.post_scrub_multiple_vdisks", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "vpool", 
                        "schema": {
                            "properties": {
                                "vdisk_guids": {
                                    "description": " The guids of the vDisks to scrub", 
                                    "items": {}, 
                                    "type": "array"
                                }
                            }, 
                            "required": [], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Scrubs the specified vDisks or all vDisks of the vPool is no guids are passed in", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Scrubs the specified vDisks or all vDisks of the vPool is no guids are passed in"
            }
        }, 
        "/vpools/{guid}/shrink_vpool/": {
            "post": {
                "operationId": "vpools.post_shrink_vpool", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "in": "body", 
                        "name": "vpool", 
                        "schema": {
                            "properties": {
                                "storagerouter_guid": {
                                    "description": " Guid of the Storage Router", 
                                    "type": "string"
                                }
                            }, 
                            "required": [
                                "storagerouter_guid"
                            ], 
                            "type": "object"
                        }
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Remove the Storage Driver linking the specified vPool and storagerouter_guid", 
                        "schema": {
                            "description": "A task identifier.", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Remove the Storage Driver linking the specified vPool and storagerouter_guid"
            }
        }, 
        "/vpools/{guid}/storagerouters/": {
            "get": {
                "operationId": "vpools.get_storagerouters", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }, 
                    {
                        "description": "Specifies the page to be returned.", 
                        "in": "query", 
                        "name": "page", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "description": "Specifies the size of a page. Supported values: 10, 25, 50 and 100. Requires \"page\" to be set.", 
                        "in": "query", 
                        "name": "page_size", 
                        "required": false, 
                        "type": "integer"
                    }, 
                    {
                        "default": null, 
                        "description": "Specifies the sorting of the list.", 
                        "enum": [
                            "guid", 
                            "-guid", 
                            "ip", 
                            "heartbeats", 
                            "node_type", 
                            "rdma_capable", 
                            "last_heartbeat", 
                            "name", 
                            "machine_id", 
                            "description", 
                            "package_information", 
                            "vdisks_guids", 
                            "detailed_status", 
                            "status", 
                            "partition_config", 
                            "regular_domains", 
                            "recovery_domains", 
                            "features", 
                            "statistics", 
                            "vpools_guids", 
                            "nbd_node_guid", 
                            "disks_guids", 
                            "storagedrivers_guids", 
                            "services_guids", 
                            "domains_guids", 
                            "alba_node_guid", 
                            "iscsi_node_guid", 
                            "-ip", 
                            "-heartbeats", 
                            "-node_type", 
                            "-rdma_capable", 
                            "-last_heartbeat", 
                            "-name", 
                            "-machine_id", 
                            "-description", 
                            "-package_information", 
                            "-vdisks_guids", 
                            "-detailed_status", 
                            "-status", 
                            "-partition_config", 
                            "-regular_domains", 
                            "-recovery_domains", 
                            "-features", 
                            "-statistics", 
                            "-vpools_guids", 
                            "-nbd_node_guid", 
                            "-disks_guids", 
                            "-storagedrivers_guids", 
                            "-services_guids", 
                            "-domains_guids", 
                            "-alba_node_guid", 
                            "-iscsi_node_guid"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "sort", 
                        "required": false, 
                        "type": "array"
                    }, 
                    {
                        "collectionFormat": "csv", 
                        "description": "Specify the returned contents.", 
                        "enum": [
                            "_dynamics", 
                            "_relations", 
                            "guid", 
                            "ip", 
                            "heartbeats", 
                            "node_type", 
                            "rdma_capable", 
                            "last_heartbeat", 
                            "name", 
                            "machine_id", 
                            "description", 
                            "package_information", 
                            "vdisks_guids", 
                            "detailed_status", 
                            "status", 
                            "partition_config", 
                            "regular_domains", 
                            "recovery_domains", 
                            "features", 
                            "statistics", 
                            "vpools_guids", 
                            "nbd_node_guid", 
                            "disks_guids", 
                            "storagedrivers_guids", 
                            "services_guids", 
                            "domains_guids", 
                            "alba_node_guid", 
                            "iscsi_node_guid", 
                            "-ip", 
                            "-heartbeats", 
                            "-node_type", 
                            "-rdma_capable", 
                            "-last_heartbeat", 
                            "-name", 
                            "-machine_id", 
                            "-description", 
                            "-package_information", 
                            "-vdisks_guids", 
                            "-detailed_status", 
                            "-status", 
                            "-partition_config", 
                            "-regular_domains", 
                            "-recovery_domains", 
                            "-features", 
                            "-statistics", 
                            "-vpools_guids", 
                            "-nbd_node_guid", 
                            "-disks_guids", 
                            "-storagedrivers_guids", 
                            "-services_guids", 
                            "-domains_guids", 
                            "-alba_node_guid", 
                            "-iscsi_node_guid"
                        ], 
                        "in": "query", 
                        "items": {
                            "type": "string"
                        }, 
                        "name": "contents", 
                        "required": true, 
                        "type": "array"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Retrieves a list of Storage Routers, serving a given vPool", 
                        "schema": {
                            "properties": {
                                "_contents": {
                                    "collectionFormat": "csv", 
                                    "description": "Requested contents.", 
                                    "enum": [
                                        "_dynamics", 
                                        "_relations", 
                                        "guid", 
                                        "ip", 
                                        "heartbeats", 
                                        "node_type", 
                                        "rdma_capable", 
                                        "last_heartbeat", 
                                        "name", 
                                        "machine_id", 
                                        "description", 
                                        "package_information", 
                                        "vdisks_guids", 
                                        "detailed_status", 
                                        "status", 
                                        "partition_config", 
                                        "regular_domains", 
                                        "recovery_domains", 
                                        "features", 
                                        "statistics", 
                                        "vpools_guids", 
                                        "nbd_node_guid", 
                                        "disks_guids", 
                                        "storagedrivers_guids", 
                                        "services_guids", 
                                        "domains_guids", 
                                        "alba_node_guid", 
                                        "iscsi_node_guid", 
                                        "-ip", 
                                        "-heartbeats", 
                                        "-node_type", 
                                        "-rdma_capable", 
                                        "-last_heartbeat", 
                                        "-name", 
                                        "-machine_id", 
                                        "-description", 
                                        "-package_information", 
                                        "-vdisks_guids", 
                                        "-detailed_status", 
                                        "-status", 
                                        "-partition_config", 
                                        "-regular_domains", 
                                        "-recovery_domains", 
                                        "-features", 
                                        "-statistics", 
                                        "-vpools_guids", 
                                        "-nbd_node_guid", 
                                        "-disks_guids", 
                                        "-storagedrivers_guids", 
                                        "-services_guids", 
                                        "-domains_guids", 
                                        "-alba_node_guid", 
                                        "-iscsi_node_guid"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "_paging": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number.", 
                                            "type": "integer"
                                        }, 
                                        "end_number": {
                                            "description": "1-based index of the last item in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "max_page": {
                                            "description": "Last page available.", 
                                            "type": "integer"
                                        }, 
                                        "page_size": {
                                            "description": "Number of items in the current page.", 
                                            "type": "integer"
                                        }, 
                                        "start_number": {
                                            "description": "1-based index of the first item in the current page", 
                                            "type": "integer"
                                        }, 
                                        "total_items": {
                                            "description": "Total items available.", 
                                            "type": "integer"
                                        }
                                    }, 
                                    "required": [
                                        "total_items", 
                                        "max_page", 
                                        "end_number", 
                                        "current_page", 
                                        "page_size", 
                                        "start_number"
                                    ], 
                                    "title": "PagingMetadata", 
                                    "type": "object"
                                }, 
                                "_sorting": {
                                    "collectionFormat": "csv", 
                                    "description": "Applied sorting", 
                                    "enum": [
                                        "-guid", 
                                        "guid", 
                                        "ip", 
                                        "heartbeats", 
                                        "node_type", 
                                        "rdma_capable", 
                                        "last_heartbeat", 
                                        "name", 
                                        "machine_id", 
                                        "description", 
                                        "package_information", 
                                        "vdisks_guids", 
                                        "detailed_status", 
                                        "status", 
                                        "partition_config", 
                                        "regular_domains", 
                                        "recovery_domains", 
                                        "features", 
                                        "statistics", 
                                        "vpools_guids", 
                                        "nbd_node_guid", 
                                        "disks_guids", 
                                        "storagedrivers_guids", 
                                        "services_guids", 
                                        "domains_guids", 
                                        "alba_node_guid", 
                                        "iscsi_node_guid", 
                                        "-ip", 
                                        "-heartbeats", 
                                        "-node_type", 
                                        "-rdma_capable", 
                                        "-last_heartbeat", 
                                        "-name", 
                                        "-machine_id", 
                                        "-description", 
                                        "-package_information", 
                                        "-vdisks_guids", 
                                        "-detailed_status", 
                                        "-status", 
                                        "-partition_config", 
                                        "-regular_domains", 
                                        "-recovery_domains", 
                                        "-features", 
                                        "-statistics", 
                                        "-vpools_guids", 
                                        "-nbd_node_guid", 
                                        "-disks_guids", 
                                        "-storagedrivers_guids", 
                                        "-services_guids", 
                                        "-domains_guids", 
                                        "-alba_node_guid", 
                                        "-iscsi_node_guid"
                                    ], 
                                    "items": {
                                        "type": "string"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }, 
                                "data": {
                                    "description": "List of serialized StorageRouters.", 
                                    "items": {
                                        "$ref": "#/definitions/StorageRouter"
                                    }, 
                                    "required": true, 
                                    "type": "array"
                                }
                            }, 
                            "required": [
                                "_contents", 
                                "_paging", 
                                "_sorting", 
                                "data"
                            ], 
                            "title": "DataList", 
                            "type": "object"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Retrieves a list of Storage Routers, serving a given vPool"
            }
        }, 
        "/vpools/{guid}/sync_with_reality/": {
            "post": {
                "operationId": "vpools.post_sync_with_reality", 
                "parameters": [
                    {
                        "description": "Identifier of the object on which to call is applied.", 
                        "in": "path", 
                        "name": "guid", 
                        "required": true, 
                        "type": "string"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Syncs the model for a given vPool with real values.", 
                        "schema": {
                            "description": "A task identifier. The task returns: Asynchronous result of a CeleryTask", 
                            "type": "string"
                        }
                    }, 
                    "default": {
                        "description": "Error payload", 
                        "schema": {
                            "$ref": "#/definitions/APIError"
                        }
                    }
                }, 
                "summary": "Syncs the model for a given vPool with real values."
            }
        }
    }, 
    "produces": [
        "application/json; version=8"
    ], 
    "schemes": [
        "https"
    ], 
    "security": [
        {
            "Bearer": []
        }, 
        {
            "oauth2": [
                "read", 
                "write", 
                "manage"
            ]
        }
    ], 
    "securityDefinitions": {
        "Bearer": {
            "description": "Enter your bearer token", 
            "in": "header", 
            "name": "Authorization", 
            "type": "apiKey"
        }, 
        "oauth2": {
            "flow": "password", 
            "scopes": {
                "manage": "Management access", 
                "read": "Read access", 
                "write": "Write access"
            }, 
            "tokenUrl": "/api/oauth2/token/", 
            "type": "oauth2"
        }
    }, 
    "swagger": "2.0"
}